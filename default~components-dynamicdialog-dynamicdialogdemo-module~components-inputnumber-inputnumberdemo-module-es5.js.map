{"version":3,"sources":["webpack:///src/app/components/dynamicdialog/dialogservice.ts","webpack:///src/app/components/dynamicdialog/dynamicdialog-config.ts","webpack:///src/app/components/dynamicdialog/dynamicdialog-injector.ts","webpack:///src/app/components/dynamicdialog/dynamicdialog-ref.ts","webpack:///src/app/components/dynamicdialog/dynamicdialog.ts","webpack:///src/app/components/dynamicdialog/dynamicdialogcontent.ts"],"names":["DialogService","componentFactoryResolver","appRef","injector","open","componentType","config","dialogRef","appendDialogComponentToBody","dialogComponentRef","instance","childComponentType","map","WeakMap","set","sub","onClose","subscribe","close","destroySub","onDestroy","removeDialogComponentFromBody","unsubscribe","componentFactory","resolveComponentFactory","componentRef","create","attachView","hostView","domElem","rootNodes","document","body","appendChild","detachView","destroy","DynamicDialogConfig","DynamicDialogInjector","_parentInjector","_additionalTokens","get","token","notFoundValue","flags","value","DynamicDialogRef","_onClose","asObservable","_onDestroy","result","next","showAnimation","transform","opacity","hideAnimation","DynamicDialogComponent","cd","renderer","zone","visible","transformOptions","ngAfterViewInit","loadChildComponent","detectChanges","viewContainerRef","insertionPoint","clear","createComponent","moveOnTop","autoZIndex","zIndex","baseZIndex","zindex","container","style","String","maskViewChild","nativeElement","onAnimationStart","event","toState","element","wrapper","parentElement","bindGlobalListeners","modal","enableModality","focus","onContainerDestroy","onAnimationEnd","unbindGlobalListeners","disableModality","closable","dismissableMask","maskClickListener","listen","isSameNode","target","addClass","unbindMaskClickListener","removeClass","destroyed","onKeydown","which","preventDefault","focusableElements","getFocusableElements","length","activeElement","focusedIndex","indexOf","shiftKey","focusable","findSingle","runOutsideAngular","setTimeout","bindDocumentKeydownListener","closeOnEscape","bindDocumentEscapeListener","unbindDocumentKeydownListener","unbindDocumentEscapeListener","documentKeydownListener","bind","window","addEventListener","removeEventListener","documentEscapeListener","parseInt","ngOnDestroy","selector","template","animations","changeDetection","Default","DynamicDialogModule","imports","declarations","entryComponents","DynamicDialogContent"],"mappings":"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","file":"default~components-dynamicdialog-dynamicdialogdemo-module~components-inputnumber-inputnumberdemo-module-es5.js","sourcesContent":["import { Injectable, ComponentFactoryResolver, ApplicationRef, Injector, Type, EmbeddedViewRef, ComponentRef } from '@angular/core';\nimport { DynamicDialogComponent } from './dynamicdialog';\nimport { DynamicDialogInjector } from './dynamicdialog-injector';\nimport { DynamicDialogConfig } from './dynamicdialog-config';\nimport { DynamicDialogRef } from './dynamicdialog-ref';\n\n@Injectable()\nexport class DialogService {\n    \n    dialogComponentRef: ComponentRef<DynamicDialogComponent>;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ApplicationRef, private injector: Injector) { }\n\n    public open(componentType: Type<any>, config: DynamicDialogConfig) {\n        const dialogRef = this.appendDialogComponentToBody(config);\n\n        this.dialogComponentRef.instance.childComponentType = componentType;\n\n        return dialogRef;\n    }\n\n    private appendDialogComponentToBody(config: DynamicDialogConfig) {\n        const map = new WeakMap();\n        map.set(DynamicDialogConfig, config);\n\n        const dialogRef = new DynamicDialogRef();\n        map.set(DynamicDialogRef, dialogRef);\n\n        const sub = dialogRef.onClose.subscribe(() => {\n            this.dialogComponentRef.instance.close();\n        });\n\n        const destroySub = dialogRef.onDestroy.subscribe(() => {\n            this.removeDialogComponentFromBody();\n            destroySub.unsubscribe();\n            sub.unsubscribe();\n        });\n\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent);\n        const componentRef = componentFactory.create(new DynamicDialogInjector(this.injector, map));\n\n        this.appRef.attachView(componentRef.hostView);\n\n        const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n        document.body.appendChild(domElem);\n\n        this.dialogComponentRef = componentRef;\n\n        return dialogRef;\n    }\n\n    private removeDialogComponentFromBody() {\n        this.appRef.detachView(this.dialogComponentRef.hostView);\n        this.dialogComponentRef.destroy();\n    }\n}\n","export class DynamicDialogConfig {\r\n\tdata?: any;\r\n\theader?: string;\r\n\tfooter?: string;\r\n\twidth?: string;\r\n\theight?: string;\r\n\tcloseOnEscape?: boolean;\r\n\tbaseZIndex?: number;\r\n\tautoZIndex?: boolean;\r\n\tdismissableMask?: boolean;\r\n\trtl?: boolean;\r\n\tstyle?: any;\r\n\tcontentStyle?: any;\r\n\tstyleClass?: string;\r\n\ttransitionOptions?: string;\r\n\tclosable?: boolean;\r\n\tshowHeader?: boolean;\r\n\tmodal?: boolean;\r\n}\r\n","import { Injector, Type, InjectionToken, InjectFlags } from '@angular/core';\r\n\r\nexport class DynamicDialogInjector implements Injector {\r\n\t\r\n\tconstructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) { }\r\n\r\n\tget<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\r\n\tget(token: any, notFoundValue?: any);\r\n\tget(token: any, notFoundValue?: any, flags?: any) {\r\n\t\tconst value = this._additionalTokens.get(token);\r\n\r\n\t\tif (value) return value;\r\n\r\n\t\treturn this._parentInjector.get<any>(token, notFoundValue);\r\n\t}\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\n\r\nexport class DynamicDialogRef {\r\n\tconstructor() { }\r\n\r\n\tclose(result?: any) {\r\n\t\tthis._onClose.next(result);\r\n    }\r\n    \r\n    destroy() {\r\n\t\tthis._onDestroy.next();\r\n\t}\r\n\r\n\tprivate readonly _onClose = new Subject<any>();\r\n    onClose: Observable<any> = this._onClose.asObservable();\r\n\r\n    private readonly _onDestroy = new Subject<any>();\r\n\tonDestroy: Observable<any> = this._onDestroy.asObservable();\r\n}\r\n","import { Component, NgModule, Type, ComponentFactoryResolver, ViewChild, OnDestroy, ComponentRef, AfterViewInit, ChangeDetectorRef, Renderer2, NgZone, ElementRef, ChangeDetectionStrategy, ViewRef } from '@angular/core';\nimport { trigger,style,transition,animate,AnimationEvent, animation, useAnimation } from '@angular/animations';\nimport { DynamicDialogContent } from './dynamicdialogcontent';\nimport { DynamicDialogConfig } from './dynamicdialog-config';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { DynamicDialogRef } from './dynamicdialog-ref';\n\nconst showAnimation = animation([\n    style({ transform: '{{transform}}', opacity: 0 }),\n    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))\n]);\n\nconst hideAnimation = animation([\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\n]);\n\n@Component({\n\tselector: 'p-dynamicDialog',\n\ttemplate: `\n        <div #mask [ngClass]=\"{'ui-dialog-mask ui-dialog-visible':true, 'ui-widget-overlay ui-dialog-mask-scrollblocker': config.modal !== false}\">\n            <div [ngClass]=\"{'ui-dialog ui-dynamicdialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl': config.rtl}\" [ngStyle]=\"config.style\" [class]=\"config.styleClass\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: config.transitionOptions || '150ms cubic-bezier(0, 0, 0.2, 1)'}}\"\n                (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" *ngIf=\"visible\"\n                [style.width]=\"config.width\" [style.height]=\"config.height\">\n                <div class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" *ngIf=\"config.showHeader === false ? false: true\">\n                    <span class=\"ui-dialog-title\">{{config.header}}</span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a [ngClass]=\"'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all'\" tabindex=\"0\" role=\"button\" (click)=\"close()\" (keydown.enter)=\"close()\" *ngIf=\"config.closable !== false\">\n                            <span class=\"pi pi-times\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"config.contentStyle\">\n                    <ng-template pDynamicDialogContent></ng-template>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"config.footer\">\n                    {{config.footer}}\n                </div>\n            </div>\n        </div>\n\t`,\n\tanimations: [\n        trigger('animation', [\n            transition('void => visible', [\n                useAnimation(showAnimation)\n            ]),\n            transition('visible => void', [\n                useAnimation(hideAnimation)\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class DynamicDialogComponent implements AfterViewInit, OnDestroy {\n\n\tvisible: boolean = true;\n\n\tcomponentRef: ComponentRef<any>;\n\n\tmask: HTMLDivElement;\n\n\t@ViewChild(DynamicDialogContent) insertionPoint: DynamicDialogContent;\n\n\t@ViewChild('mask') maskViewChild: ElementRef;\n\n\tchildComponentType: Type<any>;\n\n    container: HTMLDivElement;\n\n    wrapper: HTMLElement;\n\n    documentKeydownListener: any;\n\n    documentEscapeListener: Function;\n\n    maskClickListener: Function;\n\n    transformOptions: string = \"scale(0.7)\";\n\n\tconstructor(private componentFactoryResolver: ComponentFactoryResolver, private cd: ChangeDetectorRef, public renderer: Renderer2,\n\t\t\tpublic config: DynamicDialogConfig, private dialogRef: DynamicDialogRef, public zone: NgZone) { }\n\n\tngAfterViewInit() {\n\t\tthis.loadChildComponent(this.childComponentType);\n\t\tthis.cd.detectChanges();\n\t}\n\n\tloadChildComponent(componentType: Type<any>) {\n\t\tlet componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n\t\tlet viewContainerRef = this.insertionPoint.viewContainerRef;\n\t\tviewContainerRef.clear();\n\n\t\tthis.componentRef = viewContainerRef.createComponent(componentFactory);\n\t}\n\n\tmoveOnTop() {\n        if (this.config.autoZIndex !== false) {\n\t\t\tconst zIndex = (this.config.baseZIndex||0) + (++DomHandler.zindex);\n\t\t\tthis.container.style.zIndex = String(zIndex);\n\t\t\tthis.maskViewChild.nativeElement.style.zIndex = String(zIndex - 1);\n\t\t}\n    }\n\n\tonAnimationStart(event: AnimationEvent) {\n\t\tswitch(event.toState) {\n\t\t\tcase 'visible':\n                this.container = event.element;\n                this.wrapper = this.container.parentElement;\n\t\t\t\tthis.moveOnTop();\n                this.bindGlobalListeners();\n\n                if (this.config.modal !== false) {\n                    this.enableModality();\n                }\n                this.focus();\n\t\t\tbreak;\n\n\t\t\tcase 'void':\n\t\t\t\tthis.onContainerDestroy();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tonAnimationEnd(event: AnimationEvent) {\n\t\tif (event.toState === 'void') {\n\t\t\tthis.dialogRef.destroy();\n\t\t}\n\t}\n\n\tonContainerDestroy() {\n\t\tthis.unbindGlobalListeners();\n        \n        if (this.config.modal !== false) {\n            this.disableModality();\n        }\n        this.container = null;\n\t}\n\n\tclose() {\n        this.visible = false;\n\t}\n\n    enableModality() {\n        if (this.config.closable !== false && this.config.dismissableMask) {\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'click', (event: any) => {\n                if (this.wrapper && this.wrapper.isSameNode(event.target)) {\n                    this.close();\n                }\n            });\n        }\n\n        if (this.config.modal !== false) {\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        if (this.wrapper) {\n            if (this.config.dismissableMask) {\n                this.unbindMaskClickListener();\n            }\n\n            if (this.config.modal !== false) {\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            }\n\n            if (!(this.cd as ViewRef).destroyed) {\n                this.cd.detectChanges();\n            }\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (event.which === 9) {\n            event.preventDefault();\n\n            let focusableElements = DomHandler.getFocusableElements(this.container);\n\n            if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                    if (event.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, 'a');\n        if (focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n\tbindGlobalListeners() {\n        this.bindDocumentKeydownListener();\n\n        if (this.config.closeOnEscape !== false && this.config.closable !== false) {\n            this.bindDocumentEscapeListener();\n        }\n    }\n\n    unbindGlobalListeners() {\n        this.unbindDocumentKeydownListener();\n        this.unbindDocumentEscapeListener();\n    }\n\n    bindDocumentKeydownListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentKeydownListener = this.onKeydown.bind(this);\n            window.document.addEventListener('keydown', this.documentKeydownListener);\n        });\n    }\n\n    unbindDocumentKeydownListener() {\n        if (this.documentKeydownListener) {\n            window.document.removeEventListener('keydown', this.documentKeydownListener);\n            this.documentKeydownListener = null;\n        }\n    }\n\n\tbindDocumentEscapeListener() {\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) == (DomHandler.zindex + (this.config.baseZIndex ? this.config.baseZIndex : 0))) {\n\t\t\t\t\tthis.close();\n\t\t\t\t}\n            }\n        });\n    }\n\n    unbindDocumentEscapeListener() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n\n\tngOnDestroy() {\n\t\tthis.onContainerDestroy();\n\n\t\tif (this.componentRef) {\n\t\t\tthis.componentRef.destroy();\n\t\t}\n\t}\n}\n\n@NgModule({\n\timports: [CommonModule],\n\tdeclarations: [DynamicDialogComponent, DynamicDialogContent],\n\tentryComponents: [DynamicDialogComponent]\n})\nexport class DynamicDialogModule { }\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[pDynamicDialogContent]'\n})\nexport class DynamicDialogContent {\n  \n\tconstructor(public viewContainerRef: ViewContainerRef) {}\n\n}\n"]}