{"version":3,"sources":["webpack:///src/app/components/megamenu/megamenu.ts","webpack:///src/app/components/megamenu/public_api.ts"],"names":["MegaMenu","el","renderer","orientation","autoZIndex","baseZIndex","onItemMouseEnter","event","item","menuitem","disabled","hideTimeout","clearTimeout","activeItem","items","submenu","children","nextElementSibling","style","zIndex","String","zindex","top","getOuterHeight","left","getOuterWidth","onItemMouseLeave","link","setTimeout","itemClick","preventDefault","url","command","originalEvent","getColumnClass","length","columnClass","selector","template","changeDetection","Default","MegaMenuModule","imports","exports","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,QAAaA,QAAQ;AAkBjB,wBAAmBC,EAAnB,EAA0CC,QAA1C,EAA+D;AAAA;;AAA5C,aAAAD,EAAA,GAAAA,EAAA;AAAuB,aAAAC,QAAA,GAAAA,QAAA;AAVjC,aAAAC,WAAA,GAAsB,YAAtB;AAEA,aAAAC,UAAA,GAAsB,IAAtB;AAEA,aAAAC,UAAA,GAAqB,CAArB;AAMwD;;AAlBhD;AAAA;AAAA,eAoBjB,SAAAC,gBAAgB,CAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAAsC;AAClD,cAAIA,QAAQ,CAACC,QAAb,EAAuB;AACnB;AACH;;AAED,cAAI,KAAKC,WAAT,EAAsB;AAClBC,wBAAY,CAAC,KAAKD,WAAN,CAAZ;AACA,iBAAKA,WAAL,GAAmB,IAAnB;AACH;;AAED,eAAKE,UAAL,GAAkBL,IAAlB;;AAEA,cAAIC,QAAQ,CAACK,KAAb,EAAoB;AAChB,gBAAIC,OAAO,GAAGP,IAAI,CAACQ,QAAL,CAAc,CAAd,EAAiBC,kBAA/B;;AACA,gBAAIF,OAAJ,EAAa;AACT,kBAAI,KAAKX,UAAT,EAAqB;AACjBW,uBAAO,CAACG,KAAR,CAAcC,MAAd,GAAuBC,MAAM,CAAC,KAAKf,UAAL,GAAmB,EAAE,uDAAWgB,MAAjC,CAA7B;AACH;;AAED,kBAAI,KAAKlB,WAAL,KAAqB,YAAzB,EAAuC;AACnCY,uBAAO,CAACG,KAAR,CAAcI,GAAd,GAAoB,uDAAWC,cAAX,CAA0Bf,IAAI,CAACQ,QAAL,CAAc,CAAd,CAA1B,IAA8C,IAAlE;AACAD,uBAAO,CAACG,KAAR,CAAcM,IAAd,GAAqB,KAArB;AACH,eAHD,MAIK,IAAI,KAAKrB,WAAL,KAAqB,UAAzB,EAAqC;AACtCY,uBAAO,CAACG,KAAR,CAAcI,GAAd,GAAoB,KAApB;AACAP,uBAAO,CAACG,KAAR,CAAcM,IAAd,GAAqB,uDAAWC,aAAX,CAAyBjB,IAAI,CAACQ,QAAL,CAAc,CAAd,CAAzB,IAA6C,IAAlE;AACH;AACJ;AACJ;AACJ;AAjDgB;AAAA;AAAA,eAmDjB,SAAAU,gBAAgB,CAACnB,KAAD,EAAQoB,IAAR,EAAc;AAAA;;AAC1B,eAAKhB,WAAL,GAAmBiB,UAAU,CAAC,YAAM;AAChC,iBAAI,CAACf,UAAL,GAAkB,IAAlB;AACH,WAF4B,EAE1B,IAF0B,CAA7B;AAGH;AAvDgB;AAAA;AAAA,eAyDjB,SAAAgB,SAAS,CAACtB,KAAD,EAAQC,IAAR,EAAqC;AAC1C,cAAIA,IAAI,CAACE,QAAT,EAAmB;AACfH,iBAAK,CAACuB,cAAN;AACA;AACH;;AAED,cAAI,CAACtB,IAAI,CAACuB,GAAV,EAAe;AACXxB,iBAAK,CAACuB,cAAN;AACH;;AAED,cAAItB,IAAI,CAACwB,OAAT,EAAkB;AACdxB,gBAAI,CAACwB,OAAL,CAAa;AACTC,2BAAa,EAAE1B,KADN;AAETC,kBAAI,EAAEA;AAFG,aAAb;AAIH;;AAED,eAAKK,UAAL,GAAkB,IAAlB;AACH;AA3EgB;AAAA;AAAA,eA6EjB,SAAAqB,cAAc,CAACzB,QAAD,EAAyB;AACnC,cAAI0B,MAAM,GAAG1B,QAAQ,CAACK,KAAT,GAAiBL,QAAQ,CAACK,KAAT,CAAeqB,MAAhC,GAAwC,CAArD;AACA,cAAIC,WAAJ;;AACA,kBAAOD,MAAP;AACI,iBAAK,CAAL;AACIC,yBAAW,GAAE,mBAAb;AACJ;;AAEA,iBAAK,CAAL;AACIA,yBAAW,GAAE,mBAAb;AACJ;;AAEA,iBAAK,CAAL;AACIA,yBAAW,GAAE,mBAAb;AACJ;;AAEA,iBAAK,CAAL;AACIA,yBAAW,GAAE,mBAAb;AACJ;;AAEA;AACIA,yBAAW,GAAE,oBAAb;AACJ;AAnBJ;;AAsBA,iBAAOA,WAAP;AACH;AAvGgB;AAAA,OAArB;;;;cAkB2B;;cAA6B;;;;AAhB3C,8DAAR,6DAAQ,E,8EAAA,G,kBAAA,E,OAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,+EAAA,G,kBAAA,E,OAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,+EAAA,G,kBAAA,E,YAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,+EAAA,G,kBAAA,E,aAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,gFAAA,G,kBAAA,E,YAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,+EAAA,G,kBAAA,E,YAAA,E,MAAA;AAZApC,YAAQ,6DAlEpB,gEAAU;AACPqC,cAAQ,EAAE,YADH;AAEPC,cAAQ,+1NAFD;AAgEPC,qBAAe,EAAE,sEAAwBC;AAhElC,KAAV,CAkEoB,E,+EAkBM,wD,EAA6B,uD,EAlBnC,GAARxC,QAAQ,CAAR;;AA+Gb,QAAayC,cAAc;AAAA;AAAA,MAA3B;;AAAaA,kBAAc,6DAL1B,+DAAS;AACNC,aAAO,EAAE,CAAC,4DAAD,EAAc,4DAAd,CADH;AAENC,aAAO,EAAE,CAAC3C,QAAD,EAAU,4DAAV,CAFH;AAGN4C,kBAAY,EAAE,CAAC5C,QAAD;AAHR,KAAT,CAK0B,GAAdyC,cAAc,CAAd;;;;;;;;;;;;;;;;ACvLb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA","file":"default~components-inputnumber-inputnumberdemo-module~components-megamenu-megamenudemo-module-es5.js","sourcesContent":["import {NgModule,Component,ElementRef,Input,Renderer2,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {MegaMenuItem,MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\n@Component({\n    selector: 'p-megaMenu',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\"\n            [ngClass]=\"{'ui-megamenu ui-widget ui-widget-content ui-corner-all':true,'ui-megamenu-horizontal': orientation == 'horizontal','ui-megamenu-vertical': orientation == 'vertical'}\">\n            <ul class=\"ui-megamenu-root-list\" role=\"menubar\">\n                <ng-template ngFor let-category [ngForOf]=\"model\">\n                    <li *ngIf=\"category.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': category.visible === false}\">\n                    <li *ngIf=\"!category.separator\" #item [ngClass]=\"{'ui-menuitem ui-corner-all':true,'ui-menuitem-active':item==activeItem, 'ui-helper-hidden': category.visible === false}\"\n                        (mouseenter)=\"onItemMouseEnter($event, item, category)\" (mouseleave)=\"onItemMouseLeave($event, item)\">\n   \n                        <a *ngIf=\"!category.routerLink\" [href]=\"category.url||'#'\" [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\" (click)=\"itemClick($event, category)\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\"\n                            [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\">\n                            <span class=\"ui-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\n                            <span class=\"ui-menuitem-text\">{{category.label}}</span>\n                            <span *ngIf=\"category.items\" class=\"ui-submenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-down':orientation=='horizontal','pi-caret-right':orientation=='vertical'}\"></span>\n                        </a>\n                        <a *ngIf=\"category.routerLink\" [routerLink]=\"category.routerLink\" [queryParams]=\"category.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"category.routerLinkActiveOptions||{exact:false}\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\" \n                            [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\"\n                            (click)=\"itemClick($event, category)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\"\n                            [fragment]=\"category.fragment\" [queryParamsHandling]=\"category.queryParamsHandling\" [preserveFragment]=\"category.preserveFragment\" [skipLocationChange]=\"category.skipLocationChange\" [replaceUrl]=\"category.replaceUrl\" [state]=\"category.state\">\n                            <span class=\"ui-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\n                            <span class=\"ui-menuitem-text\">{{category.label}}</span>\n                        </a>\n\n                        <div class=\"ui-megamenu-panel ui-widget-content ui-corner-all ui-shadow\" *ngIf=\"category.items\">\n                            <div class=\"ui-megamenu-grid\">\n                                <ng-template ngFor let-column [ngForOf]=\"category.items\">\n                                    <div [class]=\"getColumnClass(category)\">\n                                        <ng-template ngFor let-submenu [ngForOf]=\"column\">\n                                            <ul class=\"ui-megamenu-submenu\" role=\"menu\">\n                                                <li class=\"ui-widget-header ui-megamenu-submenu-header ui-corner-all\">{{submenu.label}}</li>\n                                                <ng-template ngFor let-item [ngForOf]=\"submenu.items\">\n                                                    <li *ngIf=\"item.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" role=\"separator\">\n                                                    <li *ngIf=\"!item.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" role=\"none\">\n                                                        <a *ngIf=\"!item.routerLink\" role=\"menuitem\" [href]=\"item.url||'#'\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\n                                                            [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\">\n                                                            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\n                                                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                                                        </a>\n                                                        <a *ngIf=\"item.routerLink\" role=\"menuitem\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\n                                                            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \n                                                             [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\"\n                                                            [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\"\n                                                            [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                                                            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\n                                                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                                                        </a>\n                                                    </li>\n                                                </ng-template>\n                                            </ul>\n                                        </ng-template>\n                                    </div>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </li>\n                </ng-template>\n                <li class=\"ui-menuitem ui-menuitem-custom ui-corner-all\" *ngIf=\"orientation === 'horizontal'\">\n                    <ng-content></ng-content>\n                </li>\n            </ul>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class MegaMenu {\n\n    @Input() model: MegaMenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() orientation: string = 'horizontal';\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n    \n    activeItem: any;\n\n    hideTimeout: any;\n                \n    constructor(public el: ElementRef, public renderer: Renderer2) {}\n    \n    onItemMouseEnter(event, item, menuitem: MegaMenuItem) {\n        if (menuitem.disabled) {\n            return;\n        }\n\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n        \n        this.activeItem = item;\n\n        if (menuitem.items) {\n            let submenu = item.children[0].nextElementSibling;\n            if (submenu) {\n                if (this.autoZIndex) {\n                    submenu.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                }\n\n                if (this.orientation === 'horizontal') {\n                    submenu.style.top = DomHandler.getOuterHeight(item.children[0]) + 'px';\n                    submenu.style.left = '0px';\n                }\n                else if (this.orientation === 'vertical') {\n                    submenu.style.top = '0px';\n                    submenu.style.left = DomHandler.getOuterWidth(item.children[0]) + 'px';\n                }\n            }\n        }\n    }\n    \n    onItemMouseLeave(event, link) {\n        this.hideTimeout = setTimeout(() => {\n            this.activeItem = null;\n        }, 1000);\n    }\n    \n    itemClick(event, item: MenuItem | MegaMenuItem) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n        \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n                        \n        this.activeItem = null;\n    }\n    \n    getColumnClass(menuitem: MegaMenuItem) {\n        let length = menuitem.items ? menuitem.items.length: 0;\n        let columnClass;\n        switch(length) {\n            case 2:\n                columnClass= 'ui-megamenu-col-6';\n            break;\n            \n            case 3:\n                columnClass= 'ui-megamenu-col-4';\n            break;\n            \n            case 4:\n                columnClass= 'ui-megamenu-col-3';\n            break;\n            \n            case 6:\n                columnClass= 'ui-megamenu-col-2';\n            break;\n                        \n            default:\n                columnClass= 'ui-megamenu-col-12';\n            break;\n        }\n        \n        return columnClass;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [MegaMenu,RouterModule],\n    declarations: [MegaMenu]\n})\nexport class MegaMenuModule { }","export * from './megamenu';"]}