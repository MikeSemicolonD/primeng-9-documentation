{"version":3,"sources":["webpack:///src/app/components/spinner/public_api.ts","webpack:///src/app/components/spinner/spinner.ts"],"names":["SPINNER_VALUE_ACCESSOR","provide","useExisting","Spinner","multi","el","cd","onChange","onFocus","onBlur","_step","onModelChange","onModelTouched","keyPattern","negativeSeparator","val","tokens","step","toString","split","calculatedPrecision","length","undefined","ngOnInit","formatInput","localeDecimalSeparator","toLocaleString","substring","localeThousandSeparator","thousandRegExp","RegExp","thousandSeparator","decimalSeparator","console","warn","repeat","event","interval","dir","i","clearTimer","timer","setTimeout","spin","currentValue","precision","getPrecision","value","parseValue","parseFloat","toFixed","maxlength","min","max","formatValue","emit","power","Math","pow","String","round","onUpButtonMousedown","disabled","inputfieldViewChild","nativeElement","focus","updateFilledState","preventDefault","onUpButtonMouseup","onUpButtonMouseleave","onDownButtonMousedown","onDownButtonMouseup","onDownButtonMouseleave","onInputKeydown","which","onInputChange","onInput","target","onInputBlur","onInputFocus","trim","replace","parseInt","isNaN","maximumFractionDigits","join","formattedValue","clearInterval","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","filled","selector","template","host","providers","changeDetection","Default","SpinnerModule","imports","exports","declarations"],"mappings":"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","file":"default~components-inputnumber-inputnumberdemo-module~components-spinner-spinnerdemo-module-es5.js","sourcesContent":["export * from './spinner';","import {NgModule,Component,ElementRef,OnInit,Input,Output,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SPINNER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Spinner),\n    multi: true\n};\n\n@Component({\n    selector: 'p-spinner',\n    template: `\n        <span class=\"ui-spinner ui-widget ui-corner-all\">\n            <input #inputfield type=\"text\" [attr.id]=\"inputId\" [value]=\"formattedValue||null\" [attr.name]=\"name\" [attr.aria-valumin]=\"min\" [attr.aria-valuemax]=\"max\" [attr.aria-valuenow]=\"value\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n            [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.placeholder]=\"placeholder\" [disabled]=\"disabled\" [readonly]=\"readonly\" [attr.required]=\"required\"\n            (keydown)=\"onInputKeydown($event)\" (blur)=\"onInputBlur($event)\" (input)=\"onInput($event)\" (change)=\"onInputChange($event)\" (focus)=\"onInputFocus($event)\"\n            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [ngClass]=\"'ui-spinner-input ui-inputtext ui-widget ui-state-default ui-corner-all'\">\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\n                (mouseleave)=\"onUpButtonMouseleave($event)\" (mousedown)=\"onUpButtonMousedown($event)\" (mouseup)=\"onUpButtonMouseup($event)\">\n                <span class=\"ui-spinner-button-icon pi pi-caret-up ui-clickable\"></span>\n            </button>\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\n                (mouseleave)=\"onDownButtonMouseleave($event)\" (mousedown)=\"onDownButtonMousedown($event)\" (mouseup)=\"onDownButtonMouseup($event)\">\n                <span class=\"ui-spinner-button-icon pi pi-caret-down ui-clickable\"></span>\n            </button>\n        </span>\n    `,\n    host: {\n        '[class.ui-inputwrapper-filled]': 'filled',\n        '[class.ui-inputwrapper-focus]': 'focus'\n    },\n    providers: [SPINNER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Spinner implements OnInit,ControlValueAccessor {\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Input() min: number;\n\n    @Input() max: number;\n    \n    @Input() maxlength: number;\n    \n    @Input() size: number;\n\n    @Input() placeholder: string;\n\n    @Input() inputId: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() readonly: boolean;\n\n    @Input() tabindex: number;\n            \n    @Input() required: boolean;\n\n    @Input() name: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() inputStyle: any;\n\n    @Input() inputStyleClass: string;\n\n    @Input() formatInput: boolean;\n\n    @Input() decimalSeparator: string;\n\n    @Input() thousandSeparator: string;\n\n    @Input() precision: number;\n    \n    value: any;\n\n    _step: number = 1;\n\n    formattedValue: string;\n        \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    keyPattern: RegExp = /[0-9\\+\\-]/;\n        \n    public timer: any;\n    \n    public focus: boolean;\n    \n    public filled: boolean;\n    \n    public negativeSeparator = '-';\n\n    localeDecimalSeparator: string;\n\n    localeThousandSeparator: string;\n\n    thousandRegExp: RegExp;\n\n    calculatedPrecision: number;\n    \n    @ViewChild('inputfield') inputfieldViewChild: ElementRef;\n\n    @Input() get step(): number {\n        return this._step;\n    }\n    set step(val:number) {\n        this._step = val;\n\n        if (this._step != null) {\n            let tokens = this.step.toString().split(/[,]|[.]/);\n            this.calculatedPrecision = tokens[1] ? tokens[1].length : undefined;\n        }\n    }\n    \n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        if (this.formatInput) {\n            this.localeDecimalSeparator = (1.1).toLocaleString().substring(1, 2);\n            this.localeThousandSeparator = (1000).toLocaleString().substring(1, 2);\n            this.thousandRegExp = new RegExp(`[${this.thousandSeparator || this.localeThousandSeparator}]`, 'gim');\n\n            if (this.decimalSeparator && this.thousandSeparator && this.decimalSeparator === this.thousandSeparator) {\n                console.warn(\"thousandSeparator and decimalSeparator cannot have the same value.\");\n            }\n        }\n    }\n\n    repeat(event: Event, interval: number, dir: number) {\n        let i = interval||500;\n\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, 40, dir);\n        }, i);\n\n        this.spin(event, dir);\n    }\n    \n    spin(event: Event, dir: number) {\n        let step = this.step * dir;\n        let currentValue: number;\n        let precision = this.getPrecision();\n\n        if (this.value)\n            currentValue = (typeof this.value === 'string') ? this.parseValue(this.value) : this.value;\n        else\n            currentValue = 0;\n        \n        if (precision)\n            this.value = parseFloat(this.toFixed(currentValue + step, precision));\n        else\n            this.value = currentValue + step;\n    \n        if (this.maxlength !== undefined && this.value.toString().length > this.maxlength) {\n            this.value = currentValue;\n        }\n    \n        if (this.min !== undefined && this.value < this.min) {\n            this.value = this.min;\n        }\n\n        if (this.max !== undefined && this.value > this.max) {\n            this.value = this.max;\n        }\n        \n        this.formatValue();\n        this.onModelChange(this.value);\n        this.onChange.emit(event);\n    }\n\n    getPrecision() {\n        return this.precision === undefined ? this.calculatedPrecision : this.precision;\n    }\n    \n    toFixed(value: number, precision: number) {\n        let power = Math.pow(10, precision||0);\n        return String(Math.round(value * power) / power);\n    }\n    \n    onUpButtonMousedown(event: Event) {\n        if (!this.disabled) {\n            this.inputfieldViewChild.nativeElement.focus();\n            this.repeat(event, null, 1);\n            this.updateFilledState();\n            event.preventDefault();\n        }\n    }\n    \n    onUpButtonMouseup(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onUpButtonMouseleave(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onDownButtonMousedown(event: Event) {\n        if (!this.disabled) {\n            this.inputfieldViewChild.nativeElement.focus();\n            this.repeat(event, null, -1);\n            this.updateFilledState();\n            event.preventDefault();\n        }\n    }\n    \n    onDownButtonMouseup(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onDownButtonMouseleave(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onInputKeydown(event: KeyboardEvent) {\n        if (event.which == 38) {\n            this.spin(event, 1);\n            event.preventDefault();\n        }\n        else if (event.which == 40) {\n            this.spin(event, -1);\n            event.preventDefault();\n        }\n    }\n\n    onInputChange(event: Event) {\n        this.onChange.emit(event);\n    }\n\n    onInput(event: KeyboardEvent) {\n        this.value = this.parseValue((<HTMLInputElement> event.target).value);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n    }\n        \n    onInputBlur(event) {\n        this.focus = false;\n        this.formatValue();\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onInputFocus(event) {\n        this.focus = true;\n        this.onFocus.emit(event);\n    }\n    \n    parseValue(val: string): number {\n        let value: number;\n        let precision = this.getPrecision();\n                \n        if (val.trim() === '') {\n            value = null;\n        }\n        else {\n            if (this.formatInput) {\n                val = val.replace(this.thousandRegExp, '');\n            }\n\n            if (precision) {\n                val = this.formatInput ? val.replace(this.decimalSeparator || this.localeDecimalSeparator, '.') : val.replace(',', '.');\n                value = parseFloat(val);\n            }\n            else {\n                value = parseInt(val, 10);\n            }\n            \n            if (!isNaN(value)) {\n                if (this.max !== null && value > this.max) {\n                    value = this.max;\n                }\n\n                if (this.min !== null && value < this.min) {\n                    value = this.min;\n                }\n            }\n            else {\n                value = null;\n            }\n        }\n        \n        return value;\n    }\n\n    formatValue() {\n        let value = this.value;\n        let precision = this.getPrecision();\n\n        if (value != null) {\n            if (this.formatInput) {\n                value = value.toLocaleString(undefined, {maximumFractionDigits: 20});\n    \n                if (this.decimalSeparator && this.thousandSeparator) {\n                    value = value.split(this.localeDecimalSeparator);\n    \n                    if (precision && value[1]) {\n                        value[1] = (this.decimalSeparator || this.localeDecimalSeparator) + value[1];\n                    }\n    \n                    if (this.thousandSeparator && value[0].length > 3) {\n                        value[0] = value[0].replace(new RegExp(`[${this.localeThousandSeparator}]`, 'gim'), this.thousandSeparator);\n                    }\n    \n                    value = value.join('');\n                }\n            }\n    \n            this.formattedValue = value.toString();\n        }\n        else {\n            this.formattedValue = null;\n        }\n\n        if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\n            this.inputfieldViewChild.nativeElement.value = this.formattedValue;\n        }\n    }\n            \n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;\n        this.formatValue();\n        this.updateFilledState();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    updateFilledState() {\n        this.filled = (this.value !== undefined && this.value != null);\n    }\n}\n\n\n@NgModule({\n    imports: [CommonModule,InputTextModule],\n    exports: [Spinner],\n    declarations: [Spinner]\n})\nexport class SpinnerModule { }\n"]}