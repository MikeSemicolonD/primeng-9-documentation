{"version":3,"sources":["webpack:///src/app/showcase/components/menu/menudemo.html","webpack:///src/app/showcase/components/menu/menudemo-routing.module.ts","webpack:///src/app/showcase/components/menu/menudemo.module.ts","webpack:///src/app/showcase/components/menu/menudemo.ts"],"names":["MenuDemoRoutingModule","imports","forChild","path","component","exports","MenuDemoModule","declarations","MenuDemo","ngOnInit","items","label","icon","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaA,qBAAqB;AAAA;AAAA,MAAlC;;AAAaA,yBAAqB,6DAVjC,+DAAS;AACTC,aAAO,EAAE,CACR,6DAAaC,QAAb,CAAsB,CACrB;AAACC,YAAI,EAAC,EAAN;AAASC,iBAAS,EAAE;AAApB,OADqB,CAAtB,CADQ,CADA;AAMTC,aAAO,EAAE,CACR,4DADQ;AANA,KAAT,CAUiC,GAArBL,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQb,QAAaM,cAAc;AAAA;AAAA,MAA3B;;AAAaA,kBAAc,6DAb1B,+DAAS;AACTL,aAAO,EAAE,CACR,4DADQ,EAER,8EAFQ,EAGF,uDAHE,EAIF,2DAJE,EAKF,6DALE,EAMF,6EANE,CADA;AASTM,kBAAY,EAAE,CACb,kDADa;AATL,KAAT,CAa0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBb,QAAaE,QAAQ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,eAIjB,SAAAC,QAAQ,GAAG;AACP,eAAKC,KAAL,GAAa,CAAC;AACVC,iBAAK,EAAE,MADG;AAEVD,iBAAK,EAAE,CACH;AAACC,mBAAK,EAAE,KAAR;AAAeC,kBAAI,EAAE;AAArB,aADG,EAEH;AAACD,mBAAK,EAAE,UAAR;AAAoBC,kBAAI,EAAE;AAA1B,aAFG;AAFG,WAAD,EAOb;AACID,iBAAK,EAAE,MADX;AAEID,iBAAK,EAAE,CACH;AAACC,mBAAK,EAAE,UAAR;AAAoBC,kBAAI,EAAE;AAA1B,aADG,EAEH;AAACD,mBAAK,EAAE,aAAR;AAAuBC,kBAAI,EAAE;AAA7B,aAFG;AAFX,WAPa,CAAb;AAcH;AAnBgB;AAAA,OAArB;;AAAaJ,YAAQ,6DAHpB,gEAAU;AACPK,cAAQ,EAAR;AAAA;AAAA;AADO,KAAV,CAGoB,GAARL,QAAQ,CAAR","file":"components-menu-menudemo-module-es5.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Menu</span>\\n        <span>Menu is a navigation/command component that supports dynamic and static positioning.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-menu [model]=\\\"items\\\"></p-menu>\\n\\n    <h3>Popup</h3>\\n    <p-menu #menu [popup]=\\\"true\\\" [model]=\\\"items\\\"></p-menu>\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-bars\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"></button>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;MenuModule&#125; from 'primeng/menu';\\nimport &#123;MenuItem&#125; from 'primeng/api';\\n</code>\\n</pre>\\n\\n            <h3>MenuModel API</h3>\\n            <p>Menu uses the common menumodel api to define its items, visit <a [routerLink]=\\\"['/menumodel']\\\">MenuModel API</a> for details.</p>\\n\\n            <h3>Getting Started</h3>\\n            <p>Menu requires a collection of menuitems as its model.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-menu [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MenuDemo &#123;\\n    \\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [\\n            &#123;label: 'New', icon: 'pi pi-fw pi-plus'&#125;,\\n            &#123;label: 'Open', icon: 'pi pi-fw pi-download'&#125;,\\n            &#123;label: 'Undo', icon: 'pi pi-fw pi-refresh'&#125;\\n        ];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>SubMenus</h3>\\n            <p>Menu supports 1 level of nesting via subitems of an item.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MenuDemo &#123;\\n    \\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [&#123;\\n            label: 'File',\\n            items: [\\n                &#123;label: 'New', icon: 'pi pi-fw pi-plus'&#125;,\\n                &#123;label: 'Download', icon: 'pi pi-fw pi-download'&#125;\\n            ]\\n        &#125;,\\n        &#123;\\n            label: 'Edit',\\n            items: [\\n                &#123;label: 'Add User', icon: 'pi pi-fw pi-user-plus'&#125;,\\n                &#123;label: 'Remove User', icon: 'pi pi-fw pi-user-minus'&#125;\\n            ]\\n        &#125;];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Popup Mode</h3>\\n            <p>Menu is inline by default, popup mode is also supported by enabling popup property and calling toggle method by passing the event \\n                    from the anchor element.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-menu #menu [popup]=\\\"true\\\" [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n&lt;button type=\\\"button\\\" pButton icon=\\\"pi pi-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n            <h3>Animation Configuration</h3>\\n            <p>Transition of the open and hide animations can be customized using the showTransitionOptions and hideTransitionOptions properties, \\n                example below disables the animations altogether.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-menu [showTransitionOptions]=\\\"'0ms'\\\" [hideTransitionOptions]=\\\"'0ms'\\\" #menu [popup]=\\\"true\\\" [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n&lt;button type=\\\"button\\\" pButton icon=\\\"pi pi-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>       \\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Type</th>\\n                        <th>Default</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>model</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>An array of menuitems.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>popup</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Defines if menu would displayed as a popup.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the overlay, valid values are \\\"body\\\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\\\"mydiv\\\" for a div element having #mydiv as variable name).</td>\\n                        </tr>\\n                        <tr>\\n                            <td>baseZIndex</td>\\n                            <td>number</td>\\n                            <td>0</td>\\n                            <td>Base zIndex value to use in layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>autoZIndex</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether to automatically manage layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>225ms ease-out</td>\\n                            <td>Transition options of the show animation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hideTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>195ms ease-in</td>\\n                            <td>Transition options of the hide animation.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onShow</td>\\n                            <td>event: Event object</td>\\n                            <td>Callback to invoke when overlay menu is shown.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onHide</td>\\n                            <td>event: Event object</td>\\n                            <td>Callback to invoke when overlay menu is hidden.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Methods</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>toggle</td>\\n                            <td>event: browser event</td>\\n                            <td>Toggles the visibility of the popup menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>show</td>\\n                            <td>event: browser event</td>\\n                            <td>Displays the popup menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hide</td>\\n                            <td>-</td>\\n                            <td>Hides the popup menu.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-menu</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menu-list</td>\\n                            <td>List element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem</td>\\n                            <td>Menuitem element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem-text</td>\\n                            <td>Label of a menuitem.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem-icon</td>\\n                            <td>Icon of a menuitem.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/menu\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-menu-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-menu [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n\\n&lt;h3&gt;Popup&lt;/h3&gt;\\n&lt;p-menu #menu [popup]=\\\"true\\\" [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n&lt;button type=\\\"button\\\" pButton icon=\\\"pi pi-bars\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MenuDemo &#123;\\n    \\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [&#123;\\n            label: 'File',\\n            items: [\\n                &#123;label: 'New', icon: 'pi pi-fw pi-plus'&#125;,\\n                &#123;label: 'Download', icon: 'pi pi-fw pi-download'&#125;\\n            ]\\n        &#125;,\\n        &#123;\\n            label: 'Edit',\\n            items: [\\n                &#123;label: 'Add User', icon: 'pi pi-fw pi-user-plus'&#125;,\\n                &#123;label: 'Remove User', icon: 'pi pi-fw pi-user-minus'&#125;\\n            ]\\n        &#125;];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-menu-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {MenuDemo} from './menudemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: MenuDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class MenuDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuDemo} from './menudemo';\nimport {MenuDemoRoutingModule} from './menudemo-routing.module';\nimport {MenuModule} from 'primeng/menu'\nimport {ButtonModule} from 'primeng/button';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tMenuDemoRoutingModule,\n        MenuModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tMenuDemo\n\t]\n})\nexport class MenuDemoModule {}\n","import {Component} from '@angular/core';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n    templateUrl: './menudemo.html'\n})\nexport class MenuDemo {\n    \n    items: MenuItem[];\n\n    ngOnInit() {\n        this.items = [{\n            label: 'File',\n            items: [\n                {label: 'New', icon: 'pi pi-fw pi-plus'},\n                {label: 'Download', icon: 'pi pi-fw pi-download'}\n            ]\n        },\n        {\n            label: 'Edit',\n            items: [\n                {label: 'Add User', icon: 'pi pi-fw pi-user-plus'},\n                {label: 'Remove User', icon: 'pi pi-fw pi-user-minus'}\n            ]\n        }];\n    }\n}"]}