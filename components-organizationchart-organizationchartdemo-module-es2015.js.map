{"version":3,"sources":["./src/app/showcase/components/organizationchart/organizationchartdemo.html","./src/app/components/panel/panel.ts","./src/app/components/panel/public_api.ts","./src/app/showcase/components/organizationchart/organizationchartdemo-routing.module.ts","./src/app/showcase/components/organizationchart/organizationchartdemo.module.ts","./src/app/showcase/components/organizationchart/organizationchartdemo.ts"],"names":[],"mappings":"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","file":"components-organizationchart-organizationchartdemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">OrganizationChart</span>\\n        <span>OrganizationChart visualized hierarchical organization data.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-toast></p-toast>\\n\\n    <h3 class=\\\"first\\\">Advanced</h3>\\n    <p>Organization with advanced customization.</p>\\n    <p-organizationChart [value]=\\\"data1\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedNode\\\" (onNodeSelect)=\\\"onNodeSelect($event)\\\"\\n        styleClass=\\\"company\\\">\\n        <ng-template let-node pTemplate=\\\"person\\\">\\n            <div class=\\\"node-header ui-corner-top\\\">{{node.label}}</div>\\n            <div class=\\\"node-content\\\">\\n                <img src=\\\"assets/showcase/images/demo/organization/{{node.data.avatar}}\\\" width=\\\"32\\\">\\n                <div>{{node.data.name}}</div>\\n            </div>\\n        </ng-template>\\n        <ng-template let-node pTemplate=\\\"department\\\">\\n            {{node.label}}\\n        </ng-template>\\n    </p-organizationChart>\\n\\n    <h3>Basic</h3>\\n    <p>Hierarchical data with zero configuration.</p>\\n    <p-organizationChart [value]=\\\"data2\\\"></p-organizationChart>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header =\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;OrganizationChartModule&#125; from 'primeng/organizationchart';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>OrganizationChart requires a model of TreeNode as its <i>value</i>. More information about TreeNode API is available at documentation of <a href=\\\"#\\\" [routerLink]=\\\"['/tree']\\\">tree</a> component.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;TreeNode&#125; from 'primeng/api';\\n</code>\\n</pre>\\n\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-organizationChart [value]=\\\"data\\\"&gt;&lt;/p-organizationChart&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyComponents implements OnInit &#123;\\n\\n    data: TreeNode[];\\n\\n    ngOnInit() &#123;\\n        this.data = [&#123;\\n            label: 'Root',\\n            children: [\\n                &#123;\\n                    label: 'Child 1',\\n                    children: [\\n                        &#123;\\n                            label: 'Grandchild 1.1'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Grandchild 1.2'\\n                        &#125;\\n                    ]\\n                &#125;,\\n                &#123;\\n                    label: 'Child 2',\\n                    children: [\\n                        &#123;\\n                            label: 'Child 2.1'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Child 2.2'\\n                        &#125;\\n                    ]\\n                &#125;\\n            ]\\n        &#125;];\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Templating</h3>\\n            <p>Label of the treenode is displayed inside the node content by default and templating enables enhanced customization. TreeNode API has type property which is\\n            used to match the <i>pTemplate</i> type so templating can be done per node as well. In example below, nodes with type \\\"leaf\\\" are displayed with bold text. Note that a pTemplate\\n            whose type is \\\"default\\\" applies to all nodes that have no type property defined.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-organizationChart [value]=\\\"data\\\"\\n    styleClass=\\\"company\\\"&gt;\\n    &lt;ng-template let-node pTemplate=\\\"leaf\\\"&gt;\\n        &lt;span style=\\\"font-weight:bold\\\"&gt;{{node.label}}&lt;/span&gt;\\n    &lt;/ng-template&gt;\\n    &lt;ng-template let-node pTemplate=\\\"default\\\"&gt;\\n        &#123;&#123;node.label&#125;&#125;\\n    &lt;/ng-template&gt;\\n&lt;/p-organizationChart&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyComponents implements OnInit &#123;\\n\\n    data: TreeNode[];\\n\\n    ngOnInit() &#123;\\n        this.data = [&#123;\\n            label: 'Root',\\n            children: [\\n                &#123;\\n                    label: 'Child 1',\\n                    children: [\\n                        &#123;\\n                            label: 'Grandchild 1.1', type: 'leaf'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Grandchild 1.2', type: 'leaf'\\n                        &#125;\\n                    ]\\n                &#125;,\\n                &#123;\\n                    label: 'Child 2',\\n                    children: [\\n                        &#123;\\n                            label: 'Child 2.1', type: 'leaf'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Child 2.2', type: 'leaf'\\n                        &#125;\\n                    ]\\n                &#125;\\n            ]\\n        &#125;];\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Expand/Collapse State</h3>\\n            <p>In order to display a treenode as <i>expanded</i> by default, set \\\"expanded\\\" property as true in your model.</p>\\n\\n            <h3>Selection</h3>\\n            <p>OrganizationChart supports 2 selection methods; single or multiple. Selection is enabled by setting <i>selectionMode</i> property and providing a single TreeNode or\\n            an array of TreeNodes to reference the selections depending on the selection mode.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-organizationChart [value]=\\\"data\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedNode\\\"&gt;&lt;/p-organizationChart&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyComponents implements OnInit &#123;\\n\\n    data: TreeNode[];\\n\\n    ngOnInit() &#123;\\n        this.data = [&#123;\\n            label: 'Root',\\n            children: [\\n                &#123;\\n                    label: 'Child 1,\\n                    children: [\\n                        &#123;\\n                            label: 'Grandchild 1.1', type: 'leaf'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Grandchild 1.2', type: 'leaf'\\n                        &#125;\\n                    ]\\n                &#125;,\\n                &#123;\\n                    label: 'Child 2',\\n                    children: [\\n                        &#123;\\n                            label: 'Child 2.1', type: 'leaf'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Child 2.2', type: 'leaf'\\n                        &#125;\\n                    ]\\n                &#125;\\n            ]\\n        &#125;];\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>value</td>\\n                            <td>null</td>\\n                            <td>TreeNode[]</td>\\n                            <td>An array of nested TreeNodes.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>selectionMode</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Defines the selection mode, valid values \\\"single\\\" and \\\"multiple\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>selection</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>A single treenode instance or an array to refer to the selections.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>preserveSpace</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether the space allocated by a node is preserved when hidden.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n        <h3>Events</h3>\\n        <div class=\\\"doc-tablewrapper\\\">\\n            <table class=\\\"doc-table\\\">\\n                <thead>\\n                <tr>\\n                    <th>Name</th>\\n                    <th>Parameters</th>\\n                    <th>Description</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                    <tr>\\n                        <td>onNodeSelect</td>\\n                        <td>event.originalEvent: browser event <br>\\n                            event.node: Selected node instance.</td>\\n                        <td>Callback to invoke when a node is selected.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>onNodeUnselect</td>\\n                        <td>event.originalEvent: browser event <br>\\n                            event.node: Unselected node instance.</td>\\n                        <td>Callback to invoke when a node is unselected.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>onNodeExpand</td>\\n                        <td>event.originalEvent: browser event <br>\\n                            event.node: Expanded node instance.</td>\\n                        <td>Callback to invoke when a node is expanded.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>onNodeCollapse</td>\\n                        <td>event.originalEvent: browser event <br>\\n                            event.node: Collapsed node instance.</td>\\n                        <td>Callback to invoke when a node is collapsed.</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n        <h3>Styling</h3>\\n        <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n        <div class=\\\"doc-tablewrapper\\\">\\n            <table class=\\\"doc-table\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Element</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr>\\n                        <td>ui-organizationchart</td>\\n                        <td>Container element.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>ui-organizationchart-table</td>\\n                        <td>Table container of a node.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>ui-organizationchart-lines</td>\\n                        <td>Connector lines container.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>ui-organizationchart-nodes</td>\\n                        <td>Contained of node children.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>ui-organizationchart-line-right</td>\\n                        <td>Right side line of a node connector.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>ui-organizationchart-line-left</td>\\n                        <td>Left side line of a node connector.</td>\\n                    </tr>\\n                    <tr>\\n                        <td>ui-organizationchart-line-top</td>\\n                        <td>Top side line of a node connector.</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n        <h3>Dependencies</h3>\\n        <p>None.</p>\\n\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/organizationchart\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-organizationchart-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\n\\n&lt;h3 class=\\\"first\\\"&gt;Advanced&lt;/h3&gt;\\n&lt;p&gt;Organization with advanced customization.&lt;/p&gt;\\n&lt;p-organizationChart [value]=\\\"data1\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedNode\\\" (onNodeSelect)=\\\"onNodeSelect($event)\\\"\\n    styleClass=\\\"company\\\"&gt;\\n    &lt;ng-template let-node pTemplate=\\\"person\\\"&gt;\\n        &lt;div class=\\\"node-header ui-corner-top\\\"&gt;&#123;node.label&#125;&lt;/div&gt;\\n        &lt;div class=\\\"node-content\\\"&gt;\\n            &lt;img src=\\\"assets/showcase/images/demo/organization/&#123;node.data.avatar&#125;\\\" width=\\\"32\\\"&gt;\\n            &lt;div&gt;&#123;node.data.name&#125;&lt;/div&gt;\\n        &lt;/div&gt;\\n    &lt;/ng-template&gt;\\n    &lt;ng-template let-node pTemplate=\\\"department\\\"&gt;\\n        &#123;node.label&#125;\\n    &lt;/ng-template&gt;\\n&lt;/p-organizationChart&gt;\\n\\n&lt;h3&gt;Basic&lt;/h3&gt;\\n&lt;p&gt;Hierarchical data with zero configuration.&lt;/p&gt;\\n&lt;p-organizationChart [value]=\\\"data2\\\"&gt;&lt;/p-organizationChart&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\n@Component(&#123;\\n    templateUrl: './organizationchartdemo.html',\\n    providers: [MessageService],\\n    styles: [`\\n        .company.ui-organizationchart .ui-organizationchart-node-content.ui-person &#123;\\n            padding: 0;\\n            border: 0 none;\\n        &#125;\\n\\n        .node-header,.node-content &#123;\\n            padding: .5em .7em;\\n        &#125;\\n\\n        .node-header &#123;\\n            background-color: #495ebb;\\n            color: #ffffff;\\n        &#125;\\n\\n        .node-content &#123;\\n            text-align: center;\\n            border: 1px solid #495ebb;\\n        &#125;\\n\\n        .node-content img &#123;\\n            border-radius: 50%;\\n        &#125;\\n\\n        .department-cfo &#123;\\n            background-color: #7247bc;\\n            color: #ffffff;\\n        &#125;\\n\\n        .department-coo &#123;\\n            background-color: #a534b6;\\n            color: #ffffff;\\n        &#125;\\n\\n        .department-cto &#123;\\n            background-color: #e9286f;\\n            color: #ffffff;\\n        &#125;\\n\\n        .ui-person .ui-node-toggler &#123;\\n            color: #495ebb !important;\\n        &#125;\\n\\n        .department-cto .ui-node-toggler &#123;\\n            color: #8a0a39 !important;\\n        &#125;\\n    `],\\n    encapsulation: ViewEncapsulation.None\\n&#125;)\\nexport class OrganizationChartDemo implements OnInit &#123;\\n\\n    data1: TreeNode[];\\n\\n    data2: TreeNode[];\\n\\n    selectedNode: TreeNode;\\n\\n    constructor(private messageService: MessageService) &#123;&#125;\\n\\n    ngOnInit() &#123;\\n        this.data1 = [&#123;\\n            label: 'CEO',\\n            type: 'person',\\n            styleClass: 'ui-person',\\n            expanded: true,\\n            data: &#123;name:'Walter White', 'avatar': 'walter.jpg'&#125;,\\n            children: [\\n                &#123;\\n                    label: 'CFO',\\n                    type: 'person',\\n                    styleClass: 'ui-person',\\n                    expanded: true,\\n                    data: &#123;name:'Saul Goodman', 'avatar': 'saul.jpg'&#125;,\\n                    children:[&#123;\\n                        label: 'Tax',\\n                        styleClass: 'department-cfo'\\n                    &#125;,\\n                    &#123;\\n                        label: 'Legal',\\n                        styleClass: 'department-cfo'\\n                    &#125;],\\n                &#125;,\\n                &#123;\\n                    label: 'COO',\\n                    type: 'person',\\n                    styleClass: 'ui-person',\\n                    expanded: true,\\n                    data: &#123;name:'Mike E.', 'avatar': 'mike.jpg'&#125;,\\n                    children:[&#123;\\n                        label: 'Operations',\\n                        styleClass: 'department-coo'\\n                    &#125;]\\n                &#125;,\\n                &#123;\\n                    label: 'CTO',\\n                    type: 'person',\\n                    styleClass: 'ui-person',\\n                    expanded: true,\\n                    data: &#123;name:'Jesse Pinkman', 'avatar': 'jesse.jpg'&#125;,\\n                    children:[&#123;\\n                        label: 'Development',\\n                        styleClass: 'department-cto',\\n                        expanded: true,\\n                        children:[&#123;\\n                            label: 'Analysis',\\n                            styleClass: 'department-cto'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Front End',\\n                            styleClass: 'department-cto'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Back End',\\n                            styleClass: 'department-cto'\\n                        &#125;]\\n                    &#125;,\\n                    &#123;\\n                        label: 'QA',\\n                        styleClass: 'department-cto'\\n                    &#125;,\\n                    &#123;\\n                        label: 'R&amp;D',\\n                        styleClass: 'department-cto'\\n                    &#125;]\\n                &#125;\\n            ]\\n        &#125;];\\n\\n        this.data2 = [&#123;\\n            label: 'F.C Barcelona',\\n            expanded: true,\\n            children: [\\n                &#123;\\n                    label: 'F.C Barcelona',\\n                    expanded: true,\\n                    children: [\\n                        &#123;\\n                            label: 'Chelsea FC'\\n                        &#125;,\\n                        &#123;\\n                            label: 'F.C. Barcelona'\\n                        &#125;\\n                    ]\\n                &#125;,\\n                &#123;\\n                    label: 'Real Madrid',\\n                    expanded: true,\\n                    children: [\\n                        &#123;\\n                            label: 'Bayern Munich'\\n                        &#125;,\\n                        &#123;\\n                            label: 'Real Madrid'\\n                        &#125;\\n                    ]\\n                &#125;\\n            ]\\n        &#125;];\\n    &#125;\\n\\n    onNodeSelect(event) &#123;\\n        this.messageService.add(&#123;severity: 'success', summary: 'Node Selected', detail: event.node.label&#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-organizationchart-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                opacity: 0\n            })),\n            state('void', style({\n                height: '{{height}}',\n                opacity: '{{opacity}}'\n            }), {params: {height: '0', opacity: '0'}}),\n            state('visible', style({\n                height: '*',\n                opacity: 1\n            })),\n            transition('visible <=> hidden', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Panel implements BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n    \n    animating: boolean;\n    \n    id: string = `ui-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) {}\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n","export * from './panel';","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {OrganizationChartDemo} from './organizationchartdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: OrganizationChartDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class OrganizationChartDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrganizationChartDemo} from './organizationchartdemo';\nimport {OrganizationChartDemoRoutingModule} from './organizationchartdemo-routing.module';\nimport {OrganizationChartModule} from 'primeng/organizationchart';\nimport {ToastModule} from 'primeng/toast';\nimport {PanelModule} from 'primeng/panel';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tOrganizationChartDemoRoutingModule,\n        OrganizationChartModule,\n        ToastModule,\n        PanelModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tOrganizationChartDemo\n\t]\n})\nexport class OrganizationChartDemoModule {}\n","import {Component,OnInit,ViewEncapsulation} from '@angular/core';\nimport {TreeNode} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n    templateUrl: './organizationchartdemo.html',\n    providers: [MessageService],\n    styles: [`\n        .company.ui-organizationchart .ui-organizationchart-node-content.ui-person {\n            padding: 0;\n            border: 0 none;\n        }\n        \n        .node-header,.node-content {\n            padding: .5em .7em;\n        }\n        \n        .node-header {\n            background-color: #495ebb;\n            color: #ffffff;\n        }\n        \n        .node-content {\n            text-align: center;\n            border: 1px solid #495ebb;\n        }\n        \n        .node-content img {\n            border-radius: 50%;\n        }\n        \n        .ui-organizationchart-node-content.department-cfo {\n            background-color: #7247bc;\n            color: #ffffff;\n        }\n        \n        .ui-organizationchart-node-content.department-coo {\n            background-color: #a534b6;\n            color: #ffffff;\n        }\n        \n        .ui-organizationchart-node-content.department-cto {\n            background-color: #e9286f;\n            color: #ffffff;\n        }\n        \n        .ui-person .ui-node-toggler {\n            color: #495ebb !important;\n        }\n        \n        .department-cto .ui-node-toggler {\n            color: #8a0a39 !important;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class OrganizationChartDemo implements OnInit {\n\n    data1: TreeNode[];\n    \n    data2: TreeNode[];\n    \n    selectedNode: TreeNode;\n    \n    constructor(private messageService: MessageService) {}\n    \n    ngOnInit() {\n        this.data1 = [{\n            label: 'CEO',\n            type: 'person',\n            styleClass: 'ui-person',\n            expanded: true,\n            data: {name:'Walter White', 'avatar': 'walter.jpg'},\n            children: [\n                {\n                    label: 'CFO',\n                    type: 'person',\n                    styleClass: 'ui-person',\n                    expanded: true,\n                    data: {name:'Saul Goodman', 'avatar': 'saul.jpg'},\n                    children:[{\n                        label: 'Tax',\n                        styleClass: 'department-cfo'\n                    },\n                    {\n                        label: 'Legal',\n                        styleClass: 'department-cfo'\n                    }],\n                },\n                {\n                    label: 'COO',\n                    type: 'person',\n                    styleClass: 'ui-person',\n                    expanded: true,\n                    data: {name:'Mike E.', 'avatar': 'mike.jpg'},\n                    children:[{\n                        label: 'Operations',\n                        styleClass: 'department-coo'\n                    }]\n                },\n                {\n                    label: 'CTO',\n                    type: 'person',\n                    styleClass: 'ui-person',\n                    expanded: true,\n                    data: {name:'Jesse Pinkman', 'avatar': 'jesse.jpg'},\n                    children:[{\n                        label: 'Development',\n                        styleClass: 'department-cto',\n                        expanded: true,\n                        children:[{\n                            label: 'Analysis',\n                            styleClass: 'department-cto'\n                        },\n                        {\n                            label: 'Front End',\n                            styleClass: 'department-cto'\n                        },\n                        {\n                            label: 'Back End',\n                            styleClass: 'department-cto'\n                        }]\n                    },\n                    {\n                        label: 'QA',\n                        styleClass: 'department-cto'\n                    },\n                    {\n                        label: 'R&D',\n                        styleClass: 'department-cto'\n                    }]\n                }\n            ]\n        }];\n        \n        this.data2 = [{\n            label: 'F.C Barcelona',\n            expanded: true,\n            children: [\n                {\n                    label: 'F.C Barcelona',\n                    expanded: true,\n                    children: [\n                        {\n                            label: 'Chelsea FC'\n                        },\n                        {\n                            label: 'F.C. Barcelona'\n                        }\n                    ]\n                },\n                {\n                    label: 'Real Madrid',\n                    expanded: true,\n                    children: [\n                        {\n                            label: 'Bayern Munich'\n                        },\n                        {\n                            label: 'Real Madrid'\n                        }\n                    ]\n                }\n            ]\n        }];\n    }\n    \n    onNodeSelect(event) {\n        this.messageService.add({severity: 'success', summary: 'Node Selected', detail: event.node.label});\n    }\n\n}\n"],"sourceRoot":"webpack:///"}