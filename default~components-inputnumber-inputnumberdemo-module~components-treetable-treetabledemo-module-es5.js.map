{"version":3,"sources":["webpack:///src/app/components/treetable/public_api.ts","webpack:///src/app/components/treetable/treetable.ts"],"names":["TreeTableService","sortSource","selectionSource","contextMenuSource","uiUpdateSource","totalRecordsSource","sortSource$","asObservable","selectionSource$","contextMenuSource$","uiUpdateSource$","totalRecordsSource$","onSort","sortMeta","next","onSelectionChange","onContextMenu","node","onUIUpdate","value","onTotalRecordsChange","TreeTable","el","zone","tableService","lazy","lazyLoadOnInit","first","pageLinks","alwaysShowPaginator","paginatorPosition","currentPageReportTemplate","defaultSortOrder","sortMode","resetPageOnSort","selectionChange","contextMenuSelectionChange","contextMenuSelectionMode","compareSelectionBy","loadingIcon","showLoader","virtualScrollDelay","virtualRowHeight","columnResizeMode","rowTrackBy","index","item","filters","filterDelay","filterMode","onFilter","onNodeExpand","onNodeCollapse","onPage","onLazyLoad","sortFunction","onColResize","onColReorder","onNodeSelect","onNodeUnselect","onContextMenuSelect","onHeaderCheckboxToggle","onEditInit","onEditComplete","onEditCancel","_value","_totalRecords","_sortOrder","selectionKeys","ngOnInit","emit","createLazyLoadMetadata","initialized","ngAfterContentInit","templates","forEach","getType","captionTemplate","template","headerTemplate","bodyTemplate","loadingBodyTemplate","footerTemplate","summaryTemplate","colGroupTemplate","emptyMessageTemplate","paginatorLeftTemplate","paginatorRightTemplate","frozenHeaderTemplate","frozenBodyTemplate","frozenFooterTemplate","frozenColGroupTemplate","ngOnChanges","simpleChange","currentValue","totalRecords","length","sortField","sortSingle","multiSortMeta","sortMultiple","hasFilter","_filter","updateSerializedValue","_sortField","sortOrder","_multiSortMeta","selection","_selection","preventSelectionSetterPropagation","updateSelectionKeys","val","serializedValue","paginator","serializePageNodes","serializeNodes","filteredNodes","parent","nodes","level","visible","rowNode","expanded","push","children","data","i","rows","dataKey","Array","isArray","String","resolveFieldData","onPageChange","event","scrollable","resetScrollTop","sort","originalEvent","field","metaKey","ctrlKey","getSortMeta","order","sortNodes","customSort","mode","node1","node2","value1","value2","result","localeCompare","undefined","numeric","sortMultipleNodes","multisortmeta","multisortField","isSorted","sorted","globalFilter","virtualScroll","scrollToVirtualIndex","scrollTo","top","scrollableViewChild","scrollableFrozenViewChild","options","isEmpty","getBlockableElement","nativeElement","onColumnResizeBegin","containerLeft","getOffset","containerViewChild","left","lastResizerHelperX","pageX","scrollLeft","preventDefault","onColumnResize","addClass","resizeHelperViewChild","style","height","offsetHeight","display","onColumnResizeEnd","column","delta","offsetLeft","columnWidth","offsetWidth","newColumnWidth","minWidth","parseInt","nextColumn","nextElementSibling","offsetParent","nextColumnWidth","nextColumnMinWidth","scrollableView","findParentScrollableView","scrollableBodyTable","findSingle","scrollableHeaderTable","scrollableFooterTable","resizeColumnIndex","resizeColGroup","width","scrollableBody","scrollableHeader","scrollableFooter","scrollableBodyTableWidth","scrollableHeaderTableWidth","isContainerInViewport","setWidth","container","table","calculateScrollbarWidth","tableViewChild","containerWidth","element","removeClass","parentElement","hasClass","colGroup","nodeName","col","nextCol","onColumnDragStart","columnElement","reorderIconWidth","getHiddenElementOuterWidth","reorderIndicatorUpViewChild","reorderIconHeight","getHiddenElementOuterHeight","reorderIndicatorDownViewChild","draggedColumn","dataTransfer","setData","onColumnDragEnter","dropHeader","reorderableColumns","containerOffset","dropHeaderOffset","targetLeft","targetTop","columnCenter","Math","ceil","dropPosition","dropEffect","onColumnDragLeave","onColumnDrop","dropColumn","dragIndex","indexWithinGroup","dropIndex","allowDrop","reorderArray","columns","draggable","handleRowClick","targetNode","target","selectionMode","selected","isSelected","metaSelection","rowTouched","metaKeySelection","dataKeyValue","isSingleSelectionMode","selectionIndex","findIndexInSelection","filter","type","isMultipleSelectionMode","rowIndex","handleRowTouchEnd","handleRowRightClick","contextMenu","contextMenuSelection","show","toggleNodeWithCheckbox","propagateSelectionDown","propagateSelectionUp","toggleNodesWithCheckbox","check","slice","checked","select","selectedChildCount","childPartialSelected","child","partialSelected","equals","matchMode","filterTimeout","clearTimeout","isFilterBlank","setTimeout","filterGlobal","trim","globalFilterFieldsArray","globalFilterFields","Error","isStrictMode","isValueChanged","copyNode","localMatch","globalMatch","paramsWithoutNode","prop","hasOwnProperty","filterMeta","filterField","filterValue","filterMatchMode","filterConstraint","findFilteredNodes","isFilterMatched","j","copyNodeForGlobal","matches","filteredValue","matched","childNodes","childNode","copyChildNode","dataFieldValue","filterLocale","isNodeLeaf","leaf","empty","reset","updateEditingCell","cell","editingCell","bindDocumentEditListener","isEditingCellValid","find","documentEditListener","editingCellClick","unbindDocumentEditListener","document","addEventListener","removeEventListener","ngOnDestroy","Function","selector","providers","changeDetection","Default","TTBody","tt","TTScrollableView","subscription","subscribe","runOutsideAngular","alignScrollBar","_scrollHeight","includes","console","log","ngAfterViewChecked","ngAfterViewInit","frozen","frozenColumns","frozenView","previousElementSibling","frozenSiblingBody","scrollableAlignerViewChild","calculateScrollbarHeight","bindEvents","scrollBarWidth","scrollHeaderViewChild","headerScrollListener","onHeaderScroll","bind","scrollHeaderBoxViewChild","scrollFooterViewChild","footerScrollListener","onFooterScroll","bodyScrollListener","onBodyScroll","virtualScrollBody","getElementRef","scrollBodyViewChild","unbindEvents","preventBodyScrollPropagation","marginLeft","scrollFooterBoxViewChild","scrollTop","scrollToIndex","hasVerticalOverflow","getDataLength","getViewportSize","getOuterHeight","scrollTableViewChild","marginRight","unsubscribe","TTSortableColumn","isEnabled","updateSortState","onClick","clearSelection","onEnterKey","ttSortableColumnDisabled","MouseEvent","host","TTSortIcon","TTResizableColumn","resizer","createElement","className","appendChild","resizerMouseDownListener","onMouseDown","bindDocumentEvents","documentMouseMoveListener","onDocumentMouseMove","documentMouseUpListener","onDocumentMouseUp","unbindDocumentEvents","ttResizableColumnDisabled","TTReorderableColumn","mouseDownListener","dragStartListener","onDragStart","dragOverListener","onDragEnter","dragEnterListener","dragLeaveListener","onDragLeave","onDragOver","onDrop","ttReorderableColumnDisabled","TTSelectableRow","which","onTouchEnd","ttSelectableRowDisabled","Event","KeyboardEvent","TTSelectableRowDblClick","TTContextMenuRow","focus","ttContextMenuRowDisabled","TTCheckbox","disabled","onFocus","boxViewChild","onBlur","TTHeaderCheckbox","valueChangeSubscription","updateCheckedState","selectionChangeSubscription","TTEditableColumn","openCell","focusable","closeEditingCell","onKeyDown","keyCode","shiftKey","moveToPreviousCell","moveToNextCell","findCell","currentCell","row","targetCell","findPreviousEditableColumn","invokeElementMethod","findNextEditableColumn","prevCell","previousRow","lastElementChild","nextCell","nextRow","firstElementChild","ttEditableColumnDisabled","TreeTableCellEditor","editableColumn","inputTemplate","outputTemplate","TTRow","prevRow","toggleRowIndex","restoreFocus","TreeTableToggler","TreeTableModule","imports","exports","declarations"],"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","file":"default~components-inputnumber-inputnumberdemo-module~components-treetable-treetabledemo-module-es5.js","sourcesContent":["export * from './treetable';","import { NgModule, AfterContentInit, OnInit, OnDestroy, HostListener, Injectable, Directive, Component, Input, Output, EventEmitter, ContentChildren, TemplateRef, QueryList, ElementRef, NgZone, ViewChild, AfterViewInit, AfterViewChecked, OnChanges, SimpleChanges, ChangeDetectionStrategy} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeNode } from 'primeng/api';\nimport { Subject, Subscription } from 'rxjs';\nimport { DomHandler } from 'primeng/dom';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { SortMeta } from 'primeng/api';\nimport { BlockableUI } from 'primeng/api';\nimport { FilterMetadata } from 'primeng/api';\nimport { ObjectUtils } from 'primeng/utils';\nimport { FilterUtils } from 'primeng/utils';\nimport { ScrollingModule, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\n\n@Injectable()\nexport class TreeTableService {\n\n    private sortSource = new Subject<SortMeta|SortMeta[]>();\n    private selectionSource = new Subject();\n    private contextMenuSource = new Subject<any>();\n    private uiUpdateSource = new Subject<any>();\n    private totalRecordsSource = new Subject<any>();\n\n    sortSource$ = this.sortSource.asObservable();\n    selectionSource$ = this.selectionSource.asObservable();\n    contextMenuSource$ = this.contextMenuSource.asObservable();\n    uiUpdateSource$ = this.uiUpdateSource.asObservable();\n    totalRecordsSource$ = this.totalRecordsSource.asObservable();\n\n    onSort(sortMeta: SortMeta|SortMeta[]) {\n        this.sortSource.next(sortMeta);\n    }\n\n    onSelectionChange() {\n        this.selectionSource.next();\n    }\n\n    onContextMenu(node: any) {\n        this.contextMenuSource.next(node);\n    }\n\n    onUIUpdate(value: any) {\n        this.uiUpdateSource.next(value);\n    }\n\n    onTotalRecordsChange(value: number) {\n        this.totalRecordsSource.next(value);\n    }\n}\n\n@Component({\n    selector: 'p-treeTable',\n    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n                [ngClass]=\"{'ui-treetable ui-widget': true, 'ui-treetable-auto-layout': autoLayout, 'ui-treetable-hoverable-rows': (rowHover||(selectionMode === 'single' || selectionMode === 'multiple')),\n                'ui-treetable-resizable': resizableColumns, 'ui-treetable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'), 'ui-treetable-flex-scrollable': (scrollable && scrollHeight === 'flex')}\">\n            <div class=\"ui-treetable-loading ui-widget-overlay\" *ngIf=\"loading && showLoader\"></div>\n            <div class=\"ui-treetable-loading-content\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'ui-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"ui-treetable-caption ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n\n            <div class=\"ui-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table #table class=\"ui-treetable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tfoot class=\"ui-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                    <tbody class=\"ui-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                </table>\n            </div>\n\n            <div class=\"ui-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"ui-treetable-scrollable-view ui-treetable-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" #scrollableFrozenView [ttScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"ui-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n            <div *ngIf=\"summaryTemplate\" class=\"ui-treetable-summary ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"ui-column-resizer-helper ui-state-highlight\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down ui-table-reorder-indicator-up\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up ui-table-reorder-indicator-down\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n    providers: [TreeTableService],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class TreeTable implements AfterContentInit, OnInit, OnDestroy, BlockableUI, OnChanges {\n\n    @Input() columns: any[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() tableStyle: any;\n\n    @Input() tableStyleClass: string;\n\n    @Input() autoLayout: boolean;\n\n    @Input() lazy: boolean = false;\n\n    @Input() lazyLoadOnInit: boolean = true;\n\n    @Input() paginator: boolean;\n\n    @Input() rows: number;\n\n    @Input() first: number = 0;\n\n    @Input() pageLinks: number = 5;\n\n    @Input() rowsPerPageOptions: any[];\n\n    @Input() alwaysShowPaginator: boolean = true;\n\n    @Input() paginatorPosition: string = 'bottom';\n\n    @Input() paginatorDropdownAppendTo: any;\n\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\n\n    @Input() showCurrentPageReport: boolean;\n\n    @Input() defaultSortOrder: number = 1;\n\n    @Input() sortMode: string = 'single';\n\n    @Input() resetPageOnSort: boolean = true;\n\n    @Input() customSort: boolean;\n\n    @Input() selectionMode: string;\n\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() contextMenuSelection: any;\n\n    @Output() contextMenuSelectionChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() contextMenuSelectionMode: string = \"separate\";\n\n    @Input() dataKey: string;\n\n    @Input() metaKeySelection: boolean;\n\n    @Input() compareSelectionBy: string = 'deepEquals';\n\n    @Input() rowHover: boolean;\n\n    @Input() loading: boolean;\n\n    @Input() loadingIcon: string = 'pi pi-spinner';\n\n    @Input() showLoader: boolean = true;\n\n    @Input() scrollable: boolean;\n\n    @Input() scrollHeight: string;\n\n    @Input() virtualScroll: boolean;\n\n    @Input() virtualScrollDelay: number = 150;\n\n    @Input() virtualRowHeight: number = 28;\n\n    @Input() minBufferPx: number;\n\n    @Input() maxBufferPx: number;\n\n    @Input() frozenWidth: string;\n\n    @Input() frozenColumns: any[];\n\n    @Input() resizableColumns: boolean;\n\n    @Input() columnResizeMode: string = 'fit';\n\n    @Input() reorderableColumns: boolean;\n\n    @Input() contextMenu: any;\n\n    @Input() rowTrackBy: Function = (index: number, item: any) => item;\n\n    @Input() filters: { [s: string]: FilterMetadata; } = {};\n\n    @Input() globalFilterFields: string[];\n\n    @Input() filterDelay: number = 300;\n\n    @Input() filterMode: string = 'lenient';\n\n    @Input() filterLocale: string;\n\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\n\n    @Output() onPage: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSort: EventEmitter<any> = new EventEmitter();\n\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\n\n    @Output() sortFunction: EventEmitter<any> = new EventEmitter();\n\n    @Output() onColResize: EventEmitter<any> = new EventEmitter();\n\n    @Output() onColReorder: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onContextMenuSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHeaderCheckboxToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditInit: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditComplete: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditCancel: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('resizeHelper') resizeHelperViewChild: ElementRef;\n\n    @ViewChild('reorderIndicatorUp') reorderIndicatorUpViewChild: ElementRef;\n\n    @ViewChild('reorderIndicatorDown') reorderIndicatorDownViewChild: ElementRef;\n\n    @ViewChild('table') tableViewChild: ElementRef;\n\n    @ViewChild('scrollableView') scrollableViewChild;\n\n    @ViewChild('scrollableFrozenView') scrollableFrozenViewChild;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\n\n    _value: TreeNode[] = [];\n\n    serializedValue: any[];\n\n    _totalRecords: number = 0;\n\n    _multiSortMeta: SortMeta[];\n\n    _sortField: string;\n\n    _sortOrder: number = 1;\n\n    filteredNodes: any[];\n\n    filterTimeout: any;\n\n    colGroupTemplate: TemplateRef<any>;\n\n    captionTemplate: TemplateRef<any>;\n\n    headerTemplate: TemplateRef<any>;\n\n    bodyTemplate: TemplateRef<any>;\n\n    loadingBodyTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    summaryTemplate: TemplateRef<any>;\n\n    emptyMessageTemplate: TemplateRef<any>;\n\n    paginatorLeftTemplate: TemplateRef<any>;\n\n    paginatorRightTemplate: TemplateRef<any>;\n\n    frozenHeaderTemplate: TemplateRef<any>;\n\n    frozenBodyTemplate: TemplateRef<any>;\n\n    frozenFooterTemplate: TemplateRef<any>;\n\n    frozenColGroupTemplate: TemplateRef<any>;\n\n    lastResizerHelperX: number;\n\n    reorderIconWidth: number;\n\n    reorderIconHeight: number;\n\n    draggedColumn: any;\n\n    dropPosition: number;\n\n    preventSelectionSetterPropagation: boolean;\n\n    _selection: any;\n\n    selectionKeys: any = {};\n\n    rowTouched: boolean;\n\n    editingCell: Element;\n\n    editingCellClick: boolean;\n\n    documentEditListener: any;\n\n    initialized: boolean;\n\n    toggleRowIndex: number;\n\n    ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        this.initialized = true;\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'body':\n                    this.bodyTemplate = item.template;\n                break;\n\n                case 'loadingbody':\n                    this.loadingBodyTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                break;\n\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                break;\n\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                break;\n\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                break;\n\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                break;\n\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                break;\n\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                break;\n\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                break;\n\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    constructor(public el: ElementRef, public zone: NgZone, public tableService: TreeTableService) {}\n\n    ngOnChanges(simpleChange: SimpleChanges) {\n        if (simpleChange.value) {\n            this._value = simpleChange.value.currentValue;\n\n            if (!this.lazy) {\n                this.totalRecords = (this._value ? this._value.length : 0);\n\n                if (this.sortMode == 'single' && this.sortField)\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\n                    this.sortMultiple();\n                else if (this.hasFilter())       //sort already filters\n                    this._filter();\n            }\n\n            this.updateSerializedValue();\n            this.tableService.onUIUpdate(this.value);\n        }\n\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple') {\n                this.sortMultiple();\n            }\n        }\n\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n\n    @Input() get value(): any[] {\n        return this._value;\n    }\n    set value(val: any[]) {\n        this._value = val;\n    }\n\n    updateSerializedValue() {\n        this.serializedValue = [];\n\n        if (this.paginator)\n            this.serializePageNodes();\n        else\n            this.serializeNodes(null, this.filteredNodes||this.value, 0, true);\n    }\n\n    serializeNodes(parent, nodes, level, visible) {\n        if (nodes && nodes.length) {\n            for(let node of nodes) {\n                node.parent = parent;\n                const rowNode = {\n                    node: node,\n                    parent: parent,\n                    level: level,\n                    visible: visible && (parent ? parent.expanded : true)\n                };\n                this.serializedValue.push(rowNode);\n\n                if (rowNode.visible && node.expanded) {\n                    this.serializeNodes(node, node.children, level + 1, rowNode.visible);\n                }\n            }\n        }\n    }\n\n    serializePageNodes() {\n        let data = this.filteredNodes || this.value;\n        this.serializedValue = [];\n        if (data && data.length) {\n            const first = this.lazy ? 0 : this.first;\n\n            for(let i = first; i < (first + this.rows); i++) {\n                let node = data[i];\n                if (node) {\n                    this.serializedValue.push({\n                        node: node,\n                        parent: null,\n                        level: 0,\n                        visible: true\n                    });\n\n                    this.serializeNodes(node, node.children, 1, true);\n                }\n            }\n        }\n    }\n\n    @Input() get totalRecords(): number {\n        return this._totalRecords;\n    }\n    set totalRecords(val: number) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n\n    @Input() get sortField(): string {\n        return this._sortField;\n    }\n\n    set sortField(val: string) {\n        this._sortField = val;\n    }\n\n    @Input() get sortOrder(): number {\n        return this._sortOrder;\n    }\n    set sortOrder(val: number) {\n        this._sortOrder = val;\n    }\n\n    @Input() get multiSortMeta(): SortMeta[] {\n        return this._multiSortMeta;\n    }\n\n    set multiSortMeta(val: SortMeta[]) {\n        this._multiSortMeta = val;\n    }\n\n    @Input() get selection(): any {\n        return this._selection;\n    }\n\n    set selection(val: any) {\n        this._selection = val;\n    }\n\n    updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for(let node of this._selection) {\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(node.data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection.data, this.dataKey))] = 1;\n            }\n        }\n    }\n\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n\n        if (this.lazy)\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        else\n            this.serializePageNodes();\n\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n\n        this.tableService.onUIUpdate(this.value);\n\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n\n    sort(event) {\n        let originalEvent = event.originalEvent;\n\n        if (this.sortMode === 'single') {\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            this.sortSingle();\n\n            if (this.resetPageOnSort && this.scrollable) {\n                this.resetScrollTop();\n            }\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }]\n                \n                    if (this.resetPageOnSort && this.scrollable) {\n                        this.resetScrollTop();\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n\n                    if (this.resetPageOnSort && this.scrollable) {\n                        this.resetScrollTop();\n                    }\n                }\n                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n\n            this.sortMultiple();\n        }\n    }\n\n    sortSingle() {\n        if (this.sortField && this.sortOrder) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                this.sortNodes(this.value);\n\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n\n            let sortMeta: SortMeta = {\n                field: this.sortField,\n                order: this.sortOrder\n            };\n\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n            this.updateSerializedValue();\n        }\n    }\n\n    sortNodes(nodes) {\n        if (!nodes || nodes.length === 0) {\n            return;\n        }\n\n        if (this.customSort) {\n            this.sortFunction.emit({\n                data: nodes,\n                mode: this.sortMode,\n                field: this.sortField,\n                order: this.sortOrder\n            });\n        }\n        else {\n            nodes.sort((node1, node2) => {\n                let value1 = ObjectUtils.resolveFieldData(node1.data, this.sortField);\n                let value2 = ObjectUtils.resolveFieldData(node2.data, this.sortField);\n                let result = null;\n\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2, undefined, {numeric: true});\n                else\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                return (this.sortOrder * result);\n            });\n        }\n\n        for(let node of nodes) {\n            this.sortNodes(node.children);\n        }\n    }\n\n    sortMultiple() {\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n               this.sortMultipleNodes(this.value);\n\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.tableService.onSort(this.multiSortMeta);\n            this.updateSerializedValue();\n        }\n    }\n\n    sortMultipleNodes(nodes) {\n        if (!nodes || nodes.length === 0) {\n            return;\n        }\n\n        if (this.customSort) {\n            this.sortFunction.emit({\n                data: this.value,\n                mode: this.sortMode,\n                multiSortMeta: this.multiSortMeta\n            });\n        }\n        else {\n            nodes.sort((node1, node2) => {\n                return this.multisortField(node1, node2, this.multiSortMeta, 0);\n            });\n        }\n\n        for(let node of nodes) {\n            this.sortMultipleNodes(node.children);\n        }\n    }\n\n    multisortField(node1, node2, multiSortMeta, index) {\n        let value1 = ObjectUtils.resolveFieldData(node1.data, multiSortMeta[index].field);\n        let value2 = ObjectUtils.resolveFieldData(node2.data, multiSortMeta[index].field);\n        let result = null;\n\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && (value1 != value2)) {\n                return (multiSortMeta[index].order * value1.localeCompare(value2, undefined, {numeric: true}));\n            }\n        }\n        else {\n            result = (value1 < value2) ? -1 : 1;\n        }\n\n        if (value1 == value2) {\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(node1, node2, multiSortMeta, index + 1)) : 0;\n        }\n\n        return (multiSortMeta[index].order * result);\n    }\n\n    getSortMeta(field: string) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    isSorted(field: string) {\n        if (this.sortMode === 'single') {\n            return (this.sortField && this.sortField === field);\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for(let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n\n    createLazyLoadMetadata(): any {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta\n        };\n    }\n\n    public resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({top: 0});\n    }\n\n    public scrollToVirtualIndex(index: number) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollToVirtualIndex(index);\n        }\n\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableFrozenViewChild.scrollToVirtualIndex(index);\n        }\n    }\n\n    public scrollTo(options) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollTo(options);\n        }\n\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableFrozenViewChild.scrollTo(options);\n        }\n    }\n\n    isEmpty() {\n        let data = this.filteredNodes||this.value;\n        return data == null || data.length == 0;\n    }\n\n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n\n    onColumnResizeBegin(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\n        event.preventDefault();\n    }\n\n    onColumnResize(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\n\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n\n    onColumnResizeEnd(event, column) {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = column.offsetWidth;\n        let newColumnWidth = columnWidth + delta;\n        let minWidth = column.style.minWidth || 15;\n\n        if (columnWidth + delta > parseInt(minWidth)) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = column.nextElementSibling;\n                while (!nextColumn.offsetParent) {\n                    nextColumn = nextColumn.nextElementSibling;\n                }\n\n                if (nextColumn) {\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n                    let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n                        if (this.scrollable) {\n                            let scrollableView = this.findParentScrollableView(column);\n                            let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.ui-treetable-scrollable-body table');\n                            let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-header-table');\n                            let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-footer-table');\n                            let resizeColumnIndex = DomHandler.index(column);\n\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            column.style.width = newColumnWidth + 'px';\n                            if (nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                if (this.scrollable) {\n                    let scrollableView = this.findParentScrollableView(column);\n                    let scrollableBody = DomHandler.findSingle(scrollableView, '.ui-treetable-scrollable-body');\n                    let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.ui-treetable-scrollable-body table');\n                    let scrollableHeader = DomHandler.findSingle(scrollableView, '.ui-treetable-scrollable-header');\n                    let scrollableFooter = DomHandler.findSingle(scrollableView, '.ui-treetable-scrollable-footer');\n                    let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-header-table');\n                    let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-footer-table');\n                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\n                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\n                    if (scrollableFooterTable) {\n                        scrollableFooterTable.style.width = scrollableFooterTable.offsetWidth + delta + 'px';\n                    }\n                    let resizeColumnIndex = DomHandler.index(column);\n\n                    const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n                    const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n                    const isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n\n                    let setWidth = (container, table, width, isContainerInViewport) => {\n                        if (container && table) {\n                            container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto'\n                            table.style.width = width + 'px';\n                        }\n                    };\n            \n                    setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n                    setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n                    setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n                }\n                else {\n                    this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\n                    column.style.width = newColumnWidth + 'px';\n                    let containerWidth = this.tableViewChild.nativeElement.style.width;\n                    this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n                }\n            }\n\n            this.onColResize.emit({\n                element: column,\n                delta: delta\n            });\n        }\n\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\n    }\n\n    findParentScrollableView(column) {\n        if (column) {\n            let parent = column.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'ui-treetable-scrollable-view')) {\n                parent = parent.parentElement;\n            }\n\n            return parent;\n        }\n        else {\n            return null;\n        }\n    }\n\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n        if (table) {\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n            if (colGroup) {\n                let col = colGroup.children[resizeColumnIndex];\n                let nextCol = col.nextElementSibling;\n                col.style.width = newColumnWidth + 'px';\n\n                if (nextCol && nextColumnWidth) {\n                    nextCol.style.width = nextColumnWidth + 'px';\n                }\n            }\n            else {\n                throw \"Scrollable tables require a colgroup to support resizable columns\";\n            }\n        }\n    }\n\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b');    // For firefox\n    }\n\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n            if (this.draggedColumn != dropHeader) {\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = -1;\n                }\n\n                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'ttreorderablecolumn');\n            let allowDrop = (dragIndex != dropIndex);\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\n                dropIndex = dropIndex + 1;\n            }\n\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\n                dropIndex = dropIndex - 1;\n            }\n\n            if (allowDrop) {\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n            }\n\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n\n    handleRowClick(event) {\n        let targetNode = (<HTMLElement> event.originalEvent.target).nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || (DomHandler.hasClass(event.originalEvent.target, 'ui-clickable'))) {\n            return;\n        }\n\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            let rowNode = event.rowNode;\n            let selected = this.isSelected(rowNode.node);\n            let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowNode.node.data, this.dataKey)) : null;\n\n            if (metaSelection) {\n                let metaKey = event.originalEvent.metaKey||event.originalEvent.ctrlKey;\n\n                if (selected && metaKey) {\n                    if (this.isSingleSelectionMode()) {\n                        this._selection = null;\n                        this.selectionKeys = {};\n                        this.selectionChange.emit(null);\n                    }\n                    else {\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\n                        this._selection = this.selection.filter((val,i) => i != selectionIndex);\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            delete this.selectionKeys[dataKeyValue];\n                        }\n                    }\n\n                    this.onNodeUnselect.emit({originalEvent: event.originalEvent, node: rowNode.node, type: 'row'});\n                }\n                else {\n                    if (this.isSingleSelectionMode()) {\n                        this._selection = rowNode.node;\n                        this.selectionChange.emit(rowNode.node);\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        if (metaKey) {\n                            this._selection = this.selection||[];\n                        }\n                        else {\n                            this._selection = [];\n                            this.selectionKeys = {};\n                        }\n\n                        this._selection = [...this.selection, rowNode.node];\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n\n                    this.onNodeSelect.emit({originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex});\n                }\n            }\n            else {\n                if (this.selectionMode === 'single') {\n                    if (selected) {\n                        this._selection = null;\n                        this.selectionKeys = {};\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\n                    }\n                    else {\n                        this._selection = rowNode.node;\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n                else if (this.selectionMode === 'multiple') {\n                    if (selected) {\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\n                        this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\n                        if (dataKeyValue) {\n                            delete this.selectionKeys[dataKeyValue];\n                        }\n                    }\n                    else {\n                        this._selection = this.selection ? [...this.selection, rowNode.node] : [rowNode.node];\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n            }\n\n            this.tableService.onSelectionChange();\n        }\n\n        this.rowTouched = false;\n    }\n\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const node = event.rowNode.node;\n\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = node;\n                this.contextMenuSelectionChange.emit(node);\n                this.onContextMenuSelect.emit({originalEvent: event.originalEvent, node: node});\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(node);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(node);\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = node;\n                        this.selectionChange.emit(node);\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this.selection = [node];\n                        this.selectionChange.emit(this.selection);\n                    }\n\n                    if (dataKeyValue) {\n                        this.selectionKeys[dataKeyValue] = 1;\n                    }\n                }\n\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({originalEvent: event.originalEvent, node: node});\n            }\n        }\n    }\n\n    toggleNodeWithCheckbox(event) {\n        this.selection = this.selection||[];\n        this.preventSelectionSetterPropagation = true;\n        let node = event.rowNode.node;\n        let selected = this.isSelected(node);\n\n        if (selected) {\n            this.propagateSelectionDown(node, false);\n            if (event.rowNode.parent) {\n                this.propagateSelectionUp(node.parent, false);\n            }\n            this.selectionChange.emit(this.selection);\n            this.onNodeUnselect.emit({originalEvent: event, node: node});\n        }\n        else {\n            this.propagateSelectionDown(node, true);\n            if (event.rowNode.parent) {\n                this.propagateSelectionUp(node.parent, true);\n            }\n            this.selectionChange.emit(this.selection);\n            this.onNodeSelect.emit({originalEvent: event, node: node});\n        }\n\n        this.tableService.onSelectionChange();\n    }\n\n    toggleNodesWithCheckbox(event: Event, check: boolean) {\n        let data = this.filteredNodes || this.value;\n        this._selection = check && data ? data.slice() : [];\n        if (check) {\n            if (data && data.length) {\n                for (let node of data) {\n                    this.propagateSelectionDown(node, true);\n                }\n            }\n        }\n        else {\n            this._selection = [];\n            this.selectionKeys = {};\n        }\n\n        this.preventSelectionSetterPropagation = true;\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({originalEvent: event, checked: check});\n    }\n\n    propagateSelectionUp(node: TreeNode, select: boolean) {\n        if (node.children && node.children.length) {\n            let selectedChildCount: number = 0;\n            let childPartialSelected: boolean = false;\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n\n            for (let child of node.children) {\n                if (this.isSelected(child))\n                selectedChildCount++;\n                else if (child.partialSelected)\n                    childPartialSelected = true;\n            }\n\n            if (select && selectedChildCount == node.children.length) {\n                this._selection =  [...this.selection||[], node];\n                node.partialSelected = false;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n            }\n            else {\n                if (!select) {\n                    let index = this.findIndexInSelection(node);\n                    if (index >= 0) {\n                        this._selection =  this.selection.filter((val,i) => i!=index);\n\n                        if (dataKeyValue) {\n                            delete this.selectionKeys[dataKeyValue];\n                        }\n                    }\n                }\n\n                if (childPartialSelected || selectedChildCount > 0 && selectedChildCount != node.children.length)\n                    node.partialSelected = true;\n                else\n                    node.partialSelected = false;\n            }\n        }\n\n        let parent = node.parent;\n        if (parent) {\n            this.propagateSelectionUp(parent, select);\n        }\n    }\n\n    propagateSelectionDown(node: TreeNode, select: boolean) {\n        let index = this.findIndexInSelection(node);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n\n        if (select && index == -1) {\n            this._selection =  [...this.selection||[],node]\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n        else if (!select && index > -1) {\n            this._selection =  this.selection.filter((val,i) => i!=index);\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n\n        node.partialSelected = false;\n\n        if (node.children && node.children.length) {\n            for (let child of node.children) {\n                this.propagateSelectionDown(child, select);\n            }\n        }\n    }\n\n    isSelected(node) {\n        if (node && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[ObjectUtils.resolveFieldData(node.data, this.dataKey)] !== undefined;\n            }\n            else {\n                if (this.selection instanceof Array)\n                    return this.findIndexInSelection(node) > -1;\n                else\n                    return this.equals(node, this.selection);\n            }\n        }\n\n        return false;\n    }\n\n    findIndexInSelection(node: any) {\n        let index: number = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(node, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n\n        return index;\n    }\n\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n\n    equals(node1, node2) {\n        return this.compareSelectionBy === 'equals' ? (node1 === node2) : ObjectUtils.equals(node1.data, node2.data, this.dataKey);\n    }\n\n    filter(value, field, matchMode) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        } else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n    }\n\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n\n    isFilterBlank(filter: any): boolean {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n\n    _filter() {\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n\n            if (!this.hasFilter()) {\n                this.filteredNodes = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields||this.columns;\n                }\n\n                this.filteredNodes = [];\n                const isStrictMode = this.filterMode === 'strict';\n                let isValueChanged = false;\n\n                for (let node of this.value) {\n                    let copyNode = {...node};\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let paramsWithoutNode;\n\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            let filterMeta = this.filters[prop];\n                            let filterField = prop;\n                            let filterValue = filterMeta.value;\n                            let filterMatchMode = filterMeta.matchMode || 'startsWith';\n                            let filterConstraint = FilterUtils[filterMatchMode];\n                            paramsWithoutNode = {filterField, filterValue, filterConstraint, isStrictMode};\n                            if ((isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode))) ||\n                                (!isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode)))) {\n                                    localMatch = false;\n                            }\n\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for(let j = 0; j < globalFilterFieldsArray.length; j++) {\n                            let copyNodeForGlobal = {...copyNode};\n                            let filterField = globalFilterFieldsArray[j].field||globalFilterFieldsArray[j];\n                            let filterValue = this.filters['global'].value;\n                            let filterConstraint = FilterUtils[this.filters['global'].matchMode];\n                            paramsWithoutNode = {filterField, filterValue, filterConstraint, isStrictMode};\n\n                            if ((isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode))) ||\n                                (!isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode)))) {\n                                    globalMatch = true;\n                                    copyNode = copyNodeForGlobal;\n                            }\n                        }\n                    }\n\n                    let matches = localMatch;\n                    if (this.filters['global']) {\n                        matches = localMatch && globalMatch;\n                    }\n\n                    if (matches) {\n                        this.filteredNodes.push(copyNode);\n                    }\n\n                    isValueChanged = isValueChanged || !localMatch || globalMatch || (localMatch && this.filteredNodes.length > 0) || (!globalMatch && this.filteredNodes.length === 0)\n                }\n\n                if (!isValueChanged) {\n                    this.filteredNodes = null;\n                }\n\n                if (this.paginator) {\n                    this.totalRecords = this.filteredNodes ? this.filteredNodes.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n\n        this.first = 0;\n\n        const filteredValue = this.filteredNodes || this.value;\n\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: filteredValue\n        });\n\n        this.tableService.onUIUpdate(filteredValue);\n        this.updateSerializedValue();\n\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n\n    findFilteredNodes(node, paramsWithoutNode) {\n        if (node) {\n            let matched = false;\n            if (node.children) {\n                let childNodes = [...node.children];\n                node.children = [];\n                for (let childNode of childNodes) {\n                    let copyChildNode = {...childNode};\n                    if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n                        matched = true;\n                        node.children.push(copyChildNode);\n                    }\n                }\n            }\n\n            if (matched) {\n                return true;\n            }\n        }\n    }\n\n    isFilterMatched(node, {filterField, filterValue, filterConstraint, isStrictMode}) {\n        let matched = false;\n        let dataFieldValue = ObjectUtils.resolveFieldData(node.data, filterField);\n        if (filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {\n            matched = true;\n        }\n\n        if (!matched || (isStrictMode && !this.isNodeLeaf(node))) {\n            matched = this.findFilteredNodes(node, {filterField, filterValue, filterConstraint, isStrictMode}) || matched;\n        }\n\n        return matched;\n    }\n\n    isNodeLeaf(node) {\n        return node.leaf === false ? false : !(node.children && node.children.length);\n    }\n\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n\n        return !empty;\n    }\n\n    public reset() {\n        this._sortField = null;\n        this._sortOrder = 1;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n\n        this.filteredNodes = null;\n        this.filters = {};\n\n        this.first = 0;\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = (this._value ? this._value.length : 0);\n        }\n    }\n\n    updateEditingCell(cell) {\n        this.editingCell = cell;\n        this.bindDocumentEditListener();\n    }\n\n    isEditingCellValid() {\n        return (this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\n    }\n\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = (event) => {\n                if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n                    DomHandler.removeClass(this.editingCell, 'ui-editing-cell');\n                    this.editingCell = null;\n                    this.unbindDocumentEditListener();\n                }\n\n                this.editingCellClick = false;\n            };\n\n            document.addEventListener('click', this.documentEditListener);\n        }\n    }\n\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            document.removeEventListener('click', this.documentEditListener);\n            this.documentEditListener = null;\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n    }\n\n}\n\n@Component({\n    selector: '[pTreeTableBody]',\n    template: `\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n                <ng-container *ngIf=\"serializedNode.visible\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"tt.virtualScroll\">\n            <ng-template cdkVirtualFor let-serializedNode let-rowIndex=\"index\" [cdkVirtualForOf]=\"tt.serializedValue\" [cdkVirtualForTrackBy]=\"tt.rowTrackBy\">\n                <ng-container *ngIf=\"serializedNode.visible\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: {$implicit: columns}\"></ng-container>\n        </ng-container>\n    `\n})\nexport class TTBody {\n\n    @Input(\"pTreeTableBody\") columns: any[];\n\n    @Input(\"pTreeTableBodyTemplate\") template: TemplateRef<any>;\n\n    @Input() frozen: boolean;\n\n    constructor(public tt: TreeTable) {}\n}\n\n@Component({\n    selector: '[ttScrollableView]',\n    template: `\n        <div #scrollHeader class=\"ui-treetable-scrollable-header ui-widget-header\">\n            <div #scrollHeaderBox class=\"ui-treetable-scrollable-header-box\">\n                <table class=\"ui-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate||tt.headerTemplate : tt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf=\"!tt.virtualScroll; else virtualScrollTemplate\">\n            <div #scrollBody class=\"ui-treetable-scrollable-body\" [ngStyle]=\"{'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined}\">\n                <table #scrollTable [class]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"ui-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]=\"tt.virtualRowHeight\" [style.height]=\"tt.scrollHeight !== 'flex' ? scrollHeight : undefined\" \n                    [minBufferPx]=\"tt.minBufferPx\" [maxBufferPx]=\"tt.maxBufferPx\" class=\"ui-treetable-virtual-scrollable-body\">\n                <table #scrollTable [class]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"ui-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter *ngIf=\"tt.footerTemplate\" class=\"ui-treetable-scrollable-footer ui-widget-header\">\n            <div #scrollFooterBox class=\"ui-treetable-scrollable-footer-box\">\n                <table class=\"ui-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"ui-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate||tt.footerTemplate : tt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `\n})\nexport class TTScrollableView implements AfterViewInit, OnDestroy, AfterViewChecked {\n\n    @Input(\"ttScrollableView\") columns: any[];\n\n    @Input() frozen: boolean;\n\n    @ViewChild('scrollHeader') scrollHeaderViewChild: ElementRef;\n\n    @ViewChild('scrollHeaderBox') scrollHeaderBoxViewChild: ElementRef;\n\n    @ViewChild('scrollBody') scrollBodyViewChild: ElementRef;\n\n    @ViewChild('scrollTable') scrollTableViewChild: ElementRef;\n\n    @ViewChild('loadingTable') scrollLoadingTableViewChild: ElementRef;\n\n    @ViewChild('scrollFooter') scrollFooterViewChild: ElementRef;\n\n    @ViewChild('scrollFooterBox') scrollFooterBoxViewChild: ElementRef;\n\n    @ViewChild('scrollableAligner') scrollableAlignerViewChild: ElementRef;\n\n    @ViewChild(CdkVirtualScrollViewport) virtualScrollBody: CdkVirtualScrollViewport;\n\n    headerScrollListener;\n\n    bodyScrollListener;\n\n    footerScrollListener;\n\n    frozenSiblingBody: Element;\n\n    subscription: Subscription;\n\n    totalRecordsSubscription: Subscription;\n\n    initialized: boolean;\n\n    _scrollHeight: string;\n\n    preventBodyScrollPropagation: boolean;\n\n    @Input() get scrollHeight(): string {\n        return this._scrollHeight;\n    }\n    set scrollHeight(val: string) {\n        this._scrollHeight = val;\n        if (val != null && (val.includes('%') || val.includes('calc'))) {\n            console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.')\n        }\n    }\n\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) {\n        this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.alignScrollBar();\n                    this.initialized = true;\n                }, 50);\n            });\n        });\n\n        this.initialized = false;\n     }\n\n    ngAfterViewChecked() {\n        if (!this.initialized && this.el.nativeElement.offsetParent) {\n            this.alignScrollBar();\n            this.initialized = true;\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.frozen) {\n            if (this.tt.frozenColumns || this.tt.frozenBodyTemplate) {\n                DomHandler.addClass(this.el.nativeElement, 'ui-treetable-unfrozen-view');\n            }\n\n            let frozenView = this.el.nativeElement.previousElementSibling;\n            if (frozenView) {\n                if (this.tt.virtualScroll)\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.ui-treetable-virtual-scrollable-body');\n                else\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.ui-treetable-scrollable-body');\n            }\n        }\n        else {\n            if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n                this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n            }\n        }\n\n        this.bindEvents();\n        this.alignScrollBar();\n    }\n\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            let scrollBarWidth = DomHandler.calculateScrollbarWidth();\n\n            if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n                this.headerScrollListener = this.onHeaderScroll.bind(this);\n                this.scrollHeaderBoxViewChild.nativeElement.addEventListener('scroll', this.headerScrollListener);\n            }\n\n            if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n                this.footerScrollListener = this.onFooterScroll.bind(this);\n                this.scrollFooterViewChild.nativeElement.addEventListener('scroll', this.footerScrollListener);\n            }\n\n            if (!this.frozen) {\n                this.bodyScrollListener = this.onBodyScroll.bind(this);\n\n                if (this.tt.virtualScroll)\n                    this.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', this.bodyScrollListener);\n                else\n                    this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\n            }\n        });\n    }\n\n    unbindEvents() {\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderBoxViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\n        }\n\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\n        }\n\n        if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n            this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n        }\n\n        if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {\n            this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n        }\n    }\n\n    onHeaderScroll() {\n        const scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\n\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n\n        this.preventBodyScrollPropagation = true;\n    }\n\n    onFooterScroll() {\n        const scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n\n        this.preventBodyScrollPropagation = true;\n    }\n\n    onBodyScroll(event) {\n        if (this.preventBodyScrollPropagation) {\n            this.preventBodyScrollPropagation = false;\n            return;\n        }\n\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n\n        if (this.frozenSiblingBody) {\n            this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n        }\n    }\n\n    scrollToVirtualIndex(index: number): void {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollToIndex(index);\n        }\n    }\n\n    scrollTo(options): void {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollTo(options);\n        }\n        else {\n            if (this.scrollBodyViewChild.nativeElement.scrollTo) {\n                this.scrollBodyViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n                this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n\n    hasVerticalOverflow() {\n        if (this.tt.virtualScroll)\n            return (this.virtualScrollBody.getDataLength() * this.tt.virtualRowHeight) > this.virtualScrollBody.getViewportSize();\n        else\n            return DomHandler.getOuterHeight(this.scrollTableViewChild.nativeElement) > DomHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);\n    }\n\n    alignScrollBar() {\n        if (!this.frozen) {\n            let scrollBarWidth = this.hasVerticalOverflow() ? DomHandler.calculateScrollbarWidth() : 0;\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\n\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n                this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\n            }\n        }\n        this.initialized = false;\n    }\n\n    ngOnDestroy() {\n        this.unbindEvents();\n\n        this.frozenSiblingBody = null;\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n        this.initialized = false;\n    }\n}\n\n@Directive({\n    selector: '[ttSortableColumn]',\n    host: {\n        '[class.ui-sortable-column]': 'isEnabled()',\n        '[class.ui-state-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null'\n    }\n})\nexport class TTSortableColumn implements OnInit, OnDestroy {\n\n    @Input(\"ttSortableColumn\") field: string;\n\n    @Input() ttSortableColumnDisabled: boolean;\n\n    sorted: boolean;\n\n    subscription: Subscription;\n\n    constructor(public tt: TreeTable) {\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\n                this.updateSortState();\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n\n    updateSortState() {\n        this.sorted = this.tt.isSorted(this.field);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: MouseEvent) {\n        if (this.isEnabled()) {\n            this.updateSortState();\n            this.tt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n\n            DomHandler.clearSelection();\n        }\n    }\n\n    @HostListener('keydown.enter', ['$event'])\n    onEnterKey(event: MouseEvent) {\n        this.onClick(event);\n    }\n\n    isEnabled() {\n        return this.ttSortableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n@Component({\n    selector: 'p-treeTableSortIcon',\n    template: `\n        <i class=\"ui-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n    `\n})\nexport class TTSortIcon implements OnInit, OnDestroy {\n\n    @Input() field: string;\n\n    @Input() ariaLabelDesc: string;\n\n    @Input() ariaLabelAsc: string;\n\n    subscription: Subscription;\n\n    sortOrder: number;\n\n    constructor(public tt: TreeTable) {\n        this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\n            this.updateSortState();\n        });\n    }\n\n    ngOnInit() {\n        this.updateSortState();\n    }\n\n    onClick(event){\n        event.preventDefault();\n    }\n\n    updateSortState() {\n        if (this.tt.sortMode === 'single') {\n            this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;\n        }\n        else if (this.tt.sortMode === 'multiple') {\n            let sortMeta = this.tt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order: 0;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n@Directive({\n    selector: '[ttResizableColumn]'\n})\nexport class TTResizableColumn implements AfterViewInit, OnDestroy {\n\n    @Input() ttResizableColumnDisabled: boolean;\n\n    resizer: HTMLSpanElement;\n\n    resizerMouseDownListener: any;\n\n    documentMouseMoveListener: any;\n\n    documentMouseUpListener: any;\n\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'ui-resizable-column');\n            this.resizer = document.createElement('span');\n            this.resizer.className = 'ui-column-resizer ui-clickable';\n            this.el.nativeElement.appendChild(this.resizer);\n\n            this.zone.runOutsideAngular(() => {\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n            });\n        }\n    }\n\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\n\n            this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n            document.addEventListener('mouseup', this.documentMouseUpListener);\n        });\n    }\n\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseMoveListener = null;\n        }\n\n        if (this.documentMouseUpListener) {\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\n            this.documentMouseUpListener = null;\n        }\n    }\n\n    onMouseDown(event: Event) {\n        this.tt.onColumnResizeBegin(event);\n        this.bindDocumentEvents();\n    }\n\n    onDocumentMouseMove(event: Event) {\n        this.tt.onColumnResize(event);\n    }\n\n    onDocumentMouseUp(event: Event) {\n        this.tt.onColumnResizeEnd(event, this.el.nativeElement);\n        this.unbindDocumentEvents();\n    }\n\n    isEnabled() {\n        return this.ttResizableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n\n        this.unbindDocumentEvents();\n    }\n}\n\n@Directive({\n    selector: '[ttReorderableColumn]'\n})\nexport class TTReorderableColumn implements AfterViewInit, OnDestroy {\n\n    @Input() ttReorderableColumnDisabled: boolean;\n\n    dragStartListener: any;\n\n    dragOverListener: any;\n\n    dragEnterListener: any;\n\n    dragLeaveListener: any;\n\n    mouseDownListener: any;\n\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n\n            this.dragOverListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n\n            this.dragEnterListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || DomHandler.hasClass(event.target, 'ui-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n\n    onDragStart(event) {\n        this.tt.onColumnDragStart(event, this.el.nativeElement);\n    }\n\n    onDragOver(event) {\n        event.preventDefault();\n    }\n\n    onDragEnter(event) {\n        this.tt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n\n    onDragLeave(event) {\n        this.tt.onColumnDragLeave(event);\n    }\n\n    @HostListener('drop', ['$event'])\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.tt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n\n    isEnabled() {\n        return this.ttReorderableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n\n}\n\n@Directive({\n    selector: '[ttSelectableRow]',\n    host: {\n        '[class.ui-state-highlight]': 'selected'\n    }\n})\nexport class TTSelectableRow implements OnInit, OnDestroy {\n\n    @Input(\"ttSelectableRow\") rowNode: any;\n\n    @Input() ttSelectableRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public tt: TreeTable, public tableService: TreeTableService) {\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.tt.isSelected(this.rowNode.node);\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.tt.isSelected(this.rowNode.node);\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    onEnterKey(event: KeyboardEvent) {\n        if (event.which === 13) {\n            this.onClick(event);\n        }\n    }\n\n    @HostListener('touchend', ['$event'])\n    onTouchEnd(event: Event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowTouchEnd(event);\n        }\n    }\n\n    isEnabled() {\n        return this.ttSelectableRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[ttSelectableRowDblClick]',\n    host: {\n        '[class.ui-state-highlight]': 'selected'\n    }\n})\nexport class TTSelectableRowDblClick implements OnInit, OnDestroy {\n\n    @Input(\"ttSelectableRowDblClick\") rowNode: any;\n\n    @Input() ttSelectableRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public tt: TreeTable, public tableService: TreeTableService) {\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.tt.isSelected(this.rowNode.node);\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.tt.isSelected(this.rowNode.node);\n        }\n    }\n\n    @HostListener('dblclick', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n    }\n\n    isEnabled() {\n        return this.ttSelectableRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[ttContextMenuRow]',\n    host: {\n        '[class.ui-contextmenu-selected]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n    }\n})\nexport class TTContextMenuRow {\n\n    @Input(\"ttContextMenuRow\") rowNode: any;\n\n    @Input() ttContextMenuRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public tt: TreeTable, public tableService: TreeTableService, private el: ElementRef) {\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.contextMenuSource$.subscribe((node) => {\n                this.selected = this.tt.equals(this.rowNode.node, node);\n            });\n        }\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onContextMenu(event: Event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowRightClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n\n            this.el.nativeElement.focus();\n\n            event.preventDefault();\n        }\n    }\n\n    isEnabled() {\n        return this.ttContextMenuRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Component({\n    selector: 'p-treeTableCheckbox',\n    template: `\n        <div class=\"ui-chkbox ui-treetable-chkbox ui-widget\" (click)=\"onClick($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\"  role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable pi\" [ngClass]=\"{'pi-check':checked, 'pi-minus': rowNode.node.partialSelected}\"></span>\n            </div>\n        </div>\n    `\n})\nexport class TTCheckbox  {\n\n    @Input() disabled: boolean;\n\n    @Input(\"value\") rowNode: any;\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    checked: boolean;\n\n    subscription: Subscription;\n\n    constructor(public tt: TreeTable, public tableService: TreeTableService) {\n        this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.tt.isSelected(this.rowNode.node);\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.tt.isSelected(this.rowNode.node);\n    }\n\n    onClick(event: Event) {\n        if (!this.disabled) {\n            this.tt.toggleNodeWithCheckbox({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Component({\n    selector: 'p-treeTableHeaderCheckbox',\n    template: `\n        <div class=\"ui-chkbox ui-treetable-header-chkbox ui-widget\" (click)=\"onClick($event, cb.checked)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"!tt.value||tt.value.length === 0\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled': (!tt.value || tt.value.length === 0)}\"  role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `\n})\nexport class TTHeaderCheckbox  {\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    checked: boolean;\n\n    disabled: boolean;\n\n    selectionChangeSubscription: Subscription;\n\n    valueChangeSubscription: Subscription;\n\n    constructor(public tt: TreeTable, public tableService: TreeTableService) {\n        this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n\n        this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n\n    onClick(event: Event, checked) {\n        if (this.tt.value && this.tt.value.length > 0) {\n            this.tt.toggleNodesWithCheckbox(event, !checked);\n        }\n\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    }\n\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n\n    updateCheckedState() {\n        let checked: boolean;\n        const data = this.tt.filteredNodes||this.tt.value;\n\n        if (data) {\n            for (let node of data) {\n                if (this.tt.isSelected(node)) {\n                    checked = true;\n                }\n                else  {\n                    checked = false;\n                    break;\n                }\n            }\n        }\n        else {\n            checked = false;\n        }\n\n        return checked;\n    }\n\n}\n\n@Directive({\n    selector: '[ttEditableColumn]'\n})\nexport class TTEditableColumn implements AfterViewInit {\n\n    @Input(\"ttEditableColumn\") data: any;\n\n    @Input(\"ttEditableColumnField\") field: any;\n\n    @Input() ttEditableColumnDisabled: boolean;\n\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) {}\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'ui-editable-column');\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: MouseEvent) {\n        if (this.isEnabled()) {\n            this.tt.editingCellClick = true;\n\n            if (this.tt.editingCell) {\n                if (this.tt.editingCell !== this.el.nativeElement) {\n                    if (!this.tt.isEditingCellValid()) {\n                        return;\n                    }\n\n                    DomHandler.removeClass(this.tt.editingCell, 'ui-editing-cell');\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n\n    openCell() {\n        this.tt.updateEditingCell(this.el.nativeElement);\n        DomHandler.addClass(this.el.nativeElement, 'ui-editing-cell');\n        this.tt.onEditInit.emit({ field: this.field, data: this.data});\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusable = DomHandler.findSingle(this.el.nativeElement, 'input, textarea');\n                if (focusable) {\n                    focusable.focus();\n                }\n            }, 50);\n        });\n    }\n\n    closeEditingCell() {\n        DomHandler.removeClass(this.tt.editingCell, 'ui-editing-cell');\n        this.tt.editingCell = null;\n        this.tt.unbindDocumentEditListener();\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            //enter\n            if (event.keyCode == 13) {\n                if (this.tt.isEditingCellValid()) {\n                    DomHandler.removeClass(this.tt.editingCell, 'ui-editing-cell');\n                    this.closeEditingCell();\n                    this.tt.onEditComplete.emit({ field: this.field, data: this.data });\n                }\n\n                event.preventDefault();\n            }\n\n            //escape\n            else if (event.keyCode == 27) {\n                if (this.tt.isEditingCellValid()) {\n                    DomHandler.removeClass(this.tt.editingCell, 'ui-editing-cell');\n                    this.closeEditingCell();\n                    this.tt.onEditCancel.emit({ field: this.field, data: this.data });\n                }\n\n                event.preventDefault();\n            }\n\n            //tab\n            else if (event.keyCode == 9) {\n                this.tt.onEditComplete.emit({ field: this.field, data: this.data });\n\n                if (event.shiftKey)\n                    this.moveToPreviousCell(event);\n                else\n                    this.moveToNextCell(event);\n            }\n        }\n    }\n\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !DomHandler.hasClass(cell, 'ui-editing-cell')) {\n                cell = cell.parentElement;\n            }\n\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n\n    moveToPreviousCell(event: KeyboardEvent) {\n        let currentCell = this.findCell(event.target);\n        let row = currentCell.parentElement;\n        let targetCell = this.findPreviousEditableColumn(currentCell);\n\n        if (targetCell) {\n            DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n        }\n    }\n\n    moveToNextCell(event: KeyboardEvent) {\n        let currentCell = this.findCell(event.target);\n        let row = currentCell.parentElement;\n        let targetCell = this.findNextEditableColumn(currentCell);\n\n        if (targetCell) {\n            DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n        }\n    }\n\n    findPreviousEditableColumn(cell: Element) {\n        let prevCell = cell.previousElementSibling;\n\n        if (!prevCell) {\n            let previousRow = cell.parentElement ? cell.parentElement.previousElementSibling : null;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n\n        if (prevCell) {\n            if (DomHandler.hasClass(prevCell, 'ui-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n\n    findNextEditableColumn(cell: Element) {\n        let nextCell = cell.nextElementSibling;\n\n        if (!nextCell) {\n            let nextRow = cell.parentElement ? cell.parentElement.nextElementSibling : null;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n\n        if (nextCell) {\n            if (DomHandler.hasClass(nextCell, 'ui-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n\n    isEnabled() {\n        return this.ttEditableColumnDisabled !== true;\n    }\n\n}\n\n@Component({\n    selector: 'p-treeTableCellEditor',\n    template: `\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `\n})\nexport class TreeTableCellEditor implements AfterContentInit {\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\n\n    inputTemplate: TemplateRef<any>;\n\n    outputTemplate: TemplateRef<any>;\n\n    constructor(public tt: TreeTable, public editableColumn: TTEditableColumn) { }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n}\n\n@Directive({\n    selector: '[ttRow]',\n    host: {\n        '[attr.tabindex]': '\"0\"'\n    }\n})\nexport class TTRow {\n\n    @Input('ttRow') rowNode: any;\n\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) {}\n\n    @HostListener('keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent) {\n        switch (event.which) {\n            //down arrow\n            case 40:\n                let nextRow = this.el.nativeElement.nextElementSibling;\n                if (nextRow) {\n                    nextRow.focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            //down arrow\n            case 38:\n                let prevRow = this.el.nativeElement.previousElementSibling;\n                if (prevRow) {\n                    prevRow.focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            //left arrow\n            case 37:\n                if (this.rowNode.node.expanded) {\n                    this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\n                    this.rowNode.node.expanded = false;\n\n                    this.tt.onNodeCollapse.emit({\n                        originalEvent: event,\n                        node: this.rowNode.node\n                    });\n\n                    this.tt.updateSerializedValue();\n                    this.tt.tableService.onUIUpdate(this.tt.value);\n                    this.restoreFocus();\n                }\n            break;\n\n            //right arrow\n            case 39:\n                if (!this.rowNode.node.expanded) {\n                    this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\n                    this.rowNode.node.expanded = true;\n\n                    this.tt.onNodeExpand.emit({\n                        originalEvent: event,\n                        node: this.rowNode.node\n                    });\n\n                    this.tt.updateSerializedValue();\n                    this.tt.tableService.onUIUpdate(this.tt.value);\n                    this.restoreFocus();\n                }\n            break;\n        }\n    }\n\n    restoreFocus() {\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let row = DomHandler.findSingle(this.tt.containerViewChild.nativeElement, '.ui-treetable-tbody').children[this.tt.toggleRowIndex];\n                if (row) {\n                    row.focus();\n                }\n            }, 25);\n        });\n    }\n}\n\n@Component({\n    selector: 'p-treeTableToggler',\n    template: `\n        <a class=\"ui-treetable-toggler ui-unselectable-text\" (click)=\"onClick($event)\"\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\" [style.marginLeft]=\"rowNode.level * 16 + 'px'\">\n            <i [ngClass]=\"rowNode.node.expanded ? 'pi pi-fw pi-chevron-down' : 'pi pi-fw pi-chevron-right'\"></i>\n        </a>\n    `\n})\nexport class TreeTableToggler {\n\n    @Input() rowNode: any;\n\n    constructor(public tt: TreeTable) {}\n\n    onClick(event: Event) {\n        this.rowNode.node.expanded = !this.rowNode.node.expanded;\n\n        if (this.rowNode.node.expanded) {\n            this.tt.onNodeExpand.emit({\n                originalEvent: event,\n                node: this.rowNode.node\n            });\n        }\n        else {\n            this.tt.onNodeCollapse.emit({\n                originalEvent: event,\n                node: this.rowNode.node\n            });\n        }\n\n        this.tt.updateSerializedValue();\n        this.tt.tableService.onUIUpdate(this.tt.value);\n\n        event.preventDefault();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,PaginatorModule,ScrollingModule],\n    exports: [TreeTable,SharedModule,TreeTableToggler,TTSortableColumn,TTSortIcon,TTResizableColumn,TTRow,TTReorderableColumn,TTSelectableRow,TTSelectableRowDblClick,TTContextMenuRow,TTCheckbox,TTHeaderCheckbox,TTEditableColumn,TreeTableCellEditor,ScrollingModule],\n    declarations: [TreeTable,TreeTableToggler,TTScrollableView,TTBody,TTSortableColumn,TTSortIcon,TTResizableColumn,TTRow,TTReorderableColumn,TTSelectableRow,TTSelectableRowDblClick,TTContextMenuRow,TTCheckbox,TTHeaderCheckbox,TTEditableColumn,TreeTableCellEditor]\n})\nexport class TreeTableModule { }\n"]}