{"version":3,"sources":["webpack:///src/app/components/inputmask/inputmask.ts","webpack:///src/app/components/inputmask/public_api.ts"],"names":["INPUTMASK_VALUE_ACCESSOR","provide","useExisting","InputMask","multi","el","type","slotChar","autoClear","characterPattern","onComplete","onFocus","onBlur","onInput","onModelChange","onModelTouched","ngOnInit","ua","getUserAgent","androidChrome","test","initMask","_mask","val","writeValue","value","tests","partialPosition","mask","length","len","firstNonMaskPos","defs","maskTokens","split","i","c","push","RegExp","lastRequiredNonMaskPos","buffer","getPlaceholder","defaultBuffer","join","inputViewChild","nativeElement","undefined","checkVal","focusText","updateFilledState","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","caret","first","last","range","begin","end","offsetParent","document","activeElement","setSelectionRange","collapse","moveEnd","moveStart","select","selectionStart","selectionEnd","createRange","duplicate","text","isCompleted","completed","charAt","seekNext","pos","seekPrev","shiftL","j","writeBuffer","Math","max","shiftR","t","handleAndroidInput","e","curVal","oldVal","setTimeout","updateModel","emit","onInputBlur","focused","event","createEvent","initEvent","dispatchEvent","onKeyDown","readonly","k","which","keyCode","iPhone","clearBuffer","preventDefault","onKeyPress","p","next","ctrlKey","altKey","metaKey","String","fromCharCode","proxy","start","allow","lastMatch","substring","onInputFocus","clearTimeout","caretTimeoutId","replace","onInputChange","handleInputChange","getUnmaskedValue","unmaskedBuffer","updatedValue","unmask","target","filled","focus","ngOnDestroy","selector","template","host","providers","changeDetection","Default","InputMaskModule","imports","exports","declarations"],"mappings":"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","file":"default~components-inputmask-inputmaskdemo-module~components-inputnumber-inputnumberdemo-module-es5.js","sourcesContent":["/*\n    Port of jQuery MaskedInput by DigitalBush as a Native Angular2 Component in Typescript without jQuery\n    https://github.com/digitalBush/jquery.maskedinput/\n\n    Copyright (c) 2007-2014 Josh Bush (digitalbush.com)\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n*/\nimport {NgModule,Component,ElementRef,OnInit,OnDestroy,Input,forwardRef,Output,EventEmitter,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const INPUTMASK_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputMask),\n  multi: true\n};\n\n@Component({\n    selector: 'p-inputMask',\n    template: `<input #input pInputText [attr.id]=\"inputId\" [attr.type]=\"type\" [attr.name]=\"name\" [ngStyle]=\"style\" [ngClass]=\"styleClass\" [attr.placeholder]=\"placeholder\" [attr.title]=\"title\"\n        [attr.size]=\"size\" [attr.autocomplete]=\"autocomplete\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.aria-label]=\"ariaLabel\" [attr.aria-required]=\"ariaRequired\" [disabled]=\"disabled\" [readonly]=\"readonly\" [attr.required]=\"required\"\n        (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (keydown)=\"onKeyDown($event)\" (keypress)=\"onKeyPress($event)\" [attr.autofocus]=\"autoFocus\"\n        (input)=\"onInputChange($event)\" (paste)=\"handleInputChange($event)\">`,\n    host: {\n        '[class.ui-inputwrapper-filled]': 'filled',\n        '[class.ui-inputwrapper-focus]': 'focused'\n    },\n    providers: [INPUTMASK_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class InputMask implements OnInit,OnDestroy,ControlValueAccessor {\n\n    @Input() type: string = 'text';\n\n    @Input() slotChar: string = '_';\n\n    @Input() autoClear: boolean = true;\n\n    @Input() style: any;\n\n    @Input() inputId: string;\n\n    @Input() styleClass: string;\n\n    @Input() placeholder: string;\n\n    @Input() size: number;\n\n    @Input() maxlength: number;\n\n    @Input() tabindex: string;\n\n    @Input() title: string;\n\n    @Input() ariaLabel: string;\n\n    @Input() ariaRequired: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() readonly: boolean;\n\n    @Input() unmask: boolean;\n\n    @Input() name: string;\n\n    @Input() required: boolean;\n\n    @Input() characterPattern: string = '[A-Za-z]';\n\n    @Input() autoFocus: boolean;\n\n    @Input() autocomplete: string;\n\n    @ViewChild('input', { static: true }) inputViewChild: ElementRef;\n\n    @Output() onComplete: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Output() onInput: EventEmitter<any> = new EventEmitter();\n\n    value: any;\n\n    _mask: string;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    input: HTMLInputElement;\n\n    filled: boolean;\n\n    defs: any;\n\n    tests: any[];\n\n    partialPosition: any;\n\n    firstNonMaskPos: number;\n\n    lastRequiredNonMaskPos: any;\n\n    len: number;\n\n    oldVal: string;\n\n    buffer: any;\n\n    defaultBuffer: string;\n\n    focusText: string;\n\n    caretTimeoutId: any;\n\n    androidChrome: boolean;\n\n    focused: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    ngOnInit() {\n        let ua = DomHandler.getUserAgent();\n        this.androidChrome = /chrome/i.test(ua) && /android/i.test(ua);\n\n        this.initMask();\n    }\n\n    @Input() get mask(): string {\n        return this._mask;\n    }\n\n    set mask(val:string) {\n        this._mask = val;\n\n        this.initMask();\n        this.writeValue('');\n        this.onModelChange(this.value);\n    }\n\n    initMask() {\n        this.tests = [];\n        this.partialPosition = this.mask.length;\n        this.len = this.mask.length;\n        this.firstNonMaskPos = null;\n        this.defs = {\n            '9': '[0-9]',\n            'a': this.characterPattern,\n            '*': `${this.characterPattern}|[0-9]`\n        };\n\n        let maskTokens = this.mask.split('');\n        for(let i = 0; i < maskTokens.length; i++) {\n            let c = maskTokens[i];\n            if (c == '?') {\n\t\t\t\tthis.len--;\n\t\t\t\tthis.partialPosition = i;\n\t\t\t}\n            else if (this.defs[c]) {\n\t\t\t\tthis.tests.push(new RegExp(this.defs[c]));\n\t\t\t\tif (this.firstNonMaskPos === null) {\n\t                this.firstNonMaskPos = this.tests.length - 1;\n\t\t\t\t}\n                if (i < this.partialPosition){\n                    this.lastRequiredNonMaskPos = this.tests.length - 1;\n                }\n\t\t\t}\n            else {\n\t\t\t\tthis.tests.push(null);\n\t\t\t}\n        }\n\n        this.buffer = [];\n        for(let i = 0; i < maskTokens.length; i++) {\n            let c = maskTokens[i];\n            if (c != '?') {\n                if (this.defs[c])\n                    this.buffer.push(this.getPlaceholder(i));\n                else\n                    this.buffer.push(c);\n            }\n        }\n        this.defaultBuffer = this.buffer.join('');\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            if (this.value == undefined || this.value == null)\n                this.inputViewChild.nativeElement.value = '';\n            else\n                this.inputViewChild.nativeElement.value = this.value;\n\n            this.checkVal();\n            this.focusText = this.inputViewChild.nativeElement.value;\n            this.updateFilledState();\n        }\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n\n    caret(first?: number, last?: number) {\n        let range, begin, end;\n\n        if (!this.inputViewChild.nativeElement.offsetParent||this.inputViewChild.nativeElement !== document.activeElement) {\n            return;\n        }\n\n        if (typeof first == 'number') {\n            begin = first;\n            end = (typeof last === 'number') ? last : begin;\n            if (this.inputViewChild.nativeElement.setSelectionRange) {\n                this.inputViewChild.nativeElement.setSelectionRange(begin, end);\n            }\n            else if (this.inputViewChild.nativeElement['createTextRange']) {\n                range = this.inputViewChild.nativeElement['createTextRange']();\n                range.collapse(true);\n                range.moveEnd('character', end);\n                range.moveStart('character', begin);\n                range.select();\n            }\n        }\n        else {\n            if (this.inputViewChild.nativeElement.setSelectionRange) {\n    \t\t\tbegin = this.inputViewChild.nativeElement.selectionStart;\n    \t\t\tend = this.inputViewChild.nativeElement.selectionEnd;\n    \t\t}\n            else if (document['selection'] && document['selection'].createRange) {\n    \t\t\trange = document['selection'].createRange();\n    \t\t\tbegin = 0 - range.duplicate().moveStart('character', -100000);\n    \t\t\tend = begin + range.text.length;\n    \t\t}\n\n    \t\treturn {begin: begin, end: end};\n        }\n    }\n\n    isCompleted(): boolean {\n        let completed: boolean;\n        for (let i = this.firstNonMaskPos; i <= this.lastRequiredNonMaskPos; i++) {\n            if (this.tests[i] && this.buffer[i] === this.getPlaceholder(i)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    getPlaceholder(i: number) {\n        if (i < this.slotChar.length) {\n            return this.slotChar.charAt(i);\n        }\n        return this.slotChar.charAt(0);\n    }\n\n    seekNext(pos) {\n        while (++pos < this.len && !this.tests[pos]);\n        return pos;\n    }\n\n    seekPrev(pos) {\n        while (--pos >= 0 && !this.tests[pos]);\n        return pos;\n    }\n\n    shiftL(begin:number,end:number) {\n        let i, j;\n\n        if (begin<0) {\n            return;\n        }\n\n        for (i = begin, j = this.seekNext(end); i < this.len; i++) {\n            if (this.tests[i]) {\n                if (j < this.len && this.tests[i].test(this.buffer[j])) {\n                    this.buffer[i] = this.buffer[j];\n                    this.buffer[j] = this.getPlaceholder(j);\n                } else {\n                    break;\n                }\n\n                j = this.seekNext(j);\n            }\n        }\n        this.writeBuffer();\n        this.caret(Math.max(this.firstNonMaskPos, begin));\n    }\n\n    shiftR(pos) {\n        let i, c, j, t;\n\n        for (i = pos, c = this.getPlaceholder(pos); i < this.len; i++) {\n            if (this.tests[i]) {\n                j = this.seekNext(i);\n                t = this.buffer[i];\n                this.buffer[i] = c;\n                if (j < this.len && this.tests[j].test(t)) {\n                    c = t;\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n\n    handleAndroidInput(e) {\n        var curVal = this.inputViewChild.nativeElement.value;\n        var pos = this.caret();\n        if (this.oldVal && this.oldVal.length && this.oldVal.length > curVal.length ) {\n            // a deletion or backspace happened\n            this.checkVal(true);\n            while (pos.begin > 0 && !this.tests[pos.begin-1])\n                  pos.begin--;\n            if (pos.begin === 0)\n            {\n               while (pos.begin < this.firstNonMaskPos && !this.tests[pos.begin])\n                  pos.begin++;\n            }\n\n            setTimeout(() => {\n                this.caret(pos.begin, pos.begin);\n                this.updateModel(e);\n                if (this.isCompleted()) {\n                    this.onComplete.emit();\n                }\n            }, 0);\n        }\n        else {\n            this.checkVal(true);\n            while (pos.begin < this.len && !this.tests[pos.begin])\n                pos.begin++;\n\n            setTimeout(() => {\n                this.caret(pos.begin, pos.begin);\n                this.updateModel(e);\n                if (this.isCompleted()) {\n                    this.onComplete.emit();\n                }\n            }, 0);\n        }\n    }\n\n    onInputBlur(e) {\n        this.focused = false;\n        this.onModelTouched();\n        this.checkVal();\n        this.updateFilledState();\n        this.onBlur.emit(e);\n\n        if (this.inputViewChild.nativeElement.value != this.focusText || this.inputViewChild.nativeElement.value != this.value) {\n            this.updateModel(e);\n            let event = document.createEvent('HTMLEvents');\n            event.initEvent('change', true, false);\n            this.inputViewChild.nativeElement.dispatchEvent(event);\n        }\n    }\n\n    onKeyDown(e) {\n        if (this.readonly) {\n            return;\n        }\n\n        let k = e.which||e.keyCode,\n            pos,\n            begin,\n            end;\n        let iPhone = /iphone/i.test(DomHandler.getUserAgent());\n        this.oldVal = this.inputViewChild.nativeElement.value;\n\n        //backspace, delete, and escape get special treatment\n        if (k === 8 || k === 46 || (iPhone && k === 127)) {\n            pos = this.caret();\n            begin = pos.begin;\n            end = pos.end;\n\n            if (end - begin === 0) {\n                begin=k!==46?this.seekPrev(begin):(end=this.seekNext(begin-1));\n                end=k===46?this.seekNext(end):end;\n            }\n\n            this.clearBuffer(begin, end);\n\t\t\tthis.shiftL(begin, end - 1);\n            this.updateModel(e);\n            this.onInput.emit(e);\n\n            e.preventDefault();\n        }\n        else if ( k === 13 ) { // enter\n            this.onInputBlur(e);\n            this.updateModel(e);\n        }\n        else if (k === 27) { // escape\n            this.inputViewChild.nativeElement.value = this.focusText;\n            this.caret(0, this.checkVal());\n            this.updateModel(e);\n\n            e.preventDefault();\n        }\n    }\n\n    onKeyPress(e) {\n        if (this.readonly){\n            return;\n        }\n\n        var k = e.which || e.keyCode,\n            pos = this.caret(),\n            p,\n            c,\n            next,\n            completed;\n\n        if (e.ctrlKey || e.altKey || e.metaKey || k < 32  || (k > 34 && k < 41)) {//Ignore\n            return;\n        } else if ( k && k !== 13 ) {\n            if (pos.end - pos.begin !== 0){\n                this.clearBuffer(pos.begin, pos.end);\n                this.shiftL(pos.begin, pos.end-1);\n            }\n\n            p = this.seekNext(pos.begin - 1);\n            if (p < this.len) {\n                c = String.fromCharCode(k);\n                if (this.tests[p].test(c)) {\n                    this.shiftR(p);\n\n                    this.buffer[p] = c;\n                    this.writeBuffer();\n                    next = this.seekNext(p);\n\n                    if (/android/i.test(DomHandler.getUserAgent())) {\n                        //Path for CSP Violation on FireFox OS 1.1\n                        let proxy = () => {\n                            this.caret(next);\n                        };\n\n                        setTimeout(proxy,0);\n                    }\n                    else {\n                        this.caret(next);\n                    }\n\n                    if (pos.begin <= this.lastRequiredNonMaskPos) {\n                        completed = this.isCompleted();\n                    }\n\n                    this.onInput.emit(e);\n                }\n            }\n            e.preventDefault();\n        }\n\n        this.updateModel(e);\n\n        this.updateFilledState();\n\n        if (completed) {\n            this.onComplete.emit();\n        }\n    }\n\n    clearBuffer(start, end) {\n        let i;\n        for (i = start; i < end && i < this.len; i++) {\n            if (this.tests[i]) {\n                this.buffer[i] = this.getPlaceholder(i);\n            }\n        }\n    }\n\n    writeBuffer() {\n        this.inputViewChild.nativeElement.value = this.buffer.join('');\n    }\n\n    checkVal(allow?: boolean) {\n        //try to place characters where they belong\n        let test = this.inputViewChild.nativeElement.value,\n            lastMatch = -1,\n            i,\n            c,\n            pos;\n\n        for (i = 0, pos = 0; i < this.len; i++) {\n            if (this.tests[i]) {\n                this.buffer[i] = this.getPlaceholder(i);\n                while (pos++ < test.length) {\n                    c = test.charAt(pos - 1);\n                    if (this.tests[i].test(c)) {\n                        this.buffer[i] = c;\n                        lastMatch = i;\n                        break;\n                    }\n                }\n                if (pos > test.length) {\n                    this.clearBuffer(i + 1, this.len);\n                    break;\n                }\n            } else {\n                if (this.buffer[i] === test.charAt(pos)) {\n                    pos++;\n                }\n                if ( i < this.partialPosition){\n                    lastMatch = i;\n                }\n            }\n        }\n        if (allow) {\n            this.writeBuffer();\n        } else if (lastMatch + 1 < this.partialPosition) {\n            if (this.autoClear || this.buffer.join('') === this.defaultBuffer) {\n                // Invalid value. Remove it and replace it with the\n                // mask, which is the default behavior.\n                if (this.inputViewChild.nativeElement.value) this.inputViewChild.nativeElement.value = '';\n                this.clearBuffer(0, this.len);\n            } else {\n                // Invalid value, but we opt to show the value to the\n                // user and allow them to correct their mistake.\n                this.writeBuffer();\n            }\n        } else {\n            this.writeBuffer();\n            this.inputViewChild.nativeElement.value = this.inputViewChild.nativeElement.value.substring(0, lastMatch + 1);\n        }\n        return (this.partialPosition ? i : this.firstNonMaskPos);\n    }\n\n    onInputFocus(event) {\n        if (this.readonly){\n            return;\n        }\n\n        this.focused = true;\n\n        clearTimeout(this.caretTimeoutId);\n        let pos;\n\n        this.focusText = this.inputViewChild.nativeElement.value;\n\n        pos = this.checkVal();\n\n        this.caretTimeoutId = setTimeout(() => {\n            if (this.inputViewChild.nativeElement !== document.activeElement){\n                return;\n            }\n            this.writeBuffer();\n            if (pos == this.mask.replace(\"?\",\"\").length) {\n                this.caret(0, pos);\n            } else {\n                this.caret(pos);\n            }\n        }, 10);\n\n        this.onFocus.emit(event);\n    }\n\n    onInputChange(event) {\n        if (this.androidChrome)\n            this.handleAndroidInput(event);\n        else\n            this.handleInputChange(event);\n\n        this.onInput.emit(event);\n    }\n\n    handleInputChange(event) {\n        if (this.readonly){\n            return;\n        }\n\n        setTimeout(() => {\n            var pos = this.checkVal(true);\n            this.caret(pos);\n            this.updateModel(event);\n            if (this.isCompleted()) {\n                this.onComplete.emit();\n            }\n        }, 0);\n    }\n\n    getUnmaskedValue() {\n        let unmaskedBuffer = [];\n        for(let i = 0; i < this.buffer.length; i++) {\n            let c = this.buffer[i];\n            if (this.tests[i] && c != this.getPlaceholder(i)) {\n                unmaskedBuffer.push(c);\n            }\n        }\n\n        return unmaskedBuffer.join('');\n    }\n\n    updateModel(e) {\n        const updatedValue = this.unmask ? this.getUnmaskedValue() : e.target.value;\n        if (updatedValue !== null || updatedValue !== undefined) {\n            this.value = updatedValue;\n            this.onModelChange(this.value);\n        }\n    }\n\n    updateFilledState() {\n        this.filled = this.inputViewChild.nativeElement && this.inputViewChild.nativeElement.value != '';\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n\n    ngOnDestroy() {\n\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,InputTextModule],\n    exports: [InputMask],\n    declarations: [InputMask]\n})\nexport class InputMaskModule { }\n","export * from './inputmask';"]}