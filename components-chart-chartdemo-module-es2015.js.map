{"version":3,"sources":["./src/app/showcase/components/chart/barchart/barchartdemo.html","./src/app/showcase/components/chart/chartdemo.html","./src/app/showcase/components/chart/doughnutchart/doughnutchartdemo.html","./src/app/showcase/components/chart/linechart/linechartdemo.html","./src/app/showcase/components/chart/piechart/piechartdemo.html","./src/app/showcase/components/chart/polarareachart/polarareachartdemo.html","./src/app/showcase/components/chart/radarchart/radarchartdemo.html","./src/app/showcase/components/chart/barchart/barchartdemo.ts","./src/app/showcase/components/chart/chartdemo-routing.module.ts","./src/app/showcase/components/chart/chartdemo.module.ts","./src/app/showcase/components/chart/chartdemo.ts","./src/app/showcase/components/chart/doughnutchart/doughnutchartdemo.ts","./src/app/showcase/components/chart/linechart/linechartdemo.ts","./src/app/showcase/components/chart/piechart/piechartdemo.ts","./src/app/showcase/components/chart/polarareachart/polarareachartdemo.ts","./src/app/showcase/components/chart/radarchart/radarchartdemo.ts"],"names":[],"mappings":"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","file":"components-chart-chartdemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">BarChart</span>\\n        <span>A bar chart or bar graph is a chart that presents Grouped data with rectangular bars with lengths proportional to the values that they represent.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation-charts\\\">\\n    <p-chart type=\\\"bar\\\" [data]=\\\"data\\\"></p-chart>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/chart/barchart\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <span>View on GitHub</span>\\n    </a>\\n    <a href=\\\"https://stackblitz.com/edit/primeng-barchart-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n        <span>Edit in StackBlitz</span>\\n    </a>\\n\\n    <p-tabView>\\n        <p-tabPanel header=\\\"barchartdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class BarChartDemo &#123;\\n\\n    data: any;\\n\\n    constructor() &#123;\\n        this.data = &#123;\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                &#123;\\n                    label: 'My First dataset',\\n                    backgroundColor: '#42A5F5',\\n                    borderColor: '#1E88E5',\\n                    data: [65, 59, 80, 81, 56, 55, 40]\\n                &#125;,\\n                &#123;\\n                    label: 'My Second dataset',\\n                    backgroundColor: '#9CCC65',\\n                    borderColor: '#7CB342',\\n                    data: [28, 48, 40, 19, 86, 27, 90]\\n                &#125;\\n            ]\\n        &#125;\\n    &#125;\\n&#125;\\n</code>\\n</pre>            \\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"barchartdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"bar\\\" [data]=\\\"data\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-barchart-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Charts</span>\\n        <span>Chart components are based on <a style=\\\"color:#68d4f9\\\" href=\\\"http://www.chartjs.org/\\\">Charts.js</a> 2.7.x, an open source HTML5 based charting library.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <h3 style=\\\"margin-top:0px\\\">Charts.js</h3>\\n    <p>To begin with, first you must install the charts.js package using npm and then include \\n        it in your project. An example with CLI would be;</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\nnpm install chart.js --save\\n</code>\\n</pre>\\n        \\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\n\\\"scripts\\\": [\\n    \\\"../node_modules/chart.js/dist/Chart.js\\\",\\n    //..others\\n],\\n</code>\\n</pre>\\n\\n    <h3>Chart Component</h3>\\n    <p>Chart component is used to display a chart on page. The classname is UIChart and element tag is p-chart.</p>\\n    \\n<h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;ChartModule&#125; from 'primeng/chart';\\n</code>\\n</pre>\\n\\n    <h3>Change Detection</h3>\\n    <p>In order to chart to redraw itself, a new data object needs to be created. Changing the array contents without creating a new\\n    array instance does not trigger change detection.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"pie\\\" [data]=\\\"data\\\"&gt;&lt;/p-chart&gt;\\n&lt;button type=\\\"button\\\" pButton (click)=\\\"update($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nupdate(event: Event) &#123;\\n    this.data = //create new data\\n&#125;\\n</code>\\n</pre>\\n\\n    <h3>Properties</h3>\\n    <div class=\\\"doc-tablewrapper\\\">\\n        <table class=\\\"doc-table\\\">\\n            <thead>\\n                <tr>\\n                    <th>Name</th>\\n                    <th>Type</th>\\n                    <th>Default</th>\\n                    <th>Description</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td>type</td>\\n                    <td>string</td>\\n                    <td>null</td>\\n                    <td>Type of the chart.</td>\\n                </tr>\\n                <tr>\\n                    <td>data</td>\\n                    <td>any</td>\\n                    <td>null</td>\\n                    <td>Data to display.</td>\\n                </tr>\\n                <tr>\\n                    <td>options</td>\\n                    <td>any</td>\\n                    <td>null</td>\\n                    <td>Options to customize the chart.</td>\\n                </tr>\\n                <tr>\\n                    <td>plugins</td>\\n                    <td>any[]</td>\\n                    <td>null</td>\\n                    <td>Array of per-chart plugins to customize the chart behaviour.</td>\\n                </tr>\\n                <tr>\\n                    <td>width</td>\\n                    <td>string</td>\\n                    <td>null</td>\\n                    <td>Width of the chart.</td>\\n                </tr>\\n                <tr>\\n                    <td>height</td>\\n                    <td>string</td>\\n                    <td>null</td>\\n                    <td>Height of the chart.</td>\\n                </tr>\\n                <tr>\\n                    <td>responsive</td>\\n                    <td>boolean</td>\\n                    <td>true</td>\\n                    <td>Whether the chart is redrawn on screen size change.</td>\\n                </tr>\\n                <tr>\\n                    <td>onDataSelect</td>\\n                    <td>function</td>\\n                    <td>null</td>\\n                    <td>Callback to execute when an element on chart is clicked.</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n    <h3>Methods</h3>\\n    <div class=\\\"doc-tablewrapper\\\">\\n        <table class=\\\"doc-table\\\">\\n            <thead>\\n                <tr>\\n                    <th>Name</th>\\n                    <th>Parameters</th>\\n                    <th>Description</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td>refresh</td>\\n                    <td>-</td>\\n                    <td>Redraws the graph with new data.</td>\\n                </tr>\\n                <tr>\\n                    <td>reinit</td>\\n                    <td>-</td>\\n                    <td>Destroys the graph first and then creates it again.</td>\\n                </tr>\\n                <tr>\\n                    <td>generateLegend</td>\\n                    <td>-</td>\\n                    <td>Returns an HTML string of a legend for that chart. The legend is generated from the legendCallback in the options.</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    \\n\\n    <h3>Chart Types</h3>\\n    <p>Chart type is defined using the type property. Currently there are 6 options available; pie, doughtnut, line(line or horizontalBar), bar, radar and polarArea.</p>\\n\\n    <h3>Data</h3>\\n    <p>Data of a chart is provided using a binding to the data property, each type has its own format of data. Here is an example of a line chart.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"line\\\" [data]=\\\"data\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class LineChartDemo &#123;\\n\\n    data: any;\\n    \\n    constructor() &#123;\\n        this.data = &#123;\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                &#123;\\n                    label: 'First Dataset',\\n                    data: [65, 59, 80, 81, 56, 55, 40]\\n                &#125;,\\n                &#123;\\n                    label: 'Second Dataset',\\n                    data: [28, 48, 40, 19, 86, 27, 90]\\n                &#125;\\n            ]\\n        &#125;\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n    <h3>Options</h3>\\n    <p>While a series can be customized per dataset, general chart options are defined with options property. \\n        Example below adds a title and customizes the legend position of the chart. For all available options refer to the charts.js documentation.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"line\\\" [data]=\\\"data\\\" [options]=\\\"options\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class LineChartDemo &#123;\\n\\n    data: any;\\n    \\n    options: any;\\n    \\n    constructor() &#123;\\n        this.data = &#123;\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                &#123;\\n                    label: 'First Dataset',\\n                    data: [65, 59, 80, 81, 56, 55, 40]\\n                &#125;,\\n                &#123;\\n                    label: 'Second Dataset',\\n                    data: [28, 48, 40, 19, 86, 27, 90]\\n                &#125;\\n            ]\\n        &#125;\\n        \\n        this.options = &#123;\\n            title: &#123;\\n                display: true,\\n                text: 'My Title',\\n                fontSize: 16\\n            &#125;,\\n            legend: &#123;\\n                position: 'bottom'\\n            &#125;\\n        &#125;;\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n    <h3>Events</h3>\\n    <p>When data is selected with click event, chart component provides onDataSelect callback to process the selected data.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"line\\\" [data]=\\\"data\\\" (onDataSelect)=\\\"selectData($event)\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nselectData(event) &#123;\\n    //event.dataset = Selected dataset\\n    //event.element = Selected element\\n    //event.element._datasetIndex = Index of the dataset in data\\n    //event.element._index = Index of the data in dataset\\n&#125;\\n</code>\\n</pre>  \\n\\n    <h3>Responsive</h3>\\n    <p>Charts are responsive by default and vw-vh units should be used when customizing the width and height of the chart.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"line\\\" [data]=\\\"data\\\" width=\\\"40vw\\\" height=\\\"80vh\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n\\n<p>If the chart is not responsive, other units should be preferred.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"line\\\" [data]=\\\"data\\\" width=\\\"400px\\\" height=\\\"400px\\\" [responsive]=\\\"false\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n\\n\\n</div>\\n\";","export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">DoughnutChart</span>\\n        <span>A doughnut chart is a variant of the pie chart, with a blank center allowing for additional information about the data as a whole to be included.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation-charts\\\">\\n    <p-chart type=\\\"doughnut\\\" [data]=\\\"data\\\"></p-chart>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/doughnutchart\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <span>View on GitHub</span>\\n    </a>\\n    <a href=\\\"https://stackblitz.com/edit/primeng-doughnutchart-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n        <span>Edit in StackBlitz</span>\\n    </a>\\n\\n    <p-tabView>\\n        <p-tabPanel header=\\\"doughnutchartdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class DoughnutChartDemo &#123;\\n\\n    data: any;\\n\\n    constructor() &#123;\\n        this.data = &#123;\\n            labels: ['A','B','C'],\\n            datasets: [\\n                &#123;\\n                    data: [300, 50, 100],\\n                    backgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ],\\n                    hoverBackgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ]\\n                &#125;]    \\n            &#125;;\\n    &#125;\\n&#125;\\n</code>\\n</pre>            \\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"doughnutchartdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"doughnut\\\" [data]=\\\"data\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-doughnutchart-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">LineChart</span>\\n        <span>A line chart or line graph is a type of chart which displays information as a series of data points called 'markers' connected by straight line segments.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-toast></p-toast>\\n\\n    <p-chart type=\\\"line\\\" [data]=\\\"data\\\" (onDataSelect)=\\\"selectData($event)\\\"></p-chart>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/linechart/linechartdemo\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <span>View on GitHub</span>\\n    </a>\\n    <a href=\\\"https://stackblitz.com/edit/primeng-linechart-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n        <span>Edit in StackBlitz</span>\\n    </a>\\n\\n    <p-tabView>\\n        <p-tabPanel header=\\\"linechartdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class LineChartDemo &#123;\\n\\n    data: any;\\n\\n    constructor(private messageService: MessageService) &#123;\\n        this.data = &#123;\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                &#123;\\n                    label: 'First Dataset',\\n                    data: [65, 59, 80, 81, 56, 55, 40],\\n                    fill: false,\\n                    borderColor: '#4bc0c0'\\n                &#125;,\\n                &#123;\\n                    label: 'Second Dataset',\\n                    data: [28, 48, 40, 19, 86, 27, 90],\\n                    fill: false,\\n                    borderColor: '#565656'\\n                &#125;\\n            ]\\n        &#125;\\n    &#125;\\n\\n    selectData(event) &#123;\\n        this.messageService.add(&#123;severity: 'info', summary: 'Data Selected', 'detail': this.data.datasets[event.element._datasetIndex].data[event.element._index]&#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"linechartdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\n\\n&lt;p-chart type=\\\"line\\\" [data]=\\\"data\\\" (onDataSelect)=\\\"selectData($event)\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-linechart-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">PieChart</span>\\n        <span>A pie chart is a circular statistical graphic, which is divided into slices to illustrate numerical proportion.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation-charts\\\">\\n    <p-chart type=\\\"pie\\\" [data]=\\\"data\\\"></p-chart>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/piechart\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <span>View on GitHub</span>\\n    </a>\\n    <a href=\\\"https://stackblitz.com/edit/primeng-piechart-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n        <span>Edit in StackBlitz</span>\\n    </a>\\n\\n    <p-tabView>\\n        <p-tabPanel header=\\\"piechartdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class PieChartDemo &#123;\\n\\n    data: any;\\n\\n    constructor() &#123;\\n        this.data = &#123;\\n            labels: ['A','B','C'],\\n            datasets: [\\n                &#123;\\n                    data: [300, 50, 100],\\n                    backgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ],\\n                    hoverBackgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ]\\n                &#125;]    \\n            &#125;;\\n    &#125;\\n&#125;\\n</code>\\n</pre>            \\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"piechartdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"pie\\\" [data]=\\\"data\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-piechart-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">PolarAreaChart</span>\\n        <span>Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation-charts\\\">\\n    <p-chart type=\\\"polarArea\\\" [data]=\\\"data\\\"></p-chart>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/polarchart\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <span>View on GitHub</span>\\n    </a>\\n    <a href=\\\"https://stackblitz.com/edit/primeng-polarareachart-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n        <span>Edit in StackBlitz</span>\\n    </a>\\n\\n    <p-tabView>\\n        <p-tabPanel header=\\\"polarareachartdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class PolarAreaChartDemo &#123;\\n\\n    data: any;\\n\\n    constructor() &#123;\\n        this.data = &#123;\\n            datasets: [&#123;\\n                data: [\\n                    11,\\n                    16,\\n                    7,\\n                    3,\\n                    14\\n                ],\\n                backgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#4BC0C0\\\",\\n                    \\\"#FFCE56\\\",\\n                    \\\"#E7E9ED\\\",\\n                    \\\"#36A2EB\\\"\\n                ],\\n                label: 'My dataset'\\n            &#125;],\\n            labels: [\\n                \\\"Red\\\",\\n                \\\"Green\\\",\\n                \\\"Yellow\\\",\\n                \\\"Grey\\\",\\n                \\\"Blue\\\"\\n            ]\\n        &#125;\\n    &#125;\\n&#125;\\n</code>\\n</pre>            \\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"polarareachartdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"polarArea\\\" [data]=\\\"data\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-polarareachart-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">RadarChart</span>\\n        <span>A radar chart is a graphical method of displaying multivariate data in the form of a two-dimensional chart of three or more quantitative variables represented on axes starting from the same point.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation-charts\\\">\\n    <p-chart type=\\\"radar\\\" [data]=\\\"data\\\"></p-chart>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/radarchart\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <span>View on GitHub</span>\\n    </a>\\n    <a href=\\\"https://stackblitz.com/edit/primeng-radarchart-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n        <span>Edit in StackBlitz</span>\\n    </a>\\n\\n    <p-tabView>\\n        <p-tabPanel header=\\\"radarchartdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class RadarChartDemo &#123;\\n\\n    data: any;\\n\\n    constructor() &#123;\\n        this.data = &#123;\\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\\n            datasets: [\\n                &#123;\\n                    label: 'My First dataset',\\n                    backgroundColor: 'rgba(179,181,198,0.2)',\\n                    borderColor: 'rgba(179,181,198,1)',\\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\\n                    pointBorderColor: '#fff',\\n                    pointHoverBackgroundColor: '#fff',\\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\\n                    data: [65, 59, 90, 81, 56, 55, 40]\\n                &#125;,\\n                &#123;\\n                    label: 'My Second dataset',\\n                    backgroundColor: 'rgba(255,99,132,0.2)',\\n                    borderColor: 'rgba(255,99,132,1)',\\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\\n                    pointBorderColor: '#fff',\\n                    pointHoverBackgroundColor: '#fff',\\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\\n                    data: [28, 48, 40, 19, 96, 27, 100]\\n                &#125;\\n            ]\\n        &#125;;\\n    &#125;\\n&#125;\\n</code>\\n</pre>            \\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"radarchartdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chart type=\\\"radar\\\" [data]=\\\"data\\\"&gt;&lt;/p-chart&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-radarchart-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './barchartdemo.html'\n})\nexport class BarChartDemo {\n\n    data: any;\n\n    constructor() {\n        this.data = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: '#42A5F5',\n                    borderColor: '#1E88E5',\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: '#9CCC65',\n                    borderColor: '#7CB342',\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }\n            ]\n        }\n    }\n}","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ChartDemo} from './chartdemo';\nimport {PieChartDemo} from './piechart/piechartdemo';\nimport {DoughnutChartDemo} from './doughnutchart/doughnutchartdemo';\nimport {BarChartDemo} from './barchart/barchartdemo';\nimport {LineChartDemo} from './linechart/linechartdemo';\nimport {PolarAreaChartDemo} from './polarareachart/polarareachartdemo';\nimport {RadarChartDemo} from './radarchart/radarchartdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'', component: ChartDemo},\n            {path:'pie', component: PieChartDemo},\n            {path:'doughnut', component: DoughnutChartDemo},\n            {path:'bar', component: BarChartDemo},\n            {path:'line', component: LineChartDemo},\n            {path:'polararea',component: PolarAreaChartDemo},\n            {path:'radar', component: RadarChartDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ChartDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartDemoRoutingModule} from './chartdemo-routing.module';\nimport {ChartDemo} from './chartdemo';\nimport {PieChartDemo} from './piechart/piechartdemo';\nimport {DoughnutChartDemo} from './doughnutchart/doughnutchartdemo';\nimport {BarChartDemo} from './barchart/barchartdemo';\nimport {LineChartDemo} from './linechart/linechartdemo';\nimport {PolarAreaChartDemo} from './polarareachart/polarareachartdemo';\nimport {RadarChartDemo} from './radarchart/radarchartdemo';\nimport {ChartModule} from 'primeng/chart';\nimport {ToastModule} from 'primeng/toast';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tChartDemoRoutingModule,\n        ChartModule,\n        ToastModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tChartDemo,\n        PieChartDemo,\n        DoughnutChartDemo,\n        BarChartDemo,\n        LineChartDemo,\n        PolarAreaChartDemo,\n        RadarChartDemo\n\t]\n})\nexport class ChartDemoModule {}\n","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './chartdemo.html'\n})\nexport class ChartDemo {\n    \n}","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './doughnutchartdemo.html'\n})\nexport class DoughnutChartDemo {\n\n    data: any;\n\n    constructor() {\n        this.data = {\n            labels: ['A','B','C'],\n            datasets: [\n                {\n                    data: [300, 50, 100],\n                    backgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#FFCE56\"\n                    ],\n                    hoverBackgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#FFCE56\"\n                    ]\n                }]    \n            };\n    }\n}","import {Component} from '@angular/core';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n    templateUrl: './linechartdemo.html',\n    providers: [MessageService]\n})\nexport class LineChartDemo {\n\n    data: any;\n\n    constructor(private messageService: MessageService) {\n        this.data = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    borderColor: '#4bc0c0'\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    borderColor: '#565656'\n                }\n            ]\n        }\n    }\n\n    selectData(event) {\n        this.messageService.add({severity: 'info', summary: 'Data Selected', 'detail': this.data.datasets[event.element._datasetIndex].data[event.element._index]});\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './piechartdemo.html'\n})\nexport class PieChartDemo {\n\n    data: any;\n\n    constructor() {\n        this.data = {\n            labels: ['A','B','C'],\n            datasets: [\n                {\n                    data: [300, 50, 100],\n                    backgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#FFCE56\"\n                    ],\n                    hoverBackgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#FFCE56\"\n                    ]\n                }]    \n            };\n    }\n}","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './polarareachartdemo.html'\n})\nexport class PolarAreaChartDemo {\n\n    data: any;\n\n    constructor() {\n        this.data = {\n            datasets: [{\n                data: [\n                    11,\n                    16,\n                    7,\n                    3,\n                    14\n                ],\n                backgroundColor: [\n                    \"#FF6384\",\n                    \"#4BC0C0\",\n                    \"#FFCE56\",\n                    \"#E7E9ED\",\n                    \"#36A2EB\"\n                ],\n                label: 'My dataset'\n            }],\n            labels: [\n                \"Red\",\n                \"Green\",\n                \"Yellow\",\n                \"Grey\",\n                \"Blue\"\n            ]\n        }\n    }\n}","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './radarchartdemo.html'\n})\nexport class RadarChartDemo {\n\n    data: any;\n\n    constructor() {\n        this.data = {\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(179,181,198,0.2)',\n                    borderColor: 'rgba(179,181,198,1)',\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\n                    data: [65, 59, 90, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgba(255,99,132,0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\n                    data: [28, 48, 40, 19, 96, 27, 100]\n                }\n            ]\n        };\n    }\n}"],"sourceRoot":"webpack:///"}