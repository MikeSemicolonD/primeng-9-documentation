{"version":3,"sources":["./src/app/showcase/components/filterutils/filterutilsdemo.html","./src/app/showcase/components/filterutils/filterutils-routing.module.ts","./src/app/showcase/components/filterutils/filterutilsdemo.module.ts","./src/app/showcase/components/filterutils/filterutilsdemo.ts"],"names":[],"mappings":"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","file":"components-filterutils-filterutilsdemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">FilterUtils</span>\\n        <span>FilterUtils is a helper to filter collections against constraints. Examples below demonstrate use-cases with AutoComplete and DataTable.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation ui-fluid\\\">\\n    <h3>Basic</h3>\\n    <p-autoComplete [(ngModel)]=\\\"brand\\\" [suggestions]=\\\"filteredBrands\\\" (completeMethod)=\\\"filterWithContains($event)\\\" [size]=\\\"30\\\"\\n    [minLength]=\\\"1\\\" placeholder=\\\"Hint: type 'a' or 'o'\\\" [dropdown]=\\\"true\\\" field=\\\"label\\\" [style]=\\\"{'width':'250px'}\\\">\\n        <ng-template let-brand pTemplate=\\\"item\\\">\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <img src=\\\"assets/showcase/images/demo/car/{{brand.value}}.png\\\" style=\\\"width:32px;display:inline-block;margin:5px 0 2px 5px\\\"/>\\n                <div style=\\\"font-size:18px;float:right;margin:10px 10px 0 0\\\">{{brand.value}}</div>\\n            </div>\\n        </ng-template>\\n    </p-autoComplete>\\n\\n    <h3>Custom</h3>\\n    <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"cars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n        <ng-template pTemplate=\\\"header\\\" let-columns>\\n            <tr>\\n                <th *ngFor=\\\"let col of columns\\\">\\n                    {{col.header}}\\n                </th>\\n            </tr>\\n            <tr>\\n                <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n                    <input *ngSwitchCase=\\\"'vin'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\n                    <input *ngSwitchCase=\\\"'year'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\n                    <input *ngSwitchCase=\\\"'brand'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\n                    <input *ngSwitchCase=\\\"'color'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\n                </th>\\n            </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n            <tr [pSelectableRow]=\\\"rowData\\\">\\n                <td *ngFor=\\\"let col of columns\\\">\\n                    {{rowData[col.field]}}\\n                </td>\\n            </tr>\\n        </ng-template>\\n    </p-table>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;FilterUtils&#125; from 'primeng/utils';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>FilterUtils consists of static functions that implement various constraints.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nconst value = 'PrimeNG';\\n\\nFilterUtils.equals(value, 'NG');                            //false\\nFilterUtils.equals(value, 8);                               //false\\nFilterUtils.equals(value, new Date());                      //false\\nFilterUtils.contains(value, 'NG');                          //true\\nFilterUtils.startsWith(value, 'NG');                        //false\\nFilterUtils.endsWith(value, 'NG');                          //true\\nFilterUtils.lt(10, 20);                                     //true\\nFilterUtils.gte(50, 20);                                    //true\\nFilterUtils.in(value, ['PrimeFaces', 'PrimeNG']);           //true\\n</code>\\n</pre>\\n\\n            <h3>Custom Constraint</h3>\\n            <p>FilterUtils can be extended by adding new constraints.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nFilterUtils['isPrimeNumber'] = (value): boolean => &#123;\\n    for(var i = 2; i &lt; num; i++)\\n        if (num % i === 0) return false;\\n    return num > 1;\\n&#125;\\n\\nFilterUtils['isPrimeNumber'](3);                      //true\\nFilterUtils['isPrimeNumber'](5);                      //true\\nFilterUtils['isPrimeNumber'](568985673);              //false\\n</code>\\n</pre>\\n\\n            <h3>FilterUtils API</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>startsWith</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value starts with the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>contains</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value contains the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>endsWith</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value ends with the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>equals</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value equals the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>notEquals</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value does not equal the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>in</td>\\n                            <td>value: Value to filter<br />\\n                                filter[]: An array of filter values<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value contains the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>lt</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value is less than the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>lte</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value is less than or equals to the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>gt</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value is greater than the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>gte</td>\\n                            <td>value: Value to filter<br />\\n                                filter: Filter value<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the value is greater than or equals to the filter value</td>\\n                        </tr>\\n                        <tr>\\n                            <td>filter</td>\\n                            <td>value[]: An array of values to filter<br />\\n                                fields[]: An array of properties in the value object<br />\\n                                filterValue: Filter value<br />\\n                                filterMatchMode: Constraint<br />\\n                                filterLocale: Locale to use in filtering</td>\\n                            <td>Whether the property values of the given value collection matches the filter.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/menu\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-filterutils-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3&gt;Basic&lt;/h3&gt;\\n&lt;p-autoComplete [(ngModel)]=\\\"brand\\\" [suggestions]=\\\"filteredBrands\\\" (completeMethod)=\\\"filterWithContains($event)\\\" [size]=\\\"30\\\"\\n[minLength]=\\\"1\\\" placeholder=\\\"Hint: type 'a' or 'o'\\\" [dropdown]=\\\"true\\\" field=\\\"label\\\" [style]=\\\"&#123;'width':'250px'&#125;\\\"&gt;\\n    &lt;ng-template let-brand pTemplate=\\\"item\\\"&gt;\\n        &lt;div class=\\\"ui-helper-clearfix\\\"&gt;\\n            &lt;img src=\\\"assets/showcase/images/demo/car/&#123;&#123;brand.value&#125;&#125;.png\\\" style=\\\"width:32px;display:inline-block;margin:5px 0 2px 5px\\\"/&gt;\\n            &lt;div style=\\\"font-size:18px;float:right;margin:10px 10px 0 0\\\"&gt;&#123;&#123;brand.value&#125;&#125;&lt;/div&gt;\\n        &lt;/div&gt;\\n    &lt;/ng-template&gt;\\n&lt;/p-autoComplete&gt;\\n\\n&lt;h3&gt;Custom&lt;/h3&gt;\\n&lt;p-table #dt [columns]=\\\"cols\\\" [value]=\\\"cars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"&gt;\\n    &lt;ng-template pTemplate=\\\"header\\\" let-columns&gt;\\n        &lt;tr&gt;\\n            &lt;th *ngFor=\\\"let col of columns\\\"&gt;\\n                &#123;&#123;col.header&#125;&#125;\\n            &lt;/th&gt;\\n        &lt;/tr&gt;\\n        &lt;tr&gt;\\n            &lt;th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\"&gt;\\n                &lt;input *ngSwitchCase=\\\"'vin'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\n                &lt;input *ngSwitchCase=\\\"'year'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\n                &lt;input *ngSwitchCase=\\\"'brand'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\n                &lt;input *ngSwitchCase=\\\"'color'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\n            &lt;/th&gt;\\n        &lt;/tr&gt;\\n    &lt;/ng-template&gt;\\n    &lt;ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\"&gt;\\n        &lt;tr [pSelectableRow]=\\\"rowData\\\"&gt;\\n            &lt;td *ngFor=\\\"let col of columns\\\"&gt;\\n                &#123;&#123;rowData[col.field]&#125;&#125;\\n            &lt;/td&gt;\\n        &lt;/tr&gt;\\n    &lt;/ng-template&gt;\\n&lt;/p-table&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class FilterUtilsDemo &#123;\\n\\n    brands: any[] = [\\n        &#123;label: 'Audi', value: 'Audi'&#125;,\\n        &#123;label: 'BMW', value: 'BMW'&#125;,\\n        &#123;label: 'Fiat', value: 'Fiat'&#125;,\\n        &#123;label: 'Ford', value: 'Ford'&#125;,\\n        &#123;label: 'Honda', value: 'Honda'&#125;,\\n        &#123;label: 'Jaguar', value: 'Jaguar'&#125;,\\n        &#123;label: 'Mercedes', value: 'Mercedes'&#125;,\\n        &#123;label: 'Renault', value: 'Renault'&#125;,\\n        &#123;label: 'VW', value: 'VW'&#125;,\\n        &#123;label: 'Volvo', value: 'Volvo'&#125;\\n    ];\\n\\n    filteredBrands: any[];\\n\\n    brand:any;\\n\\n    cars: Car[];\\n\\n    cols: any[];\\n\\n    constructor(private carService:CarService) &#123;\\n        FilterUtils['custom-equals'] = (value, filter): boolean => &#123;\\n            if (filter === undefined || filter === null || filter.trim() === '') &#123;\\n                return true;\\n            &#125;\\n\\n            if (value === undefined || value === null) &#123;\\n                return false;\\n            &#125;\\n\\n            return value.toString() === filter.toString();\\n        &#125;\\n\\n        this.cols = [\\n            &#123; field: 'year', header: 'Year', filterMatchMode:'custom-equals' &#125;,\\n            &#123; field: 'brand', header: 'Brand', filterMatchMode:'custom-equals' &#125;,\\n            &#123; field: 'color', header: 'Color', filterMatchMode:'custom-equals' &#125;,\\n            &#123; field: 'vin', header: 'Vin', filterMatchMode:'custom-equals' &#125;\\n        ];\\n\\n        this.carService.getCarsMedium().then(cars => this.cars = cars);\\n    &#125;\\n\\n    filterWithContains(event) &#123;\\n        this.filteredBrands = FilterUtils.filter(this.brands, ['value'], event.query, \\\"contains\\\");\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-filterutils-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport { FilterUtilsDemo } from './filterutilsdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: FilterUtilsDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class FilterUtilsDemoRoutingModule {}\n","import { NgModule }     from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';;\nimport { TabViewModule } from 'primeng/tabview';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { FilterUtilsDemo } from './filterutilsdemo';\nimport { FilterUtilsDemoRoutingModule } from './filterutils-routing.module';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterUtilsDemoRoutingModule,\n        ButtonModule,\n        TabViewModule,\n\t\tCodeHighlighterModule,\n\t\tAutoCompleteModule,\n\t\tFormsModule,\n\t\tTableModule,\n\t\tInputTextModule\n\t],\n\tdeclarations: [\n\t\tFilterUtilsDemo\n\t]\n})\nexport class FilterUtilsDemoModule {}\n","import { Component } from '@angular/core';\nimport { FilterUtils } from '../../../components/utils/filterutils';\nimport { CarService } from '../../service/carservice';\nimport { Car } from '../../domain/car';\n\n@Component({\n    templateUrl: './filterutilsdemo.html'\n})\nexport class FilterUtilsDemo {\n\n    brands: any[] = [\n        {label: 'Audi', value: 'Audi'},\n        {label: 'BMW', value: 'BMW'},\n        {label: 'Fiat', value: 'Fiat'},\n        {label: 'Ford', value: 'Ford'},\n        {label: 'Honda', value: 'Honda'},\n        {label: 'Jaguar', value: 'Jaguar'},\n        {label: 'Mercedes', value: 'Mercedes'},\n        {label: 'Renault', value: 'Renault'},\n        {label: 'VW', value: 'VW'},\n        {label: 'Volvo', value: 'Volvo'}\n    ];\n\n    filteredBrands: any[];\n\n    brand:any;\n\n    cars: Car[];\n\n    cols: any[];\n\n    constructor(private carService:CarService) {\n        FilterUtils['custom-equals'] = (value, filter): boolean => {\n            if (filter === undefined || filter === null || filter.trim() === '') {\n                return true;\n            }\n    \n            if (value === undefined || value === null) {\n                return false;\n            }\n            \n            return value.toString() === filter.toString();\n        }\n\n        this.cols = [\n            { field: 'year', header: 'Year', filterMatchMode:'custom-equals' },\n            { field: 'brand', header: 'Brand', filterMatchMode:'custom-equals' },\n            { field: 'color', header: 'Color', filterMatchMode:'custom-equals' },\n            { field: 'vin', header: 'Vin', filterMatchMode:'custom-equals' }\n        ];\n\n        this.carService.getCarsMedium().then(cars => this.cars = cars);\n    }\n\n    filterWithContains(event) {\n        this.filteredBrands = FilterUtils.filter(this.brands, ['value'], event.query, \"contains\");\n    }\n}"],"sourceRoot":"webpack:///"}