{"version":3,"sources":["./src/app/showcase/components/validation/validationdemo.html","./src/app/components/panel/panel.ts","./src/app/components/panel/public_api.ts","./src/app/showcase/components/validation/validationdemo-routing.module.ts","./src/app/showcase/components/validation/validationdemo.module.ts","./src/app/showcase/components/validation/validationdemo.ts"],"names":[],"mappings":"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","file":"components-validation-validationdemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Validation</span>\\n        <span>PrimeNG input components indicate validation errors automatically when their value is marked as invalid.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-toast></p-toast>\\n\\n    <form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onSubmit(userform.value)\\\">\\n        <p-panel header=\\\"Validate\\\">\\n            <div class=\\\"ui-fluid forms-grid\\\" style=\\\"margin: 1em 0\\\">\\n                <div>\\n                    <div>First Name *</div>\\n                    <input pInputText type=\\\"text\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Required\\\"/>\\n                    <p-message severity=\\\"error\\\" text=\\\"Firstname is required\\\" *ngIf=\\\"!userform.controls['firstname'].valid&&userform.controls['firstname'].dirty\\\"></p-message>\\n                </div>\\n                <div>\\n                    <div>Last Name *</div>\\n                    <input pInputText type=\\\"text\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Required\\\"/>\\n                    <p-message severity=\\\"error\\\" text=\\\"Lastname is required\\\" *ngIf=\\\"!userform.controls['lastname'].valid&&userform.controls['lastname'].dirty\\\"></p-message>\\n                </div>\\n                <div>\\n                    <div>Password *</div>\\n                    <input pInputText type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Required - Min(6)\\\"/>\\n                    <p-message severity=\\\"error\\\" [text]=\\\"userform.controls['password'].errors['required'] ? 'Password is required' : userform.controls['password'].errors['minlength'] ? 'Must be longer than 6 characters' : ''\\\" \\n                    *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\"></p-message>\\n                </div>\\n                <div>\\n                    <div>Brand *</div>\\n                    <p-autoComplete formControlName=\\\"brand\\\" [suggestions]=\\\"filteredBrands\\\" (completeMethod)=\\\"filterBrands($event)\\\" [size]=\\\"30\\\" [minLength]=\\\"1\\\" placeholder=\\\"Brand\\\">\\n                    </p-autoComplete>\\n                </div>\\n                <div>\\n                    <div>City *</div>\\n                    <p-dropdown [options]=\\\"cities\\\" formControlName=\\\"city\\\" placeholder=\\\"Select a City\\\" optionLabel=\\\"name\\\" [showClear]=\\\"true\\\"></p-dropdown>\\n                </div>\\n                <div>\\n                    <div>Description</div>\\n                    <textarea pInputTextarea type=\\\"text\\\" formControlName=\\\"description\\\"></textarea>\\n                </div>\\n                <div>\\n                    <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!userform.valid\\\"></button>\\n                </div>\\n\\n                <div style=\\\"text-align:center;margin-top:20px\\\" *ngIf=\\\"submitted\\\">\\n                    Form Submitted\\n                    <br>\\n                    {{diagnostic}}\\n                </div>\\n            </div>\\n        </p-panel>\\n    </form>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/validation\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <span>View on GitHub</span>\\n    </a>\\n    <a href=\\\"https://stackblitz.com/edit/primeng-validation-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n        <span>Edit in StackBlitz</span>\\n    </a>\\n\\n    <p-tabView>\\n        <p-tabPanel header=\\\"validationdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;Component,OnInit&#125; from '@angular/core';\\nimport &#123;Validators,FormControl,FormGroup,FormBuilder&#125; from '@angular/forms';\\nimport &#123;SelectItem&#125; from 'primeng/api';\\nimport &#123;MessageService&#125; from 'primeng/api';\\n\\n@Component(&#123;\\n    templateUrl: 'showcase/demo/validation/validationdemo.html',\\n    providers: [MessageService]\\n&#125;)\\nexport class ValidationDemo implements OnInit &#123;\\n\\n    userform: FormGroup;\\n\\n    submitted: boolean;\\n\\n    genders: SelectItem[];\\n\\n    description: string;\\n\\n    constructor(private fb: FormBuilder, private messageService: MessageService) &#123;&#125;\\n\\n    ngOnInit() &#123;\\n        this.userform = this.fb.group(&#123;\\n            'firstname': new FormControl('', Validators.required),\\n            'lastname': new FormControl('', Validators.required),\\n            'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\\n            'description': new FormControl('')\\n        &#125;);\\n    &#125;\\n\\n    onSubmit(value: string) &#123;\\n        this.submitted = true;\\n        this.messageService.add(&#123;severity:'info', summary:'Success', detail:'Form Submitted'&#125;);\\n    &#125;\\n\\n    get diagnostic() &#123; return JSON.stringify(this.userform.value); &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"validationdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\n\\n&lt;form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onSubmit(userform.value)\\\"&gt;\\n    &lt;p-panel header=\\\"Validate\\\"&gt;\\n        &lt;div class=\\\"p-fluid forms-grid\\\" style=\\\"margin: 1em 0\\\"&gt;\\n            &lt;div&gt;\\n                &lt;div&gt;First Name *&lt;/div&gt;\\n                &lt;input pInputText type=\\\"text\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Required\\\"/&gt;\\n                &lt;p-message severity=\\\"error\\\" text=\\\"Firstname is required\\\" *ngIf=\\\"!userform.controls['firstname'].valid&&userform.controls['firstname'].dirty\\\"&gt;&lt;/p-message&gt;\\n            &lt;/div&gt;\\n            &lt;div&gt;\\n                &lt;div&gt;Last Name *&lt;/div&gt;\\n                &lt;input pInputText type=\\\"text\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Required\\\"/&gt;\\n                &lt;p-message severity=\\\"error\\\" text=\\\"Lastname is required\\\" *ngIf=\\\"!userform.controls['lastname'].valid&&userform.controls['lastname'].dirty\\\"&gt;&lt;/p-message&gt;\\n            &lt;/div&gt;\\n            &lt;div&gt;\\n                &lt;div&gt;Password *&lt;/div&gt;\\n                &lt;input pInputText type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Required - Min(6)\\\"/&gt;\\n                &lt;p-message severity=\\\"error\\\" [text]=\\\"userform.controls['password'].errors['required'] ? 'Password is required' : userform.controls['password'].errors['minlength'] ? 'Must be longer than 6 characters' : ''\\\" \\n                *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\"&gt;&lt;/p-message&gt;\\n            &lt;/div&gt;\\n            &lt;div&gt;\\n                &lt;div&gt;Description&lt;/div&gt;\\n                &lt;textarea pInputTextarea type=\\\"text\\\" formControlName=\\\"description\\\"&gt;&lt;/textarea&gt;\\n            &lt;/div&gt;\\n            &lt;div&gt;\\n                &lt;button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!userform.valid\\\"&gt;&lt;/button&gt;\\n            &lt;/div&gt;\\n\\n            &lt;div style=\\\"text-align:center;margin-top:20px\\\" *ngIf=\\\"submitted\\\"&gt;\\n                Form Submitted\\n                &lt;br&gt;\\n                &#123;&#123;diagnostic&#125;&#125;\\n            &lt;/div&gt;\\n        &lt;/div&gt;\\n    &lt;/p-panel&gt;\\n&lt;/form&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-validation-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                opacity: 0\n            })),\n            state('void', style({\n                height: '{{height}}',\n                opacity: '{{opacity}}'\n            }), {params: {height: '0', opacity: '0'}}),\n            state('visible', style({\n                height: '*',\n                opacity: 1\n            })),\n            transition('visible <=> hidden', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Panel implements BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n    \n    animating: boolean;\n    \n    id: string = `ui-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) {}\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n","export * from './panel';","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ValidationDemo} from './validationdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: ValidationDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ValidationDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {ValidationDemo} from './validationdemo';\nimport {ValidationDemoRoutingModule} from './validationdemo-routing.module';\nimport {ToastModule} from 'primeng/toast';\nimport {MessageModule} from 'primeng/message';\nimport {PanelModule} from 'primeng/panel';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport {ButtonModule} from 'primeng/button';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\t\tValidationDemoRoutingModule,\n        ToastModule,\n        MessageModule,\n        PanelModule,\n        DropdownModule,\n        InputTextModule,\n        InputTextareaModule,\n        ButtonModule,\n        AutoCompleteModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tValidationDemo\n\t]\n})\nexport class ValidationDemoModule {}\n","import {Component,OnInit} from '@angular/core';\nimport {Validators,FormControl,FormGroup,FormBuilder} from '@angular/forms';\nimport {SelectItem} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n    templateUrl: './validationdemo.html',\n    providers: [MessageService],\n    styles: [`\n        :host ::ng-deep .forms-grid > div {\n            display: flex;\n            align-items: center;\n            padding: 1em;\n        }\n\n        :host ::ng-deep .forms-grid > div > div:first-child {\n           min-width: 10em;\n        }\n        \n        input, textarea {\n            flex: 1 1 auto;\n        }\n\n        :host ::ng-deep .ui-message {\n            margin-left: 1em;\n        }\n\n        @media screen and (max-width: 64em) {\n            :host ::ng-deep .ui-message-text {\n                display: none;\n            }\n        }\n    `]\n})\nexport class ValidationDemo implements OnInit {\n    \n    userform: FormGroup;\n    \n    submitted: boolean;\n    \n    genders: SelectItem[];\n    \n    description: string;\n\n    brands: string[] = ['Audi','BMW','Fiat','Ford','Honda','Jaguar','Mercedes','Renault','Volvo','VW'];\n    \n    filteredBrands: any[];\n\n    cities = [\n        {name: 'New York', code: 'NY'},\n        {name: 'Rome', code: 'RM'},\n        {name: 'London', code: 'LDN'},\n        {name: 'Istanbul', code: 'IST'},\n        {name: 'Paris', code: 'PRS'}\n    ];\n    \n    constructor(private fb: FormBuilder, private messageService: MessageService) {}\n    \n    ngOnInit() {\n        this.userform = this.fb.group({\n            'firstname': new FormControl('', Validators.required),\n            'lastname': new FormControl('', Validators.required),\n            'password': new FormControl('', [Validators.required, Validators.minLength(6)]),\n            'brand' : new FormControl(''),\n            'city' : new FormControl(''),\n            'description': new FormControl('')\n        });\n    }\n\n    filterBrands(event) {\n        this.filteredBrands = [];\n        for(let i = 0; i < this.brands.length; i++) {\n            let brand = this.brands[i];\n            if (brand.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n                this.filteredBrands.push(brand);\n            }\n        }\n    }\n    \n    onSubmit(value: string) {\n        this.submitted = true;\n        this.messageService.add({severity:'info', summary:'Success', detail:'Form Submitted', sticky: true});\n    }\n\n    get diagnostic() { return JSON.stringify(this.userform.value); }\n    \n}\n"],"sourceRoot":"webpack:///"}