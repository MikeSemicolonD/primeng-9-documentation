{"version":3,"sources":["webpack:///src/app/showcase/components/slidemenu/slidemenudemo.html","webpack:///src/app/showcase/components/slidemenu/slidemenudemo-routing.module.ts","webpack:///src/app/showcase/components/slidemenu/slidemenudemo.module.ts","webpack:///src/app/showcase/components/slidemenu/slidemenudemo.ts"],"names":["SlideMenuDemoRoutingModule","imports","forChild","path","component","exports","SlideMenuDemoModule","declarations","SlideMenuDemo","ngOnInit","items","label","icon","separator","template"],"mappings":"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","file":"components-slidemenu-slidemenudemo-module-es5.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Slide Menu</span>\\n        <span>SlideMenu displays submenus with slide animation.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Default</h3>\\n    <p-slideMenu [model]=\\\"items\\\" [viewportHeight]=\\\"250\\\"></p-slideMenu>\\n\\n    <h3>Popup</h3>\\n    <button #btn type=\\\"button\\\" pButton icon=\\\"pi pi-bars\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"></button>\\n    <p-slideMenu #menu [model]=\\\"items\\\" [popup]=\\\"true\\\" [viewportHeight]=\\\"250\\\"></p-slideMenu>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SlideMenuModule&#125; from 'primeng/slidemenu';\\nimport &#123;MenuItem&#125; from 'primeng/api';\\n</code>\\n</pre>\\n\\n            <h3>MenuModel API</h3>\\n            <p>SlideMenu uses the common menumodel api to define its items, visit <a [routerLink]=\\\"['/menumodel']\\\">MenuModel API</a> for details.</p>\\n\\n            <h3>Getting Started</h3>\\n            <p>SlideMenu requires nested menuitems as its <i>model</i>.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-slideMenu [model]=\\\"items\\\"&gt;&lt;/p-slideMenu&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class SlideMenuDemo &#123;\\n\\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [\\n            &#123;\\n                label: 'File',\\n                items: [&#123;\\n                        label: 'New', \\n                        icon: 'pi pi-fw pi-plus',\\n                        items: [\\n                            &#123;label: 'Project'&#125;,\\n                            &#123;label: 'Other'&#125;,\\n                        ]\\n                    &#125;,\\n                    &#123;label: 'Open'&#125;,\\n                    &#123;label: 'Quit'&#125;\\n                ]\\n            &#125;,\\n            &#123;\\n                label: 'Edit',\\n                icon: 'pi pi-fw pi-pencil',\\n                items: [\\n                    &#123;label: 'Delete', icon: 'pi pi-fw pi-trash'&#125;,\\n                    &#123;label: 'Refresh', icon: 'pi pi-fw pi-refresh'&#125;\\n                ]\\n            &#125;\\n        ];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Popup Mode</h3>\\n            <p>SlideMenu is inline by default, popup mode is also supported by enabling popup property and calling toggle method by passing the event \\n                    from the anchor element.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-slideMenu #menu [model]=\\\"items\\\" [popup]=\\\"true\\\"&gt;&lt;/p-slideMenu&gt;\\n&lt;button #btn type=\\\"button\\\" pButton icon=\\\"pi pi-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n            <h3>Effects</h3>\\n            <p>The easing function to use is \\\"ease-out\\\" by default and this can be customized using easing property. \\n                See <a href=\\\"http://www.w3schools.com/cssref/css3_pr_transition-timing-function.asp\\\">here</a> for possible alternative values.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-slideMenu #menu [model]=\\\"items\\\" effectDuration=\\\"1000\\\" easing=\\\"ease-in\\\"&gt;&lt;/p-slideMenu&gt;\\n</code>\\n</pre>\\n\\n            <h3>Animation Configuration</h3>\\n            <p>Transition of the open and hide animations can be customized using the showTransitionOptions and hideTransitionOptions properties, \\n                example below disables the animations altogether.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-slideMenu [showTransitionOptions]=\\\"'0ms'\\\" [hideTransitionOptions]=\\\"'0ms'\\\" #menu [model]=\\\"items\\\" [popup]=\\\"true\\\"&gt;&lt;/p-slideMenu&gt;\\n&lt;button #btn type=\\\"button\\\" pButton icon=\\\"pi pi-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>model</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>An array of menuitems.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>popup</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Defines if menu would displayed as a popup.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>easing</td>\\n                            <td>string</td>\\n                            <td>ease-out</td>\\n                            <td>Easing animation to use for sliding.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>effectDuration</td>\\n                            <td>any</td>\\n                            <td>250</td>\\n                            <td>Duration of the sliding animation in milliseconds.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>backLabel</td>\\n                            <td>string</td>\\n                            <td>Back</td>\\n                            <td>Label of element to navigate back.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>menuWidth</td>\\n                            <td>number</td>\\n                            <td>180</td>\\n                            <td>Width of the submenus.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>viewportHeight</td>\\n                            <td>number</td>\\n                            <td>175</td>\\n                            <td>Height of the scrollable area, a scrollbar appears if a menu height is longer than this value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the overlay, valid values are \\\"body\\\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\\\"mydiv\\\" for a div element having #mydiv as variable name).</td>\\n                        </tr>\\n                        <tr>\\n                            <td>baseZIndex</td>\\n                            <td>number</td>\\n                            <td>0</td>\\n                            <td>Base zIndex value to use in layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>autoZIndex</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether to automatically manage layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>225ms ease-out</td>\\n                            <td>Transition options of the show animation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hideTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>195ms ease-in</td>\\n                            <td>Transition options of the hide animation.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Methods</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>toggle</td>\\n                            <td>event: browser event</td>\\n                            <td>Toggles the visibility of the popup menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>show</td>\\n                            <td>event: browser event</td>\\n                            <td>Displays the popup menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hide</td>\\n                            <td>-</td>\\n                            <td>Hides the popup menu.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Element</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-slidemenu</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-slidemenu-wrapper</td>\\n                            <td>Wrapper of content.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-slidemenu-content</td>\\n                            <td>Content element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-slidemenu-backward</td>\\n                            <td>Element to navigate to previous menu on click.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menu-list</td>\\n                            <td>List element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem</td>\\n                            <td>Menuitem element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem-text</td>\\n                            <td>Label of a menuitem.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem-icon</td>\\n                            <td>Icon of a menuitem.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-submenu-icon</td>\\n                            <td>Arrow icon of a submenu.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/slidemenu\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-slidemenu-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Default&lt;/h3&gt;\\n&lt;p-slideMenu [model]=\\\"items\\\" [viewportHeight]=\\\"250\\\"&gt;&lt;/p-slideMenu&gt;\\n\\n&lt;h3&gt;Popup&lt;/h3&gt;\\n&lt;button #btn type=\\\"button\\\" pButton icon=\\\"pi pi-bars\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n&lt;p-slideMenu #menu [model]=\\\"items\\\" [popup]=\\\"true\\\" [viewportHeight]=\\\"250\\\"&gt;&lt;/p-slideMenu&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class SlideMenuDemo &#123;\\n\\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [\\n            &#123;\\n                label: 'File',\\n                icon: 'pi pi-fw pi-file',\\n                items: [&#123;\\n                        label: 'New', \\n                        icon: 'pi pi-fw pi-plus',\\n                        items: [\\n                            &#123;label: 'Project'&#125;,\\n                            &#123;label: 'Other'&#125;,\\n                        ]\\n                    &#125;,\\n                    &#123;label: 'Open'&#125;,\\n                    &#123;separator:true&#125;,\\n                    &#123;label: 'Quit'&#125;\\n                ]\\n            &#125;,\\n            &#123;\\n                label: 'Edit',\\n                icon: 'pi pi-fw pi-pencil',\\n                items: [\\n                    &#123;label: 'Delete', icon: 'pi pi-fw pi-trash'&#125;,\\n                    &#123;label: 'Refresh', icon: 'pi pi-fw pi-refresh'&#125;\\n                ]\\n            &#125;,\\n            &#123;\\n                label: 'Help',\\n                icon: 'pi pi-fw pi-question',\\n                items: [\\n                    &#123;\\n                        label: 'Contents'\\n                    &#125;,\\n                    &#123;\\n                        label: 'Search', \\n                        icon: 'pi pi-fw pi-search', \\n                        items: [\\n                            &#123;\\n                                label: 'Text', \\n                                items: [\\n                                    &#123;\\n                                        label: 'Workspace'\\n                                    &#125;\\n                                ]\\n                            &#125;,\\n                            &#123;\\n                                label: 'File'\\n                            &#125;\\n                    ]&#125;\\n                ]\\n            &#125;,\\n            &#123;\\n                label: 'Actions',\\n                icon: 'pi pi-fw pi-cog',\\n                items: [\\n                    &#123;\\n                        label: 'Edit',\\n                        icon: 'pi pi-fw pi-pencil',\\n                        items: [\\n                            &#123;label: 'Save', icon: 'pi pi-fw pi-save'&#125;,\\n                            &#123;label: 'Update', icon: 'pi pi-fw pi-save'&#125;,\\n                        ]\\n                    &#125;,\\n                    &#123;\\n                        label: 'Other',\\n                        icon: 'pi pi-fw pi-tags',\\n                        items: [\\n                            &#123;label: 'Delete', icon: 'pi pi-fw pi-minus'&#125;\\n                        ]\\n                    &#125;\\n                ]\\n            &#125;,\\n            &#123;separator:true&#125;,\\n            &#123;\\n                label: 'Quit', icon: 'pi pi-fw pi-times'\\n            &#125;\\n        ];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-slidemenu-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {SlideMenuDemo} from './slidemenudemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: SlideMenuDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class SlideMenuDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SlideMenuDemo} from './slidemenudemo';\nimport {SlideMenuDemoRoutingModule} from './slidemenudemo-routing.module';\nimport {SlideMenuModule} from 'primeng/slidemenu';\nimport {ButtonModule} from 'primeng/button';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSlideMenuDemoRoutingModule,\n        SlideMenuModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tSlideMenuDemo\n\t]\n})\nexport class SlideMenuDemoModule {}\n","import {Component} from '@angular/core';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n    templateUrl: './slidemenudemo.html',\n    styles: [`\n        :host ::ng-deep .ui-slidemenu {\n            width: 13.5em\n        }\n    `]\n})\nexport class SlideMenuDemo {\n\n    items: MenuItem[];\n\n    ngOnInit() {\n        this.items = [\n            {\n                label: 'File',\n                icon: 'pi pi-fw pi-file',\n                items: [{\n                        label: 'New', \n                        icon: 'pi pi-fw pi-plus',\n                        items: [\n                            {label: 'Project'},\n                            {label: 'Other'},\n                        ]\n                    },\n                    {label: 'Open'},\n                    {separator:true},\n                    {label: 'Quit'}\n                ]\n            },\n            {\n                label: 'Edit',\n                icon: 'pi pi-fw pi-pencil',\n                items: [\n                    {label: 'Delete', icon: 'pi pi-fw pi-trash'},\n                    {label: 'Refresh', icon: 'pi pi-fw pi-refresh'}\n                ]\n            },\n            {\n                label: 'Help',\n                icon: 'pi pi-fw pi-question',\n                items: [\n                    {\n                        label: 'Contents'\n                    },\n                    {\n                        label: 'Search', \n                        icon: 'pi pi-fw pi-search', \n                        items: [\n                            {\n                                label: 'Text', \n                                items: [\n                                    {\n                                        label: 'Workspace'\n                                    }\n                                ]\n                            },\n                            {\n                                label: 'File'\n                            }\n                    ]}\n                ]\n            },\n            {\n                label: 'Actions',\n                icon: 'pi pi-fw pi-cog',\n                items: [\n                    {\n                        label: 'Edit',\n                        icon: 'pi pi-fw pi-pencil',\n                        items: [\n                            {label: 'Save', icon: 'pi pi-fw pi-save'},\n                            {label: 'Update', icon: 'pi pi-fw pi-save'},\n                        ]\n                    },\n                    {\n                        label: 'Other',\n                        icon: 'pi pi-fw pi-tags',\n                        items: [\n                            {label: 'Delete', icon: 'pi pi-fw pi-minus'}\n                        ]\n                    }\n                ]\n            },\n            {separator:true},\n            {\n                label: 'Quit', icon: 'pi pi-fw pi-times'\n            }\n        ];\n    }\n}"]}