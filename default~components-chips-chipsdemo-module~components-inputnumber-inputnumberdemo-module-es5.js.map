{"version":3,"sources":["webpack:///src/app/components/chips/chips.ts","webpack:///src/app/components/chips/public_api.ts"],"names":["CHIPS_VALUE_ACCESSOR","provide","useExisting","Chips","multi","el","allowDuplicate","onAdd","onRemove","onFocus","onBlur","onChipClick","onModelChange","onModelTouched","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","template","onClick","inputViewChild","nativeElement","focus","onInput","updateFilledState","onPaste","event","separator","pastedData","clipboardData","window","getData","split","val","addItem","value","length","filled","onItemClick","emit","originalEvent","writeValue","updateMaxedOut","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","resolveFieldData","data","field","indexOf","fields","i","len","onInputFocus","onInputBlur","addOnBlur","removeItem","index","removedItem","filter","preventDefault","trim","onKeydown","which","pop","addOnTab","max","selector","host","providers","changeDetection","Default","ChipsModule","imports","exports","declarations"],"mappings":"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","file":"default~components-chips-chipsdemo-module~components-inputnumber-inputnumberdemo-module-es5.js","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,EventEmitter,AfterContentInit,ContentChildren,QueryList,TemplateRef,forwardRef,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,PrimeTemplate} from 'primeng/api';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const CHIPS_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Chips),\n  multi: true\n};\n\n@Component({\n    selector: 'p-chips',\n    template: `\n        <div [ngClass]=\"'ui-chips ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick()\">\n            <ul [ngClass]=\"{'ui-inputtext ui-state-default ui-corner-all':true,'ui-state-focus':focus,'ui-state-disabled':disabled}\">\n                <li #token *ngFor=\"let item of value; let i = index;\" class=\"ui-chips-token ui-state-highlight ui-corner-all\" (click)=\"onItemClick($event, item)\">\n                    <span *ngIf=\"!disabled\" class=\"ui-chips-token-icon pi pi-fw pi-times\" (click)=\"removeItem($event,i)\"></span>\n                    <span *ngIf=\"!itemTemplate\" class=\"ui-chips-token-label\">{{field ? resolveFieldData(item,field) : item}}</span>\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n                </li>\n                <li class=\"ui-chips-input-token\">\n                    <input #inputtext type=\"text\" [attr.id]=\"inputId\" [attr.placeholder]=\"(value && value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\"\n                    (input)=\"onInput()\" (paste)=\"onPaste($event)\" [attr.aria-labelledby]=\"ariaLabelledBy\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\">\n                </li>\n            </ul>\n        </div>\n    `,\n    host: {\n        '[class.ui-inputwrapper-filled]': 'filled',\n        '[class.ui-inputwrapper-focus]': 'focus'\n    },\n    providers: [CHIPS_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Chips implements AfterContentInit,ControlValueAccessor {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() disabled: boolean;\n\n    @Input() field: string;\n\n    @Input() placeholder: string;\n\n    @Input() max: number;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() allowDuplicate: boolean = true;\n\n    @Input() inputStyle: any;\n\n    @Input() inputStyleClass: any;\n\n    @Input() addOnTab: boolean;\n\n    @Input() addOnBlur: boolean;\n\n    @Input() separator: string;\n\n    @Output() onAdd: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Output() onChipClick: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('inputtext') inputViewChild: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    public itemTemplate: TemplateRef<any>;\n\n    value: any;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    valueChanged: boolean;\n\n    focus: boolean;\n\n    filled: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n\n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    onClick() {\n        this.inputViewChild.nativeElement.focus();\n    }\n\n    onInput() {\n        this.updateFilledState();\n    }\n\n    onPaste(event) {\n        if (this.separator) {\n            let pastedData = (event.clipboardData || window['clipboardData']).getData('Text');\n            pastedData.split(this.separator).forEach(val => {\n                this.addItem(event, val, true);\n            });\n            this.inputViewChild.nativeElement.value = '';\n        }\n        this.updateFilledState();\n    }\n\n    updateFilledState() {\n        if (!this.value || this.value.length === 0) {\n            this.filled = (this.inputViewChild.nativeElement && this.inputViewChild.nativeElement.value != '');\n        }\n        else {\n            this.filled = true;\n        }\n    }\n\n    onItemClick(event: Event, item: any) {\n        this.onChipClick.emit({\n            originalEvent: event,\n            value: item\n        });\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n        this.updateMaxedOut();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n\n    resolveFieldData(data: any, field: string): any {\n        if (data && field) {\n            if (field.indexOf('.') == -1) {\n                return data[field];\n            }\n            else {\n                let fields: string[] = field.split('.');\n                let value = data;\n                for(var i = 0, len = fields.length; i < len; ++i) {\n                    value = value[fields[i]];\n                }\n                return value;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n\n    onInputFocus(event: FocusEvent) {\n        this.focus = true;\n        this.onFocus.emit(event);\n    }\n\n    onInputBlur(event: FocusEvent) {\n        this.focus = false;\n        if (this.addOnBlur && this.inputViewChild.nativeElement.value) {\n            this.addItem(event, this.inputViewChild.nativeElement.value, false);\n        }\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n\n    removeItem(event: Event, index: number): void {\n        if (this.disabled) {\n            return;\n        }\n\n        let removedItem = this.value[index];\n        this.value = this.value.filter((val, i) => i!=index);\n        this.onModelChange(this.value);\n        this.onRemove.emit({\n            originalEvent: event,\n            value: removedItem\n        });\n        this.updateFilledState();\n        this.updateMaxedOut();\n    }\n\n    addItem(event: Event, item: string, preventDefault: boolean): void {\n        this.value = this.value||[];\n        if (item && item.trim().length) {\n            if (this.allowDuplicate || this.value.indexOf(item) === -1) {\n                this.value = [...this.value, item];\n                this.onModelChange(this.value);\n                this.onAdd.emit({\n                    originalEvent: event,\n                    value: item\n                });\n            }\n        }\n        this.updateFilledState();\n        this.updateMaxedOut();\n        this.inputViewChild.nativeElement.value = '';\n\n        if (preventDefault) {\n            event.preventDefault();\n        }\n    }\n\n    onKeydown(event: KeyboardEvent): void {\n        switch(event.which) {\n            //backspace\n            case 8:\n                if (this.inputViewChild.nativeElement.value.length === 0 && this.value && this.value.length > 0) {\n                    this.value = [...this.value];\n                    let removedItem = this.value.pop();\n                    this.onModelChange(this.value);\n                    this.onRemove.emit({\n                        originalEvent: event,\n                        value: removedItem\n                    });\n                    this.updateFilledState();\n                }\n            break;\n\n            //enter\n            case 13:\n                this.addItem(event, this.inputViewChild.nativeElement.value, true);\n            break;\n\n            case 9:\n                if (this.addOnTab && this.inputViewChild.nativeElement.value !== '') {\n                    this.addItem(event, this.inputViewChild.nativeElement.value, true);\n                }\n            break;\n\n            default:\n                if (this.max && this.value && this.max === this.value.length) {\n                    event.preventDefault();\n                }\n                else if (this.separator) {\n                    if (this.separator === ',' && event.which === 188) {\n                        this.addItem(event, this.inputViewChild.nativeElement.value, true);\n                    }\n                }\n            break;\n        }\n    }\n\n    updateMaxedOut() {\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            if (this.max && this.value && this.max === this.value.length)\n                this.inputViewChild.nativeElement.disabled = true;\n            else\n                this.inputViewChild.nativeElement.disabled = this.disabled || false;\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,InputTextModule,SharedModule],\n    exports: [Chips,InputTextModule,SharedModule],\n    declarations: [Chips]\n})\nexport class ChipsModule { }\n","export * from './chips';"]}