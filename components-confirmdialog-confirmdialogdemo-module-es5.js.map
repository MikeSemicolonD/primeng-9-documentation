{"version":3,"sources":["webpack:///src/app/showcase/components/confirmdialog/confirmdialogdemo.html","webpack:///src/app/components/messages/messages.ts","webpack:///src/app/components/messages/public_api.ts","webpack:///src/app/showcase/components/confirmdialog/confirmdialogdemo-routing.module.ts","webpack:///src/app/showcase/components/confirmdialog/confirmdialogdemo.module.ts","webpack:///src/app/showcase/components/confirmdialog/confirmdialogdemo.ts"],"names":["Messages","messageService","el","closable","enableService","escape","showTransitionOptions","hideTransitionOptions","valueChange","ngAfterContentInit","templates","forEach","item","getType","contentTemplate","template","messageSubscription","messageObserver","subscribe","messages","Array","filteredMessages","filter","m","key","value","clearSubscription","clearObserver","hasMessages","parentEl","nativeElement","parentElement","offsetParent","length","getSeverityClass","severity","msg","severities","find","clear","event","emit","preventDefault","ngOnDestroy","unsubscribe","selector","animations","transform","opacity","changeDetection","Default","MessagesModule","imports","exports","declarations","ConfirmDialogDemoRoutingModule","forChild","path","component","ConfirmDialogDemoModule","ConfirmDialogDemo","confirmationService","msgs","confirm1","confirm","message","header","icon","accept","summary","detail","reject","confirm2","confirmPosition","position","providers"],"mappings":"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","file":"components-confirmdialog-confirmdialogdemo-module-es5.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">ConfirmDialog</span>\\n        <span>ConfirmDialog is backed by a service utilizing Observables to display confirmation windows\\n            easily that can be shared by multiple actions on the same component.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3>Basic</h3>\\n    <p-confirmDialog [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\n    <button type=\\\"button\\\" (click)=\\\"confirm1()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"></button>\\n    <button type=\\\"button\\\" (click)=\\\"confirm2()\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Delete\\\"></button>\\n\\n    <h3>Position</h3>\\n    <div class=\\\"p-grid p-dir-col\\\">\\n        <div class=\\\"p-col\\\">\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('left')\\\" pButton icon=\\\"pi pi-arrow-right\\\" label=\\\"Left\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('right')\\\" pButton icon=\\\"pi pi-arrow-left\\\" label=\\\"Right\\\" class=\\\"ui-button-warning\\\"></button>\\n        </div>\\n        <div class=\\\"p-col\\\">\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('topleft')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopLeft\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('top')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"Top\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('topright')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopRight\\\" class=\\\"ui-button-warning\\\"></button>\\n        </div>\\n        <div class=\\\"p-col\\\">\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomleft')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomLeft\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('bottom')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"Bottom\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomright')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomRight\\\" class=\\\"ui-button-warning\\\"></button>\\n        </div>\\n    </div>\\n    <p-confirmDialog [style]=\\\"{width: '50vw'}\\\" key=\\\"positionDialog\\\" [position]=\\\"position\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\n\\n\\n    <p-messages [value]=\\\"msgs\\\"></p-messages>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;ConfirmDialogModule&#125; from 'primeng/confirmdialog';\\nimport &#123;ConfirmationService&#125; from 'primeng/api';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>ConfirmDialog is defined using p-confirmDialog tag and an instance of ConfirmationService is required to display it by\\n                calling confirm method.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"&gt;&lt;/p-confirmDialog&gt;\\n\\n&lt;button type=\\\"text\\\" (click)=\\\"confirm()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ConfirmDialogDemo &#123;\\n\\n    constructor(private confirmationService: ConfirmationService) &#123;&#125;\\n\\n    confirm() &#123;\\n        this.confirmationService.confirm(&#123;\\n            message: 'Are you sure that you want to perform this action?',\\n            accept: () => &#123;\\n                //Actual logic to perform a confirmation\\n            &#125;\\n        &#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <p>Confirm method takes a confirmation instance used to customize the dialog UI along with accept and reject actions.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>message</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Message of the confirmation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>key</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Optional key to match the key of the confirm dialog, necessary to use when component tree has multiple confirm dialogs.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>icon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon to display next to the message.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>header</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Header text of the dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>accept</td>\\n                            <td>Function</td>\\n                            <td>null</td>\\n                            <td>Callback to execute when action is confirmed.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>reject</td>\\n                            <td>Function</td>\\n                            <td>null</td>\\n                            <td>Callback to execute when action is rejected.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptLabel</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Label of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectLabel</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Label of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptIcon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectIcon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptVisible</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Visibility of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectVisible</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Visibility of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>maskStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the mask.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>blockScroll</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether background scroll should be blocked when dialog is visible.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>defaultFocus</td>\\n                            <td>string</td>\\n                            <td>accept</td>\\n                            <td>Element to receive the focus when the dialog gets visible, valid values are \\\"accept\\\", \\\"reject\\\", \\\"close\\\" and \\\"none\\\".</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>ConfirmationService</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>confirm</td>\\n                            <td>confirm: Confirmation Object</td>\\n                            <td>Displays the dialog using the confirmation object options.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>close</td>\\n                            <td>-</td>\\n                            <td>Hides the dialog without invoking accept or reject callbacks.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Customization</h3>\\n            <p>Properties of the dialog are defined in two ways, message, icon and header properties can either\\n            be defined using confirm method or declaratively on p-confirmDialog ng-template. If these values are unlikely to change then\\n            declarative approach would be useful, still properties defined in a ng-template can be overriden with confirm method call.</p>\\n\\n            <p>In addition, buttons at footer section can be customized by passing your own UI, important note to make confirmation work with\\n            a custom UI is defining a local ng-template variable for the dialog and assign accept()-reject() methods to your own buttons.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog #cd header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"&gt;\\n    &lt;p-footer&gt;\\n        &lt;button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"No\\\" (click)=\\\"cd.reject()\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Yes\\\" (click)=\\\"cd.accept()\\\"&gt;&lt;/button&gt;\\n    &lt;/p-footer&gt;\\n&lt;/p-confirmDialog&gt;\\n</code>\\n</pre>\\n\\n            <h3>Animation Configuration</h3>\\n            <p>Transition of the ConfirmDialog open and hide animations can be customized using the transitionOptions property with a default value as <b>400ms cubic-bezier(0.25, 0.8, 0.25, 1)</b>,\\n                example below disables the animation altogether.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog [transitionOptions]=\\\"'0ms'\\\"&gt;\\n&lt;/p-confirmDialog&gt;\\n</code>\\n</pre>\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                         <tr>\\n                            <td>header</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Title text of the dialog.</td>\\n                         </tr>\\n                         <tr>\\n                           <td>message</td>\\n                           <td>string</td>\\n                           <td>null</td>\\n                           <td>Message of the confirmation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>key</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Optional key to match the key of confirm object, necessary to use when component tree has multiple confirm dialogs.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>icon</td>\\n                          <td>string</td>\\n                          <td>null</td>\\n                          <td>Icon to display next to message.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>acceptLabel</td>\\n                          <td>string</td>\\n                          <td>Yes</td>\\n                          <td>Label of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>acceptIcon</td>\\n                          <td>string</td>\\n                          <td>pi pi-check</td>\\n                          <td>Icon of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>acceptVisible</td>\\n                          <td>boolean</td>\\n                          <td>true</td>\\n                          <td>Visibility of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>rejectLabel</td>\\n                          <td>string</td>\\n                          <td>No</td>\\n                          <td>Label of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>rejectIcon</td>\\n                          <td>string</td>\\n                          <td>pi pi-times</td>\\n                          <td>Icon of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>rejectVisible</td>\\n                          <td>boolean</td>\\n                          <td>true</td>\\n                          <td>Visibility of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closeOnEscape</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Specifies if pressing escape key should hide the dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rtl</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When enabled dialog is displayed in RTL direction.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closable</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Adds a close icon to the header to hide the dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>focusTrap</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>When enabled, can only focus on elements inside the confirm dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the dialog, valid values are \\\"body\\\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\\\"mydiv\\\" for a div element having #mydiv as variable name).</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>ui-confirmdialog-acceptbutton</td>\\n                            <td>Style class of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>ui-confirmdialog-rejectbutton</td>\\n                            <td>Style class of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>baseZIndex</td>\\n                            <td>number</td>\\n                            <td>0</td>\\n                            <td>Base zIndex value to use in layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>autoZIndex</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether to automatically manage layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>transitionOptions</td>\\n                            <td>string</td>\\n                            <td>400ms cubic-bezier(0.25, 0.8, 0.25, 1)</td>\\n                            <td>Transition options of the animation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>defaultFocus</td>\\n                            <td>string</td>\\n                            <td>accept</td>\\n                            <td>Element to receive the focus when the dialog gets visible, valid values are \\\"accept\\\", \\\"reject\\\", \\\"close\\\" and \\\"none\\\".</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-dialog</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-confirmdialog</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-titlebar</td>\\n                            <td>Container of header.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-title</td>\\n                            <td>Header element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-titlebar-icon</td>\\n                            <td>Icon container inside header.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-titlebar-close</td>\\n                            <td>Close icon element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-content</td>\\n                            <td>Content element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>ConfirmationService</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/confirmdialog\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-confirmdialog-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog [style]=\\\"&#123;width: '50vw'&#125;\\\"&gt;&lt;/p-confirmDialog&gt;\\n\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm1()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"&gt;&lt;/button&gt;\\n\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm2()\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Delete\\\"&gt;&lt;/button&gt;\\n\\n&lt;p-messages [value]=\\\"msgs\\\"&gt;&lt;/p-messages&gt;\\n&lt;h3&gt;Basic&lt;/h3&gt;\\n&lt;p-confirmDialog [style]=\\\"&#123;width: '50vw'&#125;\\\" [baseZIndex]=\\\"10000\\\"&gt;&lt;/p-confirmDialog&gt;\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm1()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"&gt;&lt;/button&gt;\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm2()\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Delete\\\"&gt;&lt;/button&gt;\\n\\n&lt;h3&gt;Position&lt;/h3&gt;\\n&lt;div class=\\\"p-grid p-dir-col\\\"&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('left')\\\" pButton icon=\\\"pi pi-arrow-right\\\" label=\\\"Left\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('right')\\\" pButton icon=\\\"pi pi-arrow-left\\\" label=\\\"Right\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('topleft')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopLeft\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('top')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"Top\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('topright')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopRight\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomleft')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomLeft\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('bottom')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"Bottom\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomright')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomRight\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n&lt;p-confirmDialog [style]=\\\"&#123;width: '50vw'&#125;\\\" key=\\\"positionDialog\\\" [position]=\\\"position\\\" [baseZIndex]=\\\"10000\\\"&gt;&lt;/p-confirmDialog&gt;\\n\\n\\n&lt;p-messages [value]=\\\"msgs\\\"&gt;&lt;/p-messages&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\n@Component(&#123;\\n    templateUrl: './confirmdialogdemo.html',\\n    styles: [`\\n        :host ::ng-deep button &#123;\\n            margin-right: .25em;\\n        &#125;\\n    `],\\n    providers: [ConfirmationService]\\n&#125;)\\nexport class ConfirmDialogDemo &#123;\\n\\n    msgs: Message[] = [];\\n\\n    position: string;\\n\\n    constructor(private confirmationService: ConfirmationService) &#123;&#125;\\n\\n    confirm1() &#123;\\n        this.confirmationService.confirm(&#123;\\n            message: 'Are you sure that you want to proceed?',\\n            header: 'Confirmation',\\n            icon: 'pi pi-exclamation-triangle',\\n            accept: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Confirmed', detail:'You have accepted'&#125;];\\n            &#125;,\\n            reject: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Rejected', detail:'You have rejected'&#125;];\\n            &#125;\\n        &#125;);\\n    &#125;\\n\\n    confirm2() &#123;\\n        this.confirmationService.confirm(&#123;\\n            message: 'Do you want to delete this record?',\\n            header: 'Delete Confirmation',\\n            icon: 'pi pi-info-circle',\\n            accept: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Confirmed', detail:'Record deleted'&#125;];\\n            &#125;,\\n            reject: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Rejected', detail:'You have rejected'&#125;];\\n            &#125;\\n        &#125;);\\n    &#125;\\n\\n    confirmPosition(position: string) &#123;\\n        this.position = position;\\n\\n        this.confirmationService.confirm(&#123;\\n            message: 'Do you want to delete this record?',\\n            header: 'Delete Confirmation',\\n            icon: 'pi pi-info-circle',\\n            accept: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Confirmed', detail:'Record deleted'&#125;];\\n            &#125;,\\n            reject: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Rejected', detail:'You have rejected'&#125;];\\n            &#125;,\\n            key: \\\"positionDialog\\\"\\n        &#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-confirmdialog-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","import {NgModule,Component,OnDestroy,Input,Output,EventEmitter,AfterContentInit,Optional,ElementRef,ChangeDetectionStrategy,ContentChildren,QueryList,TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {Message,PrimeTemplate,MessageService} from 'primeng/api';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'p-messages',\n    template: `\n        <div *ngIf=\"hasMessages()\" class=\"ui-messages ui-widget ui-corner-all\"\n                    [ngClass]=\"getSeverityClass()\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n            <a tabindex=\"0\" class=\"ui-messages-close\" (click)=\"clear($event)\" (keydown.enter)=\"clear($event)\" *ngIf=\"closable\">\n                <i class=\"pi pi-times\"></i>\n            </a>\n            <span class=\"ui-messages-icon pi\" [ngClass]=\"icon\"></span>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <ul *ngIf=\"value && value.length\">\n                <li *ngFor=\"let msg of value\">\n                    <div *ngIf=\"!escape; else escapeOut\">\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\" [innerHTML]=\"msg.summary\"></span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\" [innerHTML]=\"msg.detail\"></span>\n                    </div>\n                    <ng-template #escapeOut>\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\">{{msg.summary}}</span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\">{{msg.detail}}</span>\n                    </ng-template>\n                </li>\n            </ul>\n        </div>\n    `,\n    animations: [\n        trigger('messageAnimation', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({transform: 'translateY(-25%)', opacity: 0}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    opacity: 0,\n                    transform: 'translateY(-25%)'\n                }))\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Messages implements AfterContentInit, OnDestroy {\n\n    @Input() value: Message[];\n\n    @Input() closable: boolean = true;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() enableService: boolean = true;\n\n    @Input() key: string;\n\n    @Input() escape: boolean = true;\n\n    @Input() severity: string;\n\n    @Input() showTransitionOptions: string = '300ms ease-out';\n\n    @Input() hideTransitionOptions: string = '250ms ease-in';\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() valueChange: EventEmitter<Message[]> = new EventEmitter<Message[]>();\n\n    messageSubscription: Subscription;\n\n    clearSubscription: Subscription;\n\n    contentTemplate: TemplateRef<any>;\n\n    constructor(@Optional() public messageService: MessageService, public el: ElementRef) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n\n        if (this.messageService && this.enableService && !this.contentTemplate) {\n            this.messageSubscription = this.messageService.messageObserver.subscribe((messages: any) => {\n                if (messages) {\n                    if (messages instanceof Array) {\n                        let filteredMessages = messages.filter(m => this.key === m.key);\n                        this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\n                    }\n                    else if (this.key === messages.key) {\n                        this.value = this.value ? [...this.value, ...[messages]] : [messages];\n                    }\n                }\n            });\n\n            this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n                if (key) {\n                    if (this.key === key) {\n                        this.value = null;\n                    }\n                }\n                else {\n                    this.value = null;\n                }\n            });\n        }\n    }\n\n    hasMessages() {\n        let parentEl = this.el.nativeElement.parentElement;\n        if (parentEl && parentEl.offsetParent) {\n            return this.contentTemplate != null || this.value && this.value.length > 0;\n        }\n\n        return false;\n    }\n\n    getSeverityClass() {\n        if (this.severity) {\n            return 'ui-messages-' + this.severity;\n        }\n        else {\n            const msg = this.value[0];\n            if (msg) {\n                const severities = ['info', 'warn', 'error', 'success'];\n                const severity = severities.find(item => item === msg.severity);\n\n                return severity && `ui-messages-${severity}`;\n            }\n        }\n\n        return null;\n    }\n\n    clear(event) {\n        this.value = [];\n        this.valueChange.emit(this.value);\n\n        event.preventDefault();\n    }\n\n    get icon(): string {\n        const severity = this.severity || (this.hasMessages() ? this.value[0].severity : null);\n\n        if (this.hasMessages()) {\n            switch(severity) {\n                case 'success':\n                    return 'pi-check';\n                break;\n\n                case 'info':\n                    return 'pi-info-circle';\n                break;\n\n                case 'error':\n                    return 'pi-times';\n                break;\n\n                case 'warn':\n                    return 'pi-exclamation-triangle';\n                break;\n\n                default:\n                    return 'pi-info-circle';\n                break;\n            }\n        }\n\n        return null;\n    }\n\n    ngOnDestroy() {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Messages],\n    declarations: [Messages]\n})\nexport class MessagesModule { }\n","export * from './messages';","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ConfirmDialogDemo} from './confirmdialogdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: ConfirmDialogDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ConfirmDialogDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ConfirmDialogDemo} from './confirmdialogdemo';\nimport {ConfirmDialogDemoRoutingModule} from './confirmdialogdemo-routing.module';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {ButtonModule} from 'primeng/button';\nimport {MessagesModule} from 'primeng/messages';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tConfirmDialogDemoRoutingModule,\n        ConfirmDialogModule,\n        ButtonModule,\n        MessagesModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tConfirmDialogDemo\n\t]\n})\nexport class ConfirmDialogDemoModule {}\n","import {Component} from '@angular/core';\nimport {ConfirmationService} from 'primeng/api';\nimport {Message} from 'primeng/api';\n\n@Component({\n    templateUrl: './confirmdialogdemo.html',\n    styles: [`\n        :host ::ng-deep button {\n            margin-right: .25em;\n        }\n    `],\n    providers: [ConfirmationService]\n})\nexport class ConfirmDialogDemo {\n    \n    msgs: Message[] = [];\n\n    position: string;\n    \n    constructor(private confirmationService: ConfirmationService) {}\n\n    confirm1() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to proceed?',\n            header: 'Confirmation',\n            icon: 'pi pi-exclamation-triangle',\n            accept: () => {\n                this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];\n            },\n            reject: () => {\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\n            }\n        });\n    }\n    \n    confirm2() {\n        this.confirmationService.confirm({\n            message: 'Do you want to delete this record?',\n            header: 'Delete Confirmation',\n            icon: 'pi pi-info-circle',\n            accept: () => {\n                this.msgs = [{severity:'info', summary:'Confirmed', detail:'Record deleted'}];\n            },\n            reject: () => {\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\n            }\n        });\n    }\n\n    confirmPosition(position: string) {\n        this.position = position;\n\n        this.confirmationService.confirm({\n            message: 'Do you want to delete this record?',\n            header: 'Delete Confirmation',\n            icon: 'pi pi-info-circle',\n            accept: () => {\n                this.msgs = [{severity:'info', summary:'Confirmed', detail:'Record deleted'}];\n            },\n            reject: () => {\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\n            },\n            key: \"positionDialog\"\n        });\n    }\n}"]}