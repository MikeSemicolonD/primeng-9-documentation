{"version":3,"sources":["./src/app/showcase/components/confirmdialog/confirmdialogdemo.html","./src/app/components/messages/messages.ts","./src/app/components/messages/public_api.ts","./src/app/showcase/components/confirmdialog/confirmdialogdemo-routing.module.ts","./src/app/showcase/components/confirmdialog/confirmdialogdemo.module.ts","./src/app/showcase/components/confirmdialog/confirmdialogdemo.ts"],"names":[],"mappings":"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","file":"components-confirmdialog-confirmdialogdemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">ConfirmDialog</span>\\n        <span>ConfirmDialog is backed by a service utilizing Observables to display confirmation windows\\n            easily that can be shared by multiple actions on the same component.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3>Basic</h3>\\n    <p-confirmDialog [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\n    <button type=\\\"button\\\" (click)=\\\"confirm1()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"></button>\\n    <button type=\\\"button\\\" (click)=\\\"confirm2()\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Delete\\\"></button>\\n\\n    <h3>Position</h3>\\n    <div class=\\\"p-grid p-dir-col\\\">\\n        <div class=\\\"p-col\\\">\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('left')\\\" pButton icon=\\\"pi pi-arrow-right\\\" label=\\\"Left\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('right')\\\" pButton icon=\\\"pi pi-arrow-left\\\" label=\\\"Right\\\" class=\\\"ui-button-warning\\\"></button>\\n        </div>\\n        <div class=\\\"p-col\\\">\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('topleft')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopLeft\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('top')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"Top\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('topright')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopRight\\\" class=\\\"ui-button-warning\\\"></button>\\n        </div>\\n        <div class=\\\"p-col\\\">\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomleft')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomLeft\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('bottom')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"Bottom\\\" class=\\\"ui-button-warning\\\"></button>\\n            <button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomright')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomRight\\\" class=\\\"ui-button-warning\\\"></button>\\n        </div>\\n    </div>\\n    <p-confirmDialog [style]=\\\"{width: '50vw'}\\\" key=\\\"positionDialog\\\" [position]=\\\"position\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\n\\n\\n    <p-messages [value]=\\\"msgs\\\"></p-messages>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;ConfirmDialogModule&#125; from 'primeng/confirmdialog';\\nimport &#123;ConfirmationService&#125; from 'primeng/api';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>ConfirmDialog is defined using p-confirmDialog tag and an instance of ConfirmationService is required to display it by\\n                calling confirm method.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"&gt;&lt;/p-confirmDialog&gt;\\n\\n&lt;button type=\\\"text\\\" (click)=\\\"confirm()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ConfirmDialogDemo &#123;\\n\\n    constructor(private confirmationService: ConfirmationService) &#123;&#125;\\n\\n    confirm() &#123;\\n        this.confirmationService.confirm(&#123;\\n            message: 'Are you sure that you want to perform this action?',\\n            accept: () => &#123;\\n                //Actual logic to perform a confirmation\\n            &#125;\\n        &#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <p>Confirm method takes a confirmation instance used to customize the dialog UI along with accept and reject actions.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>message</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Message of the confirmation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>key</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Optional key to match the key of the confirm dialog, necessary to use when component tree has multiple confirm dialogs.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>icon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon to display next to the message.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>header</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Header text of the dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>accept</td>\\n                            <td>Function</td>\\n                            <td>null</td>\\n                            <td>Callback to execute when action is confirmed.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>reject</td>\\n                            <td>Function</td>\\n                            <td>null</td>\\n                            <td>Callback to execute when action is rejected.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptLabel</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Label of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectLabel</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Label of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptIcon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectIcon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptVisible</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Visibility of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectVisible</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Visibility of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>maskStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the mask.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>blockScroll</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether background scroll should be blocked when dialog is visible.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>defaultFocus</td>\\n                            <td>string</td>\\n                            <td>accept</td>\\n                            <td>Element to receive the focus when the dialog gets visible, valid values are \\\"accept\\\", \\\"reject\\\", \\\"close\\\" and \\\"none\\\".</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>ConfirmationService</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>confirm</td>\\n                            <td>confirm: Confirmation Object</td>\\n                            <td>Displays the dialog using the confirmation object options.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>close</td>\\n                            <td>-</td>\\n                            <td>Hides the dialog without invoking accept or reject callbacks.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Customization</h3>\\n            <p>Properties of the dialog are defined in two ways, message, icon and header properties can either\\n            be defined using confirm method or declaratively on p-confirmDialog ng-template. If these values are unlikely to change then\\n            declarative approach would be useful, still properties defined in a ng-template can be overriden with confirm method call.</p>\\n\\n            <p>In addition, buttons at footer section can be customized by passing your own UI, important note to make confirmation work with\\n            a custom UI is defining a local ng-template variable for the dialog and assign accept()-reject() methods to your own buttons.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog #cd header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"&gt;\\n    &lt;p-footer&gt;\\n        &lt;button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"No\\\" (click)=\\\"cd.reject()\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Yes\\\" (click)=\\\"cd.accept()\\\"&gt;&lt;/button&gt;\\n    &lt;/p-footer&gt;\\n&lt;/p-confirmDialog&gt;\\n</code>\\n</pre>\\n\\n            <h3>Animation Configuration</h3>\\n            <p>Transition of the ConfirmDialog open and hide animations can be customized using the transitionOptions property with a default value as <b>400ms cubic-bezier(0.25, 0.8, 0.25, 1)</b>,\\n                example below disables the animation altogether.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog [transitionOptions]=\\\"'0ms'\\\"&gt;\\n&lt;/p-confirmDialog&gt;\\n</code>\\n</pre>\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                         <tr>\\n                            <td>header</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Title text of the dialog.</td>\\n                         </tr>\\n                         <tr>\\n                           <td>message</td>\\n                           <td>string</td>\\n                           <td>null</td>\\n                           <td>Message of the confirmation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>key</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Optional key to match the key of confirm object, necessary to use when component tree has multiple confirm dialogs.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>icon</td>\\n                          <td>string</td>\\n                          <td>null</td>\\n                          <td>Icon to display next to message.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>acceptLabel</td>\\n                          <td>string</td>\\n                          <td>Yes</td>\\n                          <td>Label of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>acceptIcon</td>\\n                          <td>string</td>\\n                          <td>pi pi-check</td>\\n                          <td>Icon of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>acceptVisible</td>\\n                          <td>boolean</td>\\n                          <td>true</td>\\n                          <td>Visibility of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>rejectLabel</td>\\n                          <td>string</td>\\n                          <td>No</td>\\n                          <td>Label of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>rejectIcon</td>\\n                          <td>string</td>\\n                          <td>pi pi-times</td>\\n                          <td>Icon of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>rejectVisible</td>\\n                          <td>boolean</td>\\n                          <td>true</td>\\n                          <td>Visibility of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closeOnEscape</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Specifies if pressing escape key should hide the dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rtl</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When enabled dialog is displayed in RTL direction.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closable</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Adds a close icon to the header to hide the dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>focusTrap</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>When enabled, can only focus on elements inside the confirm dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the dialog, valid values are \\\"body\\\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\\\"mydiv\\\" for a div element having #mydiv as variable name).</td>\\n                        </tr>\\n                        <tr>\\n                            <td>acceptButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>ui-confirmdialog-acceptbutton</td>\\n                            <td>Style class of the accept button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rejectButtonStyleClass</td>\\n                            <td>string</td>\\n                            <td>ui-confirmdialog-rejectbutton</td>\\n                            <td>Style class of the reject button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>baseZIndex</td>\\n                            <td>number</td>\\n                            <td>0</td>\\n                            <td>Base zIndex value to use in layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>autoZIndex</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether to automatically manage layering.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>transitionOptions</td>\\n                            <td>string</td>\\n                            <td>400ms cubic-bezier(0.25, 0.8, 0.25, 1)</td>\\n                            <td>Transition options of the animation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>defaultFocus</td>\\n                            <td>string</td>\\n                            <td>accept</td>\\n                            <td>Element to receive the focus when the dialog gets visible, valid values are \\\"accept\\\", \\\"reject\\\", \\\"close\\\" and \\\"none\\\".</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-dialog</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-confirmdialog</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-titlebar</td>\\n                            <td>Container of header.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-title</td>\\n                            <td>Header element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-titlebar-icon</td>\\n                            <td>Icon container inside header.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-titlebar-close</td>\\n                            <td>Close icon element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-dialog-content</td>\\n                            <td>Content element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>ConfirmationService</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/confirmdialog\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-confirmdialog-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-confirmDialog [style]=\\\"&#123;width: '50vw'&#125;\\\"&gt;&lt;/p-confirmDialog&gt;\\n\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm1()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"&gt;&lt;/button&gt;\\n\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm2()\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Delete\\\"&gt;&lt;/button&gt;\\n\\n&lt;p-messages [value]=\\\"msgs\\\"&gt;&lt;/p-messages&gt;\\n&lt;h3&gt;Basic&lt;/h3&gt;\\n&lt;p-confirmDialog [style]=\\\"&#123;width: '50vw'&#125;\\\" [baseZIndex]=\\\"10000\\\"&gt;&lt;/p-confirmDialog&gt;\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm1()\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"&gt;&lt;/button&gt;\\n&lt;button type=\\\"button\\\" (click)=\\\"confirm2()\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Delete\\\"&gt;&lt;/button&gt;\\n\\n&lt;h3&gt;Position&lt;/h3&gt;\\n&lt;div class=\\\"p-grid p-dir-col\\\"&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('left')\\\" pButton icon=\\\"pi pi-arrow-right\\\" label=\\\"Left\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('right')\\\" pButton icon=\\\"pi pi-arrow-left\\\" label=\\\"Right\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('topleft')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopLeft\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('top')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"Top\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('topright')\\\" pButton icon=\\\"pi pi-arrow-down\\\" label=\\\"TopRight\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomleft')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomLeft\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('bottom')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"Bottom\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n        &lt;button type=\\\"button\\\" (click)=\\\"confirmPosition('bottomright')\\\" pButton icon=\\\"pi pi-arrow-up\\\" label=\\\"BottomRight\\\" class=\\\"ui-button-warning\\\"&gt;&lt;/button&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n&lt;p-confirmDialog [style]=\\\"&#123;width: '50vw'&#125;\\\" key=\\\"positionDialog\\\" [position]=\\\"position\\\" [baseZIndex]=\\\"10000\\\"&gt;&lt;/p-confirmDialog&gt;\\n\\n\\n&lt;p-messages [value]=\\\"msgs\\\"&gt;&lt;/p-messages&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\n@Component(&#123;\\n    templateUrl: './confirmdialogdemo.html',\\n    styles: [`\\n        :host ::ng-deep button &#123;\\n            margin-right: .25em;\\n        &#125;\\n    `],\\n    providers: [ConfirmationService]\\n&#125;)\\nexport class ConfirmDialogDemo &#123;\\n\\n    msgs: Message[] = [];\\n\\n    position: string;\\n\\n    constructor(private confirmationService: ConfirmationService) &#123;&#125;\\n\\n    confirm1() &#123;\\n        this.confirmationService.confirm(&#123;\\n            message: 'Are you sure that you want to proceed?',\\n            header: 'Confirmation',\\n            icon: 'pi pi-exclamation-triangle',\\n            accept: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Confirmed', detail:'You have accepted'&#125;];\\n            &#125;,\\n            reject: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Rejected', detail:'You have rejected'&#125;];\\n            &#125;\\n        &#125;);\\n    &#125;\\n\\n    confirm2() &#123;\\n        this.confirmationService.confirm(&#123;\\n            message: 'Do you want to delete this record?',\\n            header: 'Delete Confirmation',\\n            icon: 'pi pi-info-circle',\\n            accept: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Confirmed', detail:'Record deleted'&#125;];\\n            &#125;,\\n            reject: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Rejected', detail:'You have rejected'&#125;];\\n            &#125;\\n        &#125;);\\n    &#125;\\n\\n    confirmPosition(position: string) &#123;\\n        this.position = position;\\n\\n        this.confirmationService.confirm(&#123;\\n            message: 'Do you want to delete this record?',\\n            header: 'Delete Confirmation',\\n            icon: 'pi pi-info-circle',\\n            accept: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Confirmed', detail:'Record deleted'&#125;];\\n            &#125;,\\n            reject: () => &#123;\\n                this.msgs = [&#123;severity:'info', summary:'Rejected', detail:'You have rejected'&#125;];\\n            &#125;,\\n            key: \\\"positionDialog\\\"\\n        &#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-confirmdialog-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","import {NgModule,Component,OnDestroy,Input,Output,EventEmitter,AfterContentInit,Optional,ElementRef,ChangeDetectionStrategy,ContentChildren,QueryList,TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {Message,PrimeTemplate,MessageService} from 'primeng/api';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'p-messages',\n    template: `\n        <div *ngIf=\"hasMessages()\" class=\"ui-messages ui-widget ui-corner-all\"\n                    [ngClass]=\"getSeverityClass()\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n            <a tabindex=\"0\" class=\"ui-messages-close\" (click)=\"clear($event)\" (keydown.enter)=\"clear($event)\" *ngIf=\"closable\">\n                <i class=\"pi pi-times\"></i>\n            </a>\n            <span class=\"ui-messages-icon pi\" [ngClass]=\"icon\"></span>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <ul *ngIf=\"value && value.length\">\n                <li *ngFor=\"let msg of value\">\n                    <div *ngIf=\"!escape; else escapeOut\">\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\" [innerHTML]=\"msg.summary\"></span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\" [innerHTML]=\"msg.detail\"></span>\n                    </div>\n                    <ng-template #escapeOut>\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\">{{msg.summary}}</span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\">{{msg.detail}}</span>\n                    </ng-template>\n                </li>\n            </ul>\n        </div>\n    `,\n    animations: [\n        trigger('messageAnimation', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({transform: 'translateY(-25%)', opacity: 0}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    opacity: 0,\n                    transform: 'translateY(-25%)'\n                }))\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Messages implements AfterContentInit, OnDestroy {\n\n    @Input() value: Message[];\n\n    @Input() closable: boolean = true;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() enableService: boolean = true;\n\n    @Input() key: string;\n\n    @Input() escape: boolean = true;\n\n    @Input() severity: string;\n\n    @Input() showTransitionOptions: string = '300ms ease-out';\n\n    @Input() hideTransitionOptions: string = '250ms ease-in';\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() valueChange: EventEmitter<Message[]> = new EventEmitter<Message[]>();\n\n    messageSubscription: Subscription;\n\n    clearSubscription: Subscription;\n\n    contentTemplate: TemplateRef<any>;\n\n    constructor(@Optional() public messageService: MessageService, public el: ElementRef) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n\n        if (this.messageService && this.enableService && !this.contentTemplate) {\n            this.messageSubscription = this.messageService.messageObserver.subscribe((messages: any) => {\n                if (messages) {\n                    if (messages instanceof Array) {\n                        let filteredMessages = messages.filter(m => this.key === m.key);\n                        this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\n                    }\n                    else if (this.key === messages.key) {\n                        this.value = this.value ? [...this.value, ...[messages]] : [messages];\n                    }\n                }\n            });\n\n            this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n                if (key) {\n                    if (this.key === key) {\n                        this.value = null;\n                    }\n                }\n                else {\n                    this.value = null;\n                }\n            });\n        }\n    }\n\n    hasMessages() {\n        let parentEl = this.el.nativeElement.parentElement;\n        if (parentEl && parentEl.offsetParent) {\n            return this.contentTemplate != null || this.value && this.value.length > 0;\n        }\n\n        return false;\n    }\n\n    getSeverityClass() {\n        if (this.severity) {\n            return 'ui-messages-' + this.severity;\n        }\n        else {\n            const msg = this.value[0];\n            if (msg) {\n                const severities = ['info', 'warn', 'error', 'success'];\n                const severity = severities.find(item => item === msg.severity);\n\n                return severity && `ui-messages-${severity}`;\n            }\n        }\n\n        return null;\n    }\n\n    clear(event) {\n        this.value = [];\n        this.valueChange.emit(this.value);\n\n        event.preventDefault();\n    }\n\n    get icon(): string {\n        const severity = this.severity || (this.hasMessages() ? this.value[0].severity : null);\n\n        if (this.hasMessages()) {\n            switch(severity) {\n                case 'success':\n                    return 'pi-check';\n                break;\n\n                case 'info':\n                    return 'pi-info-circle';\n                break;\n\n                case 'error':\n                    return 'pi-times';\n                break;\n\n                case 'warn':\n                    return 'pi-exclamation-triangle';\n                break;\n\n                default:\n                    return 'pi-info-circle';\n                break;\n            }\n        }\n\n        return null;\n    }\n\n    ngOnDestroy() {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Messages],\n    declarations: [Messages]\n})\nexport class MessagesModule { }\n","export * from './messages';","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ConfirmDialogDemo} from './confirmdialogdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: ConfirmDialogDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ConfirmDialogDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ConfirmDialogDemo} from './confirmdialogdemo';\nimport {ConfirmDialogDemoRoutingModule} from './confirmdialogdemo-routing.module';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {ButtonModule} from 'primeng/button';\nimport {MessagesModule} from 'primeng/messages';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tConfirmDialogDemoRoutingModule,\n        ConfirmDialogModule,\n        ButtonModule,\n        MessagesModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tConfirmDialogDemo\n\t]\n})\nexport class ConfirmDialogDemoModule {}\n","import {Component} from '@angular/core';\nimport {ConfirmationService} from 'primeng/api';\nimport {Message} from 'primeng/api';\n\n@Component({\n    templateUrl: './confirmdialogdemo.html',\n    styles: [`\n        :host ::ng-deep button {\n            margin-right: .25em;\n        }\n    `],\n    providers: [ConfirmationService]\n})\nexport class ConfirmDialogDemo {\n    \n    msgs: Message[] = [];\n\n    position: string;\n    \n    constructor(private confirmationService: ConfirmationService) {}\n\n    confirm1() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to proceed?',\n            header: 'Confirmation',\n            icon: 'pi pi-exclamation-triangle',\n            accept: () => {\n                this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];\n            },\n            reject: () => {\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\n            }\n        });\n    }\n    \n    confirm2() {\n        this.confirmationService.confirm({\n            message: 'Do you want to delete this record?',\n            header: 'Delete Confirmation',\n            icon: 'pi pi-info-circle',\n            accept: () => {\n                this.msgs = [{severity:'info', summary:'Confirmed', detail:'Record deleted'}];\n            },\n            reject: () => {\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\n            }\n        });\n    }\n\n    confirmPosition(position: string) {\n        this.position = position;\n\n        this.confirmationService.confirm({\n            message: 'Do you want to delete this record?',\n            header: 'Delete Confirmation',\n            icon: 'pi pi-info-circle',\n            accept: () => {\n                this.msgs = [{severity:'info', summary:'Confirmed', detail:'Record deleted'}];\n            },\n            reject: () => {\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\n            },\n            key: \"positionDialog\"\n        });\n    }\n}"],"sourceRoot":"webpack:///"}