{"version":3,"sources":["webpack:///src/app/showcase/components/formlayout/formlayoutdemo.html","webpack:///src/app/components/checkbox/checkbox.ts","webpack:///src/app/components/checkbox/public_api.ts","webpack:///src/app/showcase/components/formlayout/formlayout-routing.module.ts","webpack:///src/app/showcase/components/formlayout/formlayoutdemo.module.ts","webpack:///src/app/showcase/components/formlayout/formlayoutdemo.scss","webpack:///src/app/showcase/components/formlayout/formlayoutdemo.ts"],"names":["CHECKBOX_VALUE_ACCESSOR","provide","useExisting","Checkbox","multi","cd","checkboxIcon","onChange","onModelChange","onModelTouched","focused","checked","onClick","event","checkbox","focus","preventDefault","disabled","readonly","updateModel","binary","addValue","removeValue","model","formControl","setValue","emit","originalEvent","handleChange","target","isChecked","indexOf","value","filter","val","onFocus","onBlur","inputViewChild","nativeElement","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","selector","template","providers","changeDetection","Default","CheckboxModule","imports","exports","declarations","FormLayoutDemoRoutingModule","forChild","path","component","FormLayoutDemoModule","FormLayoutDemo","selectedState","states","name","code","cities1","cities2","city1","city2"],"mappings":"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","file":"components-formlayout-formlayoutdemo-module-es5.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Form Layout</span>\\n        <span>Form layout is a CSS utility optimized for creating forms with ease. FormLayout is not included in PrimeNG as it is provided by <a href=\\\"https://github.com/primefaces/primeflex\\\">PrimeFlex</a>,\\n            a shared grid library between PrimeFaces, PrimeNG, PrimeReact and PrimeVue projects.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3>Vertical</h3>\\n    <div class=\\\"ui-fluid\\\">\\n        <div class=\\\"p-field\\\">\\n            <label for=\\\"firstname1\\\">Firstname</label>\\n            <input id=\\\"firstname1\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n        <div class=\\\"p-field\\\">\\n            <label for=\\\"lastname1\\\">Lastname</label>\\n            <input id=\\\"lastname1\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n    </div>\\n\\n    <h3>Vertical and Grid</h3>\\n    <div class=\\\"ui-fluid p-formgrid p-grid\\\">\\n            <div class=\\\"p-field p-col\\\">\\n            <label for=\\\"firstname2\\\">Firstname</label>\\n            <input id=\\\"firstname2\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n        <div class=\\\"p-field p-col\\\">\\n            <label for=\\\"lastname2\\\">Lastname</label>\\n            <input id=\\\"lastname2\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n    </div>\\n\\n    <h3>Horizontal and Fixed Width</h3>\\n    <div class=\\\"p-field p-grid\\\">\\n        <label for=\\\"firstname3\\\" class=\\\"p-col-fixed\\\" style=\\\"width:100px\\\">Firstname</label>\\n        <div class=\\\"p-col\\\">\\n            <input id=\\\"firstname3\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n    </div>\\n    <div class=\\\"p-field p-grid\\\">\\n        <label for=\\\"lastname3\\\" class=\\\"p-col-fixed\\\" style=\\\"width:100px\\\">Lastname</label>\\n        <div class=\\\"p-col\\\">\\n            <input id=\\\"lastname3\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n    </div>\\n\\n    <h3>Horizontal and Fluid</h3>\\n    <div class=\\\"ui-fluid\\\">\\n        <div class=\\\"p-field p-grid\\\">\\n            <label for=\\\"firstname4\\\" class=\\\"p-col-12 p-md-2\\\">Firstname</label>\\n            <div class=\\\"p-col-12 p-md-10\\\">\\n                <input id=\\\"firstname4\\\" type=\\\"text\\\" pInputText> \\n            </div>\\n        </div>\\n        <div class=\\\"p-field p-grid\\\">\\n            <label for=\\\"lastname4\\\" class=\\\"p-col-12 p-md-2\\\">Lastname</label>\\n            <div class=\\\"p-col-12 p-md-10\\\">\\n                <input id=\\\"lastname4\\\" type=\\\"text\\\" pInputText> \\n            </div>\\n        </div>\\n    </div>\\n\\n    <h3>Inline</h3>\\n    <div class=\\\"p-formgroup-inline\\\">\\n        <div class=\\\"p-field\\\">\\n            <label for=\\\"firstname5\\\" class=\\\"p-sr-only\\\">Firstname</label>\\n            <input id=\\\"firstname5\\\" type=\\\"text\\\" pInputText placeholder=\\\"Firstname\\\"> \\n        </div>\\n        <div class=\\\"p-field\\\">\\n            <label for=\\\"lastname5\\\" class=\\\"p-sr-only\\\">Lastname</label>\\n            <input id=\\\"lastname5\\\" type=\\\"text\\\" pInputText placeholder=\\\"Lastname\\\"> \\n        </div>\\n        <button pButton type=\\\"button\\\" label=\\\"Submit\\\"></button>\\n    </div>\\n\\n    <h3>Vertical Checkbox</h3>\\n    <div class=\\\"p-field-checkbox\\\">\\n        <p-checkbox name=\\\"city1\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"cities1\\\" inputId=\\\"city1\\\"></p-checkbox>\\n        <label for=\\\"city1\\\">Chicago</label>\\n    </div>\\n    <div class=\\\"p-field-checkbox\\\">\\n        <p-checkbox name=\\\"city2\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"cities1\\\" inputId=\\\"city2\\\"></p-checkbox>\\n        <label for=\\\"city2\\\">Los Angeles</label>\\n    </div>\\n\\n    <h3>Horizontal Checkbox</h3>\\n    <div class=\\\"p-formgroup-inline\\\">\\n        <div class=\\\"p-field-checkbox\\\">\\n            <p-checkbox name=\\\"city3\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"cities2\\\" inputId=\\\"city3\\\"></p-checkbox>\\n            <label for=\\\"city3\\\">Chicago</label>\\n        </div>\\n        <div class=\\\"p-field-checkbox\\\">\\n            <p-checkbox name=\\\"city4\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"cities2\\\" inputId=\\\"city4\\\"></p-checkbox>\\n            <label for=\\\"city4\\\">Los Angeles</label>\\n        </div>\\n    </div>\\n\\n    <h3>Vertical RadioButton</h3>\\n    <div class=\\\"p-field-radiobutton\\\">\\n        <p-radioButton name=\\\"city5\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"city1\\\" inputId=\\\"city5\\\"></p-radioButton>\\n        <label for=\\\"city5\\\">Chicago</label>\\n    </div>\\n    <div class=\\\"p-field-radiobutton\\\">\\n        <p-radioButton name=\\\"city6\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"city1\\\" inputId=\\\"city6\\\"></p-radioButton>\\n        <label for=\\\"city6\\\">Los Angeles</label>\\n    </div>\\n\\n    <h3>Horizontal RadioButton</h3>\\n    <div class=\\\"p-formgroup-inline\\\">\\n        <div class=\\\"p-field-checkbox\\\">\\n        <p-radioButton name=\\\"city7\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"city2\\\" inputId=\\\"city7\\\"></p-radioButton>\\n        <label for=\\\"city7\\\">Chicago</label>\\n        </div>\\n        <div class=\\\"p-field-checkbox\\\">\\n            <p-radioButton name=\\\"city8\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"city2\\\" inputId=\\\"city8\\\"></p-radioButton>\\n            <label for=\\\"city8\\\">Los Angeles</label>\\n        </div>\\n    </div>\\n\\n    <h3>Help Text</h3>\\n    <div class=\\\"p-field ui-fluid\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input id=\\\"username\\\" type=\\\"username\\\" pInputText aria-describedby=\\\"username-help\\\"> \\n        <small id=\\\"username-help\\\">Enter your username to reset your password.</small>\\n    </div>\\n\\n    <h3>Advanced</h3>\\n    <div class=\\\"ui-fluid p-formgrid p-grid\\\">\\n        <div class=\\\"p-field p-col-12 p-md-6\\\">\\n            <label for=\\\"firstname6\\\">Firstname</label>\\n            <input id=\\\"firstname6\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n        <div class=\\\"p-field p-col-12 p-md-6\\\">\\n            <label for=\\\"lastname6\\\">Lastname</label>\\n            <input id=\\\"lastname6\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n        <div class=\\\"p-field p-col-12\\\">\\n            <label for=\\\"address\\\">Address</label>\\n            <textarea id=\\\"address\\\" type=\\\"text\\\" rows=\\\"4\\\" pInputTextarea></textarea>\\n        </div>\\n        <div class=\\\"p-field p-col-12 p-md-6\\\">\\n            <label for=\\\"city\\\">City</label>\\n            <input id=\\\"city\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n        <div class=\\\"p-field p-col-12 p-md-3\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <p-dropdown inputId=\\\"state\\\" [options]=\\\"states\\\" [(ngModel)]=\\\"selectedState\\\" placeholder=\\\"Select\\\" optionLabel=\\\"name\\\"></p-dropdown>\\n        </div>\\n        <div class=\\\"p-field p-col-12 p-md-3\\\">\\n            <label for=\\\"zip\\\">Zip</label>\\n            <input id=\\\"zip\\\" type=\\\"text\\\" pInputText> \\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Install</h3>\\n                <p>PrimeFlex is available at npm, if you have an existing application run the following command to download it to your project.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nnpm install primeflex --save\\n</code>\\n</pre>\\n\\n            <p>Then add the primeflex.css to your application, example below uses styles configuration of an Angular CLI project.</p>\\n<pre>\\n<code class=\\\"language-js\\\" pCode ngNonBindable>\\n\\\"styles\\\": [\\n  \\\"node_modules/primeflex/primeflex.css\\\"\\n],\\n</code>\\n</pre>\\n            <h3>Getting Started</h3>\\n            <p>Core member of the FormLayout is the <i>.p-field</i> class that wraps the input field and the associated label.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"p-field\\\"&gt;\\n    &lt;label for=\\\"fieldId\\\"&gt;Label&lt;/label&gt;\\n    &lt;input id=\\\"fieldId\\\" type=\\\"text\\\" pInputText&gt; \\n&lt;/div&gt;\\n</code>\\n</pre>\\n\\n            <h3>Vertical Layout</h3>\\n            <p>In its simplest form, a vertical layout is created when used within <i>.p-fluid</i> which makes the components use all available width.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"ui-fluid\\\"&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"firstname1\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname1\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"lastname1\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname1\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre>\\n\\n\\n            <h3>Vertical Layout with Grid</h3>\\n            <p>This is where FormLayout actually hooks-in to PrimeFlex with the help of <i>.p-formgrid</i> class to optimize the content for form design. Example\\n            below arranges two fields to be displayed next two each other.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"p-fluid p-formgrid p-grid\\\"&gt;\\n    &lt;div class=\\\"p-field p-col\\\"&gt;\\n        &lt;label for=\\\"firstname1\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname1\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col\\\"&gt;\\n        &lt;label for=\\\"lastname1\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname1\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre>\\n            <h3>Horizontal and Fixed Width</h3>\\n            <p>In horizontal form, label of the field is displayed on the same row of the input as opposed to the vertical alternative. In this\\n                example, label has a fixed width where container of the inputs gets the remaining space.\\n            </p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"p-field p-grid\\\"&gt;\\n    &lt;label for=\\\"firstname3\\\" class=\\\"p-col-fixed\\\" style=\\\"width:100px\\\"&gt;Firstname&lt;/label&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n        &lt;input id=\\\"firstname3\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n&lt;div class=\\\"p-field p-grid\\\"&gt;\\n    &lt;label for=\\\"lastname3\\\" class=\\\"p-col-fixed\\\" style=\\\"width:100px\\\"&gt;Lastname&lt;/label&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n        &lt;input id=\\\"lastname3\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre> \\n\\n            <h3>Horizontal and Fluid</h3>\\n            <p>Wrapping the form in the previous example with <i>.p-fluid</i> and removing the fixed width results in a fluid layout.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"ui-fluid\\\"&gt;\\n    &lt;div class=\\\"p-field p-grid\\\"&gt;\\n        &lt;label for=\\\"firstname\\\" class=\\\"p-col-12 p-md-2\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;div class=\\\"p-col-12 p-md-10\\\"&gt;\\n            &lt;input id=\\\"firstname\\\" type=\\\"text\\\" pInputText&gt; \\n        &lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-grid\\\"&gt;\\n        &lt;label for=\\\"lastname\\\" class=\\\"p-col-12 p-md-2\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;div class=\\\"p-col-12 p-md-10\\\"&gt;\\n            &lt;input id=\\\"lastname\\\" type=\\\"text\\\" pInputText&gt; \\n        &lt;/div&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre> \\n\\n\\n            <h3>Inline</h3>\\n            <p>Inline forms are used to display the content on the same row and can simply be implemented by adding <i>.p-formgroup-inline</i> to the form container. Note that per design requirements, if labels\\n                are not visually hidden, it is suggested to use <i>.p-sr-only</i> to still support screen readers.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"p-formgroup-inline\\\"&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"firstname\\\" class=\\\"p-sr-only\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname\\\" type=\\\"text\\\" pInputText placeholder=\\\"Firstname\\\"&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"lastname\\\" class=\\\"p-sr-only\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname\\\" type=\\\"text\\\" pInputText placeholder=\\\"Lastname\\\"&gt; \\n    &lt;/div&gt;\\n    &lt;button pButton type=\\\"button\\\" label=\\\"Submit\\\"&gt;&lt;/button&gt;\\n&lt;/div&gt;\\n</code>\\n</pre> \\n                <h3>Checkbox and RadioButton</h3>\\n                <p>Checkbox and RadioButton have exclusive layout support via <i>.p-field-checkbox</i> and <i>.p-field-radiobutton</i> classes respectively.\\n                    Examples here demonstrates vertical and horizontal layout alternatives.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3&gt;Vertical Checkbox&lt;/h3&gt;\\n&lt;div class=\\\"p-field-checkbox\\\"&gt;\\n    &lt;p-checkbox name=\\\"city1\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"cities1\\\" inputId=\\\"city1\\\"&gt;&lt;/p-checkbox&gt;\\n    &lt;label for=\\\"city1\\\"&gt;Chicago&lt;/label&gt;\\n&lt;/div&gt;\\n&lt;div class=\\\"p-field-checkbox\\\"&gt;\\n    &lt;p-checkbox name=\\\"city2\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"cities1\\\" inputId=\\\"city2\\\"&gt;&lt;/p-checkbox&gt;\\n    &lt;label for=\\\"city2\\\"&gt;Los Angeles&lt;/label&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Horizontal Checkbox&lt;/h3&gt;\\n&lt;div class=\\\"p-formgroup-inline\\\"&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n        &lt;p-checkbox name=\\\"city3\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"cities2\\\" inputId=\\\"city3\\\"&gt;&lt;/p-checkbox&gt;\\n        &lt;label for=\\\"city3\\\"&gt;Chicago&lt;/label&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n        &lt;p-checkbox name=\\\"city4\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"cities2\\\" inputId=\\\"city4\\\"&gt;&lt;/p-checkbox&gt;\\n        &lt;label for=\\\"city4\\\"&gt;Los Angeles&lt;/label&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre> \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3&gt;Vertical RadioButton&lt;/h3&gt;\\n&lt;div class=\\\"p-field-radiobutton\\\"&gt;\\n    &lt;p-radioButton name=\\\"city5\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"city1\\\" inputId=\\\"city5\\\"&gt;&lt;/p-radioButton&gt;\\n    &lt;label for=\\\"city5\\\"&gt;Chicago&lt;/label&gt;\\n&lt;/div&gt;\\n&lt;div class=\\\"p-field-radiobutton\\\"&gt;\\n    &lt;p-radioButton name=\\\"city6\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"city1\\\" inputId=\\\"city6\\\"&gt;&lt;/p-radioButton&gt;\\n    &lt;label for=\\\"city6\\\"&gt;Los Angeles&lt;/label&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Horizontal RadioButton&lt;/h3&gt;\\n&lt;div class=\\\"p-formgroup-inline\\\"&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n    &lt;p-radioButton name=\\\"city7\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"city2\\\" inputId=\\\"city7\\\"&gt;&lt;/p-radioButton&gt;\\n    &lt;label for=\\\"city7\\\"&gt;Chicago&lt;/label&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n        &lt;p-radioButton name=\\\"city8\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"city2\\\" inputId=\\\"city8\\\"&gt;&lt;/p-radioButton&gt;\\n        &lt;label for=\\\"city8\\\"&gt;Los Angeles&lt;/label&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre> \\n\\n            <h3>Helper text</h3>\\n            <p>Helper text is an optional element defined with the <i>small</i> tag to display additional information about the input field.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"p-field ui-fluid\\\"&gt;\\n    &lt;label for=\\\"username\\\"&gt;Username&lt;/label&gt;\\n    &lt;input id=\\\"username\\\" type=\\\"username\\\" pInputText aria-describedby=\\\"username-help\\\"&gt; \\n    &lt;small id=\\\"username-help\\\"&gt;Enter your username to reset your password.&lt;/small&gt;\\n&lt;/div&gt;\\n</code>\\n</pre> \\n\\n            <h3>Advanced Forms</h3>\\n            <p>A responsive form with various input fields can easily be implemented using a combination of <i>.p-field</i>, <i>.p-formgrid</i> and <i>.p-fluid</i>.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"ui-fluid p-formgrid p-grid\\\"&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-6\\\"&gt;\\n        &lt;label for=\\\"firstname6\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname6\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-6\\\"&gt;\\n        &lt;label for=\\\"lastname6\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname6\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12\\\"&gt;\\n        &lt;label for=\\\"address\\\"&gt;Address&lt;/label&gt;\\n        &lt;textarea id=\\\"address\\\" type=\\\"text\\\" rows=\\\"4\\\" pInputTextarea&gt;&lt;/textarea&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-6\\\"&gt;\\n        &lt;label for=\\\"city\\\"&gt;City&lt;/label&gt;\\n        &lt;input id=\\\"city\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-3\\\"&gt;\\n        &lt;label for=\\\"state\\\"&gt;State&lt;/label&gt;\\n        &lt;p-dropdown inputId=\\\"state\\\" [options]=\\\"states\\\" [(ngModel)]=\\\"selectedState\\\" placeholder=\\\"Select\\\" optionLabel=\\\"name\\\"&gt;&lt;/p-dropdown&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-3\\\"&gt;\\n        &lt;label for=\\\"zip\\\"&gt;Zip&lt;/label&gt;\\n        &lt;input id=\\\"zip\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre> \\n            <h3>Customization</h3>\\n            <p>FormLayout comes with sensible defaults, in case these values need to be customized suggested way is building <a href=\\\"https://github.com/primefaces/primeflex/blob/master/primeflex.scss\\\">primeflex.scss</a> with your on variables.</p>\\n<div class=\\\"doc-tablewrapper\\\">\\n    <table class=\\\"doc-table\\\">\\n        <thead>\\n            <tr>\\n                <th>Variable</th>\\n                <th>Default</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr>\\n                <td>$fieldMargin</td>\\n                <td>1em</td>\\n            </tr>\\n            <tr>\\n                <td>$fieldLabelMargin</td>\\n                <td>.5em</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/fieldset\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-formlayout-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class FormLayoutDemo &#123;\\n    selectedState: any = null;\\n\\n    states: any[] = [\\n        &#123;name: 'Arizona', code: 'Arizona'&#125;,\\n        &#123;name: 'California', value: 'California'&#125;,\\n        &#123;name: 'Florida', code: 'Florida'&#125;,\\n        &#123;name: 'Ohio', code: 'Ohio'&#125;,\\n        &#123;name: 'Washington', code: 'Washington'&#125;\\n    ];\\n\\n    cities1: any[] = [];\\n    \\n    cities2: any[] = [];\\n    \\n    city1:any = null;\\n\\n    city2:any = null;\\n&#125;\\n</code>\\n</pre>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3&gt;Vertical&lt;/h3&gt;\\n&lt;div class=\\\"ui-fluid\\\"&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"firstname1\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname1\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"lastname1\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname1\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Vertical and Grid&lt;/h3&gt;\\n&lt;div class=\\\"ui-fluid p-formgrid p-grid\\\"&gt;\\n        &lt;div class=\\\"p-field p-col\\\"&gt;\\n        &lt;label for=\\\"firstname2\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname2\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col\\\"&gt;\\n        &lt;label for=\\\"lastname2\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname2\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Horizontal and Fixed Width&lt;/h3&gt;\\n&lt;div class=\\\"p-field p-grid\\\"&gt;\\n    &lt;label for=\\\"firstname3\\\" class=\\\"p-col-fixed\\\" style=\\\"width:100px\\\"&gt;Firstname&lt;/label&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n        &lt;input id=\\\"firstname3\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n&lt;div class=\\\"p-field p-grid\\\"&gt;\\n    &lt;label for=\\\"lastname3\\\" class=\\\"p-col-fixed\\\" style=\\\"width:100px\\\"&gt;Lastname&lt;/label&gt;\\n    &lt;div class=\\\"p-col\\\"&gt;\\n        &lt;input id=\\\"lastname3\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Horizontal and Fluid&lt;/h3&gt;\\n&lt;div class=\\\"ui-fluid\\\"&gt;\\n    &lt;div class=\\\"p-field p-grid\\\"&gt;\\n        &lt;label for=\\\"firstname4\\\" class=\\\"p-col-12 p-md-2\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;div class=\\\"p-col-12 p-md-10\\\"&gt;\\n            &lt;input id=\\\"firstname4\\\" type=\\\"text\\\" pInputText&gt; \\n        &lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-grid\\\"&gt;\\n        &lt;label for=\\\"lastname4\\\" class=\\\"p-col-12 p-md-2\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;div class=\\\"p-col-12 p-md-10\\\"&gt;\\n            &lt;input id=\\\"lastname4\\\" type=\\\"text\\\" pInputText&gt; \\n        &lt;/div&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Inline&lt;/h3&gt;\\n&lt;div class=\\\"p-formgroup-inline\\\"&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"firstname5\\\" class=\\\"p-sr-only\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname5\\\" type=\\\"text\\\" pInputText placeholder=\\\"Firstname\\\"&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field\\\"&gt;\\n        &lt;label for=\\\"lastname5\\\" class=\\\"p-sr-only\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname5\\\" type=\\\"text\\\" pInputText placeholder=\\\"Lastname\\\"&gt; \\n    &lt;/div&gt;\\n    &lt;button pButton type=\\\"button\\\" label=\\\"Submit\\\"&gt;&lt;/button&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Vertical Checkbox&lt;/h3&gt;\\n&lt;div class=\\\"p-field-checkbox\\\"&gt;\\n    &lt;p-checkbox name=\\\"city1\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"cities1\\\" inputId=\\\"city1\\\"&gt;&lt;/p-checkbox&gt;\\n    &lt;label for=\\\"city1\\\"&gt;Chicago&lt;/label&gt;\\n&lt;/div&gt;\\n&lt;div class=\\\"p-field-checkbox\\\"&gt;\\n    &lt;p-checkbox name=\\\"city2\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"cities1\\\" inputId=\\\"city2\\\"&gt;&lt;/p-checkbox&gt;\\n    &lt;label for=\\\"city2\\\"&gt;Los Angeles&lt;/label&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Horizontal Checkbox&lt;/h3&gt;\\n&lt;div class=\\\"p-formgroup-inline\\\"&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n        &lt;p-checkbox name=\\\"city3\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"cities2\\\" inputId=\\\"city3\\\"&gt;&lt;/p-checkbox&gt;\\n        &lt;label for=\\\"city3\\\"&gt;Chicago&lt;/label&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n        &lt;p-checkbox name=\\\"city4\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"cities2\\\" inputId=\\\"city4\\\"&gt;&lt;/p-checkbox&gt;\\n        &lt;label for=\\\"city4\\\"&gt;Los Angeles&lt;/label&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Vertical RadioButton&lt;/h3&gt;\\n&lt;div class=\\\"p-field-radiobutton\\\"&gt;\\n    &lt;p-radioButton name=\\\"city5\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"city1\\\" inputId=\\\"city5\\\"&gt;&lt;/p-radioButton&gt;\\n    &lt;label for=\\\"city5\\\"&gt;Chicago&lt;/label&gt;\\n&lt;/div&gt;\\n&lt;div class=\\\"p-field-radiobutton\\\"&gt;\\n    &lt;p-radioButton name=\\\"city6\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"city1\\\" inputId=\\\"city6\\\"&gt;&lt;/p-radioButton&gt;\\n    &lt;label for=\\\"city6\\\"&gt;Los Angeles&lt;/label&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Horizontal RadioButton&lt;/h3&gt;\\n&lt;div class=\\\"p-formgroup-inline\\\"&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n    &lt;p-radioButton name=\\\"city7\\\" value=\\\"Chicago\\\" [(ngModel)]=\\\"city2\\\" inputId=\\\"city7\\\"&gt;&lt;/p-radioButton&gt;\\n    &lt;label for=\\\"city7\\\"&gt;Chicago&lt;/label&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field-checkbox\\\"&gt;\\n        &lt;p-radioButton name=\\\"city8\\\" value=\\\"Los Angeles\\\" [(ngModel)]=\\\"city2\\\" inputId=\\\"city8\\\"&gt;&lt;/p-radioButton&gt;\\n        &lt;label for=\\\"city8\\\"&gt;Los Angeles&lt;/label&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Help Text&lt;/h3&gt;\\n&lt;div class=\\\"p-field ui-fluid\\\"&gt;\\n    &lt;label for=\\\"username\\\"&gt;Username&lt;/label&gt;\\n    &lt;input id=\\\"username\\\" type=\\\"username\\\" pInputText aria-describedby=\\\"username-help\\\"&gt; \\n    &lt;small id=\\\"username-help\\\"&gt;Enter your username to reset your password.&lt;/small&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Advanced&lt;/h3&gt;\\n&lt;div class=\\\"ui-fluid p-formgrid p-grid\\\"&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-6\\\"&gt;\\n        &lt;label for=\\\"firstname6\\\"&gt;Firstname&lt;/label&gt;\\n        &lt;input id=\\\"firstname6\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-6\\\"&gt;\\n        &lt;label for=\\\"lastname6\\\"&gt;Lastname&lt;/label&gt;\\n        &lt;input id=\\\"lastname6\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12\\\"&gt;\\n        &lt;label for=\\\"address\\\"&gt;Address&lt;/label&gt;\\n        &lt;textarea id=\\\"address\\\" type=\\\"text\\\" rows=\\\"4\\\" pInputTextarea&gt;&lt;/textarea&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-6\\\"&gt;\\n        &lt;label for=\\\"city\\\"&gt;City&lt;/label&gt;\\n        &lt;input id=\\\"city\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-3\\\"&gt;\\n        &lt;label for=\\\"state\\\"&gt;State&lt;/label&gt;\\n        &lt;p-dropdown inputId=\\\"state\\\" [options]=\\\"states\\\" [(ngModel)]=\\\"selectedState\\\" placeholder=\\\"Select\\\" optionLabel=\\\"name\\\"&gt;&lt;/p-dropdown&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"p-field p-col-12 p-md-3\\\"&gt;\\n        &lt;label for=\\\"zip\\\"&gt;Zip&lt;/label&gt;\\n        &lt;input id=\\\"zip\\\" type=\\\"text\\\" pInputText&gt; \\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-formlayout-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-checkbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'ui-chkbox ui-widget': true,'ui-chkbox-readonly': readonly}\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [ngClass]=\"{'ui-state-focus':focused}\" (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.required]=\"required\">\n            </div>\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Checkbox implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() binary: boolean;\n    \n    @Input() label: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n    \n    @Input() formControl: FormControl;\n    \n    @Input() checkboxIcon: string = 'pi pi-check';\n    \n    @Input() readonly: boolean;\n\n    @Input() required: boolean;\n\n    @ViewChild('cb') inputViewChild: ElementRef;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    model: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    focused: boolean = false;\n    \n    checked: boolean = false;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event,checkbox,focus:boolean) {\n        event.preventDefault();\n        \n        if (this.disabled || this.readonly) {\n            return;\n        }\n        \n        this.checked = !this.checked;\n        this.updateModel(event);\n        \n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    \n    updateModel(event) {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n\n            this.onModelChange(this.model);\n            \n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        \n        this.onChange.emit({checked:this.checked, originalEvent: event});\n    }\n    \n    handleChange(event) {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel(event);\n        }\n    }\n\n    isChecked(): boolean {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n\n    addValue() {\n        if (this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    \n    onFocus() {\n        this.focused = true;\n    }\n\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n     \n    writeValue(model: any) : void {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Checkbox],\n    declarations: [Checkbox]\n})\nexport class CheckboxModule { }\n","export * from './checkbox';","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {FormLayoutDemo} from './formlayoutdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: FormLayoutDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class FormLayoutDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {FormLayoutDemo} from './formlayoutdemo';\nimport {FormLayoutDemoRoutingModule} from './formlayout-routing.module';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {ButtonModule} from 'primeng/button';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormLayoutDemoRoutingModule,\n\t\tInputTextModule,\n\t\tCheckboxModule,\n\t\tButtonModule,\n        TabViewModule,\n\t\tCodeHighlighterModule,\n\t\tRadioButtonModule,\n\t\tInputTextareaModule,\n\t\tDropdownModule,\n\t\tFormsModule\n\t],\n\tdeclarations: [\n\t\tFormLayoutDemo\n\t]\n})\nexport class FormLayoutDemoModule {}\n","export default \"@media screen and (max-width: 489px) {\\n  .p-formgroup-inline .p-field {\\n    margin-bottom: 1em !important;\\n  }\\n}\\n.layout-content .content-section.implementation > h3 {\\n  font-weight: 600;\\n}\\ntextarea {\\n  resize: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvd2Nhc2UvY29tcG9uZW50cy9mb3JtbGF5b3V0L0U6XFxQcm9qZWN0c1xcUHJpbWVOR3Y5LTEtMy9zcmNcXGFwcFxcc2hvd2Nhc2VcXGNvbXBvbmVudHNcXGZvcm1sYXlvdXRcXGZvcm1sYXlvdXRkZW1vLnNjc3MiLCJzcmMvYXBwL3Nob3djYXNlL2NvbXBvbmVudHMvZm9ybWxheW91dC9mb3JtbGF5b3V0ZGVtby5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVE7SUFDSSw2QkFBQTtFQ0FWO0FBQ0Y7QURJQTtFQUNJLGdCQUFBO0FDRko7QURLQTtFQUNJLFlBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3Nob3djYXNlL2NvbXBvbmVudHMvZm9ybWxheW91dC9mb3JtbGF5b3V0ZGVtby5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDg5cHgpIHtcbiAgICAucC1mb3JtZ3JvdXAtaW5saW5lIHtcbiAgICAgICAgLnAtZmllbGQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5sYXlvdXQtY29udGVudCAuY29udGVudC1zZWN0aW9uLmltcGxlbWVudGF0aW9uID4gaDMge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbnRleHRhcmVhIHtcbiAgICByZXNpemU6IG5vbmU7XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDg5cHgpIHtcbiAgLnAtZm9ybWdyb3VwLWlubGluZSAucC1maWVsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5sYXlvdXQtY29udGVudCAuY29udGVudC1zZWN0aW9uLmltcGxlbWVudGF0aW9uID4gaDMge1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogbm9uZTtcbn0iXX0= */\";","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './formlayoutdemo.html',\n    styleUrls: ['./formlayoutdemo.scss']\n})\nexport class FormLayoutDemo {\n    selectedState: any = null;\n\n    states: any[] = [\n        {name: 'Arizona', code: 'Arizona'},\n        {name: 'California', value: 'California'},\n        {name: 'Florida', code: 'Florida'},\n        {name: 'Ohio', code: 'Ohio'},\n        {name: 'Washington', code: 'Washington'}\n    ];\n\n    cities1: any[] = [];\n    \n    cities2: any[] = [];\n    \n    city1:any = null;\n\n    city2:any = null;\n}"]}