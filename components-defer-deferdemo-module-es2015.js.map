{"version":3,"sources":["./src/app/showcase/components/defer/deferdemo.html","./src/app/showcase/components/defer/deferdemo-routing.module.ts","./src/app/showcase/components/defer/deferdemo.module.ts","./src/app/showcase/components/defer/deferdemo.ts"],"names":[],"mappings":"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","file":"components-defer-deferdemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Defer</span>\\n        <span>Defer directive postpones the loading the content that is initially not in viewport until it becomes visible on scroll. Think of\\n        pDefer as a smart ngIf that lazily loads content when it becomes visible after page scroll. Scroll down to load the Table\\n        which initiates a query that is not executed on initial page load to speed up load performance.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <div style=\\\"height:800px\\\">\\n        Table is not loaded yet, scroll down to initialize it.\\n    </div>\\n\\n    <p-toast></p-toast>\\n\\n    <div pDefer (onLoad)=\\\"initData()\\\">\\n        <ng-template>\\n            <p-table [value]=\\\"cars\\\">\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th>Vin</th>\\n                        <th>Year</th>\\n                        <th>Brand</th>\\n                        <th>Color</th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-car>\\n                    <tr>\\n                        <td>{{car.vin}}</td>\\n                        <td>{{car.year}}</td>\\n                        <td>{{car.brand}}</td>\\n                        <td>{{car.color}}</td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n        </ng-template>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n                    <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;DeferModule&#125; from 'primeng/defer';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Defer is applied to a container element with pDefer directive where content needs to be placed inside an ng-template.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div pDefer&gt;\\n    &lt;ng-template&gt;\\n       deferred content\\n   &lt;/ng-template&gt;\\n&lt;/div&gt;\\n</code>\\n</pre>\\n\\n            <h3>Callback</h3>\\n            <p>onLoad callback is useful to initialize the content when it becomes visible on scroll such as loading data.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div pDefer (onLoad)=\\\"initData()\\\"&gt;\\n    &lt;ng-template&gt;\\n        &lt;p-table [value]=\\\"cars\\\"&gt;\\n        &lt;ng-template pTemplate=\\\"header\\\"&gt;\\n            &lt;tr&gt;\\n                &lt;th&gt;Vin&lt;/th&gt;\\n                &lt;th&gt;Year&lt;/th&gt;\\n                &lt;th&gt;Brand&lt;/th&gt;\\n                &lt;th&gt;Color&lt;/th&gt;\\n            &lt;/tr&gt;\\n        &lt;/ng-template&gt;\\n        &lt;ng-template pTemplate=\\\"body\\\" let-car&gt;\\n            &lt;tr&gt;\\n                &lt;td&gt;&#123;&#123;car.vin&#125;&#125;&lt;/td&gt;\\n                &lt;td&gt;&#123;&#123;car.year&#125;&#125;&lt;/td&gt;\\n                &lt;td&gt;&#123;&#123;car.brand&#125;&#125;&lt;/td&gt;\\n                &lt;td&gt;&#123;&#123;car.color&#125;&#125;&lt;/td&gt;\\n            &lt;/tr&gt;\\n        &lt;/ng-template&gt;\\n    &lt;/p-table&gt;\\n    &lt;/ng-template&gt;\\n&lt;/div&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nthis.cars = //initialize\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <p>Directive has no attributes.</p>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onLoad</td>\\n                            <td>-</td>\\n                            <td>Callback to invoke when deferred content is loaded.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Directive does not apply any styling to host.</p>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/defer\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-defer-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div pDefer (onLoad)=\\\"initData()\\\"&gt;\\n    &lt;ng-template&gt;\\n        &lt;p-table [value]=\\\"cars\\\"&gt;\\n            &lt;ng-template pTemplate=\\\"header\\\"&gt;\\n                &lt;tr&gt;\\n                    &lt;th&gt;Vin&lt;/th&gt;\\n                    &lt;th&gt;Year&lt;/th&gt;\\n                    &lt;th&gt;Brand&lt;/th&gt;\\n                    &lt;th&gt;Color&lt;/th&gt;\\n                &lt;/tr&gt;\\n            &lt;/ng-template&gt;\\n            &lt;ng-template pTemplate=\\\"body\\\" let-car&gt;\\n                &lt;tr&gt;\\n                    &lt;td&gt;&#123;&#123;car.vin&#125;&#125;&lt;/td&gt;\\n                    &lt;td&gt;&#123;&#123;car.year&#125;&#125;&lt;/td&gt;\\n                    &lt;td&gt;&#123;&#123;car.brand&#125;&#125;&lt;/td&gt;\\n                    &lt;td&gt;&#123;&#123;car.color&#125;&#125;&lt;/td&gt;\\n                &lt;/tr&gt;\\n            &lt;/ng-template&gt;\\n        &lt;/p-table&gt;\\n    &lt;/ng-template&gt;\\n&lt;/div&gt;\\n</code>\\n</pre>\\n\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class DeferDemo &#123;\\n\\n    cars: Car[];\\n\\n    constructor(private carService: CarService, private messageService: MessageService)  &#123;&#125;\\n\\n    initData()  &#123;\\n        this.messageService.add(&#123;severity:'success', summary:'Data Initialized', detail:'Render Completed'&#125;);\\n        this.carService.getCarsSmall().then(cars => this.cars = cars);\\n     &#125;\\n &#125;\\n</code>\\n</pre>\\n\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-defer-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n     </p-tabView>\\n</div>\\n\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {DeferDemo} from './deferdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: DeferDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class DeferDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DeferDemo} from './deferdemo';\nimport {DeferDemoRoutingModule} from './deferdemo-routing.module';\nimport {DeferModule} from 'primeng/defer';\nimport {TableModule} from 'primeng/table';\nimport {ToastModule} from 'primeng/toast';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tDeferDemoRoutingModule,\n        DeferModule,\n        ToastModule,\n        TabViewModule,\n        TableModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tDeferDemo\n\t]\n})\nexport class DeferDemoModule {}\n","import {Component} from '@angular/core';\nimport {Car} from '../../components/domain/car';\nimport {CarService} from '../../service/carservice';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n    templateUrl: './deferdemo.html',\n    providers: [MessageService]\n})\nexport class DeferDemo {\n\n    cars: Car[];\n    \n    constructor(private carService: CarService, private messageService: MessageService) {}\n    \n    initData() {\n        this.messageService.add({severity:'success', summary:'Data Initialized', detail:'Render Completed'});\n        this.carService.getCarsSmall().then(cars => this.cars = cars);\n    }\n}\n"],"sourceRoot":"webpack:///"}