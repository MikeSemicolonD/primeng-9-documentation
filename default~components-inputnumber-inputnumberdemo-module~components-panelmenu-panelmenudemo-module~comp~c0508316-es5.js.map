{"version":3,"sources":["webpack:///src/app/components/panelmenu/panelmenu.ts","webpack:///src/app/components/panelmenu/public_api.ts"],"names":["BasePanelMenuItem","ref","handleClick","event","item","disabled","preventDefault","expanded","detectChanges","url","command","originalEvent","PanelMenuSub","selector","template","animations","height","params","PanelMenu","multiple","transitionOptions","collapseAll","model","modelItem","animating","onToggleDone","changeDetection","Default","PanelMenuModule","imports","exports","declarations"],"mappings":"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","file":"default~components-inputnumber-inputnumberdemo-module~components-panelmenu-panelmenudemo-module~comp~c0508316-es5.js","sourcesContent":["import {NgModule,Component,Input,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\nexport class BasePanelMenuItem {\n\n    constructor(private ref: ChangeDetectorRef) {}\n        \n    handleClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        item.expanded = !item.expanded;\n        this.ref.detectChanges();\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n                   \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n}\n\n@Component({\n    selector: 'p-panelMenuSub',\n    template: `\n        <ul class=\"ui-submenu-list\" [@submenu]=\"expanded ? {value: 'visible', params: {transitionParams: transitionOptions, height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" role=\"tree\">\n            <ng-template ngFor let-child [ngForOf]=\"item.items\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"child.styleClass\" [class.ui-helper-hidden]=\"child.visible === false\" [ngStyle]=\"child.style\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'ui-state-disabled':child.disabled, 'ui-state-active': child.expanded}\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <p-panelMenuSub [item]=\"child\" [expanded]=\"child.expanded\" [transitionOptions]=\"transitionOptions\" *ngIf=\"child.items\"></p-panelMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    `,\n    animations: [\n        trigger('submenu', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ]\n})\nexport class PanelMenuSub extends BasePanelMenuItem {\n    \n    @Input() item: MenuItem;\n    \n    @Input() expanded: boolean;\n\n    @Input() transitionOptions: string;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n}\n\n@Component({\n    selector: 'p-panelMenu',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-panelmenu ui-widget'\">\n            <ng-container *ngFor=\"let item of model;let f=first;let l=last;\">\n                <div class=\"ui-panelmenu-panel\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\">\n                    <div [ngClass]=\"{'ui-widget ui-panelmenu-header ui-state-default':true,'ui-corner-top':f,'ui-corner-bottom':l&&!item.expanded,\n                    'ui-state-active':item.expanded,'ui-state-disabled':item.disabled}\" [class]=\"item.styleClass\" [ngStyle]=\"item.style\">\n                        <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" (click)=\"handleClick($event,item)\" [attr.tabindex]=\"item.disabled ? null : '0'\" [attr.id]=\"item.id\"\n                           [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.aria-expanded]=\"item.expanded\" [attr.id]=\"item.id + '_header'\" [attr.aria-controls]=\"item.id +'_content'\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n                           (click)=\"handleClick($event,item)\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.disabled ? null : '0'\"\n                           [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                    </div>\n                    <div *ngIf=\"item.items\" class=\"ui-panelmenu-content-wrapper\" [@rootItem]=\"item.expanded ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\"  (@rootItem.done)=\"onToggleDone()\"\n                         [ngClass]=\"{'ui-panelmenu-content-wrapper-overflown': !item.expanded||animating}\">\n                        <div class=\"ui-panelmenu-content ui-widget-content\" role=\"region\" [attr.id]=\"item.id +'_content' \" [attr.aria-labelledby]=\"item.id +'_header'\">\n                            <p-panelMenuSub [item]=\"item\" [expanded]=\"true\" [transitionOptions]=\"transitionOptions\" class=\"ui-panelmenu-root-submenu\"></p-panelMenuSub>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    animations: [\n        trigger('rootItem', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class PanelMenu extends BasePanelMenuItem {\n    \n    @Input() model: MenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() multiple: boolean = true;\n\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    \n    public animating: boolean;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n                \n    collapseAll() {\n    \tfor(let item of this.model) {\n    \t\tif (item.expanded) {\n    \t\t\titem.expanded = false;\n    \t\t}\n    \t}\n    }\n\n    handleClick(event, item) {\n    \tif (!this.multiple) {\n            for(let modelItem of this.model) {\n        \t\tif (item !== modelItem && modelItem.expanded) {\n        \t\t\tmodelItem.expanded = false;\n        \t\t}\n        \t}\n    \t}\n        \n        this.animating = true;\n        super.handleClick(event, item);\n    }\n    \n    onToggleDone() {\n        this.animating = false;\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [PanelMenu,RouterModule],\n    declarations: [PanelMenu,PanelMenuSub]\n})\nexport class PanelMenuModule { }\n","export * from './panelmenu';"]}