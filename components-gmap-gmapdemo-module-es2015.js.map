{"version":3,"sources":["./src/app/showcase/components/gmap/gmapdemo.html","./src/app/components/checkbox/checkbox.ts","./src/app/components/checkbox/public_api.ts","./src/app/showcase/components/gmap/gmapdemo-routing.module.ts","./src/app/showcase/components/gmap/gmapdemo.module.ts","./src/app/showcase/components/gmap/gmapdemo.ts"],"names":[],"mappings":"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","file":"components-gmap-gmapdemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">GMap</span>\\n        <span>GMap component provides integration with Google Maps API. This sample demontrates\\n        various uses cases like binding, overlays and events. Click the map to add a new item.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-toast></p-toast>\\n\\n    <p-gmap #gmap [style]=\\\"{'width':'100%','height':'320px', 'margin-bottom': '1em'}\\\" [options]=\\\"options\\\" [overlays]=\\\"overlays\\\"\\n       (onMapClick)=\\\"handleMapClick($event)\\\" (onOverlayClick)=\\\"handleOverlayClick($event)\\\" (onOverlayDragEnd)=\\\"handleDragEnd($event)\\\"></p-gmap>\\n\\n    <button type=\\\"button\\\" pButton label=\\\"Clear\\\" icon=\\\"pi pi-times\\\" (click)=\\\"clear()\\\" style=\\\"margin-right:.25em\\\"></button>\\n    <button type=\\\"button\\\" pButton label=\\\"Zoom In\\\" icon=\\\"pi pi-plus\\\" (click)=\\\"zoomIn(gmap.getMap())\\\" style=\\\"margin-right:.25em\\\"></button>\\n    <button type=\\\"button\\\" pButton label=\\\"Zoom Out\\\" icon=\\\"pi pi-minus\\\" (click)=\\\"zoomOut(gmap.getMap())\\\"></button>\\n\\n    <p-dialog showEffect=\\\"fade\\\" [(visible)]=\\\"dialogVisible\\\" header=\\\"New Location\\\" [style]=\\\"{width: '300px'}\\\">\\n        <div class=\\\"p-grid ui-fluid\\\" *ngIf=\\\"selectedPosition\\\">\\n            <div class=\\\"p-col-2\\\"><label for=\\\"title\\\">Label</label></div>\\n            <div class=\\\"p-col-10\\\"><input type=\\\"text\\\" pInputText id=\\\"title\\\" [(ngModel)]=\\\"markerTitle\\\"></div>\\n\\n            <div class=\\\"p-col-2\\\"><label for=\\\"lat\\\">Lat</label></div>\\n            <div class=\\\"p-col-10\\\"><input id=\\\"lat\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lat()\\\"></div>\\n\\n            <div class=\\\"p-col-2\\\"><label for=\\\"lng\\\">Lng</label></div>\\n            <div class=\\\"p-col-10\\\"><input id=\\\"lng\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lng()\\\"></div>\\n\\n            <div class=\\\"p-col-2\\\"><label for=\\\"drg\\\">Drag</label></div>\\n            <div class=\\\"p-col-10\\\"><p-checkbox [(ngModel)]=\\\"draggable\\\" binary=\\\"true\\\" [style]=\\\"{'margin-top':'.25em'}\\\"></p-checkbox></div>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton label=\\\"Add Marker\\\" icon=\\\"pi pi-plus\\\" (click)=\\\"addMarker()\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;GMapModule&#125; from 'primeng/gmap';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>A map is initialized with options and dimensions. Refer to the google maps api for the list of available options.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap [options]=\\\"options\\\" [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\" &gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n\\n    overlays: any[];\\n\\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n    &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Overlays</h3>\\n            <p>GMap can display any type of overlay such as markers, polygons and circles. Overlay instances are bound using the overlays property array. Overlays are aware\\n            of one-way binding so whenever the array changes, gmap updates itself.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\" &gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n\\n    overlays: any[];\\n\\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n\\n        this.overlays = [\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n            new google.maps.Polygon(&#123;paths: [\\n                &#123;lat: 36.9177, lng: 30.7854&#125;,&#123;lat: 36.8851, lng: 30.7802&#125;,&#123;lat: 36.8829, lng: 30.8111&#125;,&#123;lat: 36.9177, lng: 30.8159&#125;\\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\\n            &#125;),\\n            new google.maps.Circle(&#123;center: &#123;lat: 36.90707, lng: 30.56533&#125;, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500&#125;),\\n            new google.maps.Polyline(&#123;path: [&#123;lat: 36.86149, lng: 30.63743&#125;,&#123;lat: 36.86341, lng: 30.72463&#125;], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2&#125;)\\n        ];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Events</h3>\\n            <p>GMap provides common callbacks to hook into events including map click, overlay click and overlay dragging.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\"\\n            (onMapClick)=\\\"handleMapClick($event)\\\" (onOverlayClick)=\\\"handleOverlayClick($event)\\\"&gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n\\n    overlays: any[];\\n\\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n\\n        this.overlays = [\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n            new google.maps.Polygon(&#123;paths: [\\n                &#123;lat: 36.9177, lng: 30.7854&#125;,&#123;lat: 36.8851, lng: 30.7802&#125;,&#123;lat: 36.8829, lng: 30.8111&#125;,&#123;lat: 36.9177, lng: 30.8159&#125;\\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\\n            &#125;),\\n            new google.maps.Circle(&#123;center: &#123;lat: 36.90707, lng: 30.56533&#125;, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500&#125;),\\n            new google.maps.Polyline(&#123;path: [&#123;lat: 36.86149, lng: 30.63743&#125;,&#123;lat: 36.86341, lng: 30.72463&#125;], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2&#125;)\\n        ];\\n    &#125;\\n\\n    handleMapClick(event) &#123;\\n        //event: MouseEvent of Google Maps api\\n    &#125;\\n\\n    handleOverlayClick(event) &#123;\\n        //event.originalEvent: MouseEvent of Google Maps api\\n        //event.overlay: Clicked overlay\\n        //event.map: Map instance\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Google Maps API</h3>\\n            <p>In case you need to access the map instance directly, use the getMap() method.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap #gmap [options]=\\\"options\\\"&gt;&lt;/p-gmap&gt;\\n\\n&lt;button type=\\\"button\\\" pButton label=\\\"Zoom In\\\" icon=\\\"pi-search-plus\\\" (click)=\\\"zoomIn(gmap.getMap())\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n\\n    overlays: any[];\\n\\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n    &#125;\\n\\n    zoomIn(map) &#123;\\n        map.setZoom(map.getZoom()+1);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n            <p>Another option is to to get the map object directly after init via (onMapReady) event.\\n               In the example below, google.maps.Map is used for adjusting map bounds to markers.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap #gmap [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" [style]=\\\"mapStyle\\\"\\n    (onMapReady)=\\\"setMap($event)\\\"&gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n            <p>Then from your component you would write</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n\\n    overlays: any[];\\n\\n    map: google.maps.Map;\\n\\n    setMap(event) &#123;\\n        this.map = event.map;\\n    &#125;\\n\\n    ngOnInit() &#123;\\n        let bounds = new google.maps.LatLngBounds();\\n        this.overlays = [\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n        ]\\n        // ... extend bounds\\n        this.overlays.forEach(marker => &#123;\\n            bounds.extend(marker.getPosition());\\n        &#125;);\\n\\n        setTimeout(()=> &#123; // map will need some time to load\\n            this.map.fitBounds(bounds); // Map object used directly\\n        &#125;, 1000);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Type</th>\\n                        <th>Default</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>options</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Google Maps API configuration object.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>overlays</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>An array of overlays to display.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onMapClick</td>\\n                            <td>event: Google Maps MouseEvent</td>\\n                            <td>Callback to invoke when map is clicked except markers.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onMapDragEnd</td>\\n                            <td>originalEvent: Google Maps dragend<br></td>\\n                            <td>Callback to invoke when map drag (i.e. pan) has ended.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onMapReady</td>\\n                            <td>event.map: Google Maps Instance</td>\\n                            <td>Callback to invoke when the map is ready to be used.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayClick</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay is clicked.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayDblClick</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay is double clicked.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayDrag</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay is being dragged.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayDragEnd</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay drag ends.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayDragStart</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay drag starts.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onZoomChanged</td>\\n                            <td>originalEvent: Google Maps zoom_changed</td>\\n                            <td>Callback to invoke when zoom level has changed.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>Google Maps API.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/gmap\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\n\\n&lt;p-gmap #gmap [style]=\\\"&#123;'width':'100%','height':'320px', 'margin-bottom': '1em'&#125;\\\" [options]=\\\"options\\\" [overlays]=\\\"overlays\\\"\\n       (onMapClick)=\\\"handleMapClick($event)\\\" (onOverlayClick)=\\\"handleOverlayClick($event)\\\" (onOverlayDragEnd)=\\\"handleDragEnd($event)\\\"&gt;&lt;/p-gmap&gt;\\n\\n&lt;button type=\\\"button\\\" pButton label=\\\"Clear\\\" icon=\\\"pi pi-times\\\" (click)=\\\"clear()\\\" style=\\\"margin-right:.25em\\\"&gt;&lt;/button&gt;\\n&lt;button type=\\\"button\\\" pButton label=\\\"Zoom In\\\" icon=\\\"pi pi-plus\\\" (click)=\\\"zoomIn(gmap.getMap())\\\" style=\\\"margin-right:.25em\\\"&gt;&lt;/button&gt;\\n&lt;button type=\\\"button\\\" pButton label=\\\"Zoom Out\\\" icon=\\\"pi pi-minus\\\" (click)=\\\"zoomOut(gmap.getMap())\\\"&gt;&lt;/button&gt;\\n\\n&lt;p-dialog showEffect=\\\"fade\\\" [(visible)]=\\\"dialogVisible\\\" header=\\\"New Location\\\" [style]=\\\"&#123;width: '300px'&#125;\\\">&gt;\\n    &lt;div class=\\\"p-grid ui-fluid\\\" *ngIf=\\\"selectedPosition\\\"&gt;\\n        &lt;div class=\\\"p-col-2\\\"&gt;&lt;label for=\\\"title\\\"&gt;Label&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"p-col-10\\\"&gt;&lt;input type=\\\"text\\\" pInputText id=\\\"title\\\" [(ngModel)]=\\\"markerTitle\\\"&gt;&lt;/div&gt;\\n\\n        &lt;div class=\\\"p-col-2\\\"&gt;&lt;label for=\\\"lat\\\"&gt;Lat&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"p-col-10\\\"&gt;&lt;input id=\\\"lat\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lat()\\\"&gt;&lt;/div&gt;\\n\\n        &lt;div class=\\\"p-col-2\\\"&gt;&lt;label for=\\\"lng\\\"&gt;Lng&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"p-col-10\\\"&gt;&lt;input id=\\\"lng\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lng()\\\"&gt;&lt;/div&gt;\\n\\n        &lt;div class=\\\"p-col-2\\\"&gt;&lt;label for=\\\"drg\\\"&gt;Drag&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"p-col-10\\\"&gt;&lt;p-checkbox [(ngModel)]=\\\"draggable\\\" binary=\\\"true\\\" [style]=\\\"&#123;'margin-top':'.25em'&#125;\\\"&gt;&lt;/p-checkbox&gt;&lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;p-footer&gt;\\n        &lt;div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\"&gt;\\n            &lt;button type=\\\"button\\\" pButton label=\\\"Add Marker\\\" icon=\\\"pi-plus\\\" (click)=\\\"addMarker()\\\"&gt;&lt;/button&gt;\\n        &lt;/div&gt;\\n    &lt;/p-footer&gt;\\n&lt;/p-dialog&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class GMapDemo implements OnInit &#123;\\n\\n    options: any;\\n\\n    overlays: any[];\\n\\n    dialogVisible: boolean;\\n\\n    markerTitle: string;\\n\\n    selectedPosition: any;\\n\\n    infoWindow: any;\\n\\n    draggable: boolean;\\n\\n    constructor(private messageService: MessageService) &#123;&#125;\\n\\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n\\n        this.initOverlays();\\n\\n        this.infoWindow = new google.maps.InfoWindow();\\n    &#125;\\n\\n    handleMapClick(event) &#123;\\n        this.dialogVisible = true;\\n        this.selectedPosition = event.latLng;\\n    &#125;\\n\\n    handleOverlayClick(event) &#123;\\n        let isMarker = event.overlay.getTitle != undefined;\\n\\n        if (isMarker) &#123;\\n            let title = event.overlay.getTitle();\\n            this.infoWindow.setContent('<div>' + title + '</div>');\\n            this.infoWindow.open(event.map, event.overlay);\\n            event.map.setCenter(event.overlay.getPosition());\\n\\n            this.messageService.add(&#123;severity:'info', summary:'Marker Selected', detail: title&#125;);\\n        &#125;\\n        else &#123;\\n            this.messageService.add(&#123;severity:'info', summary:'Shape Selected', detail: ''&#125;);\\n        &#125;\\n    &#125;\\n\\n    addMarker() &#123;\\n        this.overlays.push(new google.maps.Marker(&#123;position:&#123;lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()&#125;, title:this.markerTitle, draggable: this.draggable&#125;));\\n        this.markerTitle = null;\\n        this.dialogVisible = false;\\n    &#125;\\n\\n    handleDragEnd(event) &#123;\\n        this.messageService.add(&#123;severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()&#125;);\\n    &#125;\\n\\n    initOverlays() &#123;\\n        if (!this.overlays||!this.overlays.length) &#123;\\n            this.overlays = [\\n                new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n                new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n                new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n                new google.maps.Polygon(&#123;paths: [\\n                    &#123;lat: 36.9177, lng: 30.7854&#125;,&#123;lat: 36.8851, lng: 30.7802&#125;,&#123;lat: 36.8829, lng: 30.8111&#125;,&#123;lat: 36.9177, lng: 30.8159&#125;\\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\\n                &#125;),\\n                new google.maps.Circle(&#123;center: &#123;lat: 36.90707, lng: 30.56533&#125;, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500&#125;),\\n                new google.maps.Polyline(&#123;path: [&#123;lat: 36.86149, lng: 30.63743&#125;,&#123;lat: 36.86341, lng: 30.72463&#125;], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2&#125;)\\n            ];\\n        &#125;\\n    &#125;\\n\\n    zoomIn(map) &#123;\\n        map.setZoom(map.getZoom()+1);\\n    &#125;\\n\\n    zoomOut(map) &#123;\\n        map.setZoom(map.getZoom()-1);\\n    &#125;\\n\\n    clear() &#123;\\n        this.overlays = [];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-checkbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'ui-chkbox ui-widget': true,'ui-chkbox-readonly': readonly}\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [ngClass]=\"{'ui-state-focus':focused}\" (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.required]=\"required\">\n            </div>\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Checkbox implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() binary: boolean;\n    \n    @Input() label: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n    \n    @Input() formControl: FormControl;\n    \n    @Input() checkboxIcon: string = 'pi pi-check';\n    \n    @Input() readonly: boolean;\n\n    @Input() required: boolean;\n\n    @ViewChild('cb') inputViewChild: ElementRef;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    model: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    focused: boolean = false;\n    \n    checked: boolean = false;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event,checkbox,focus:boolean) {\n        event.preventDefault();\n        \n        if (this.disabled || this.readonly) {\n            return;\n        }\n        \n        this.checked = !this.checked;\n        this.updateModel(event);\n        \n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    \n    updateModel(event) {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n\n            this.onModelChange(this.model);\n            \n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        \n        this.onChange.emit({checked:this.checked, originalEvent: event});\n    }\n    \n    handleChange(event) {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel(event);\n        }\n    }\n\n    isChecked(): boolean {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n\n    addValue() {\n        if (this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    \n    onFocus() {\n        this.focused = true;\n    }\n\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n     \n    writeValue(model: any) : void {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Checkbox],\n    declarations: [Checkbox]\n})\nexport class CheckboxModule { }\n","export * from './checkbox';","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {GMapDemo} from './gmapdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: GMapDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class GMapDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {GMapDemo} from './gmapdemo';\nimport {GMapDemoRoutingModule} from './gmapdemo-routing.module';\nimport {GMapModule} from 'primeng/gmap';\nimport {ToastModule} from 'primeng/toast';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {DialogModule} from 'primeng/dialog';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {ButtonModule} from 'primeng/button';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tGMapDemoRoutingModule,\n        GMapModule,\n        ToastModule,\n        InputTextModule,\n        CheckboxModule,\n        DialogModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tGMapDemo\n\t]\n})\nexport class GMapDemoModule {}\n","import {Component,OnInit} from '@angular/core';\nimport {MessageService} from 'primeng/api';\n\ndeclare var google: any;\n\n@Component({\n    templateUrl: './gmapdemo.html',\n    providers: [MessageService],\n    styles: [`\n        .p-col-2 {\n            display: flex;\n            align-self: center;\n        }\n    `]\n})\nexport class GMapDemo implements OnInit {\n    \n    options: any;\n    \n    overlays: any[];\n    \n    dialogVisible: boolean;\n    \n    markerTitle: string;\n    \n    selectedPosition: any;\n    \n    infoWindow: any;\n    \n    draggable: boolean;\n    \n    constructor(private messageService: MessageService) {}\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n        \n        this.initOverlays();\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n    \n    handleMapClick(event) {\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n    }\n    \n    handleOverlayClick(event) {\n        let isMarker = event.overlay.getTitle != undefined;\n        \n        if (isMarker) {\n            let title = event.overlay.getTitle();\n            this.infoWindow.setContent('<div>' + title + '</div>');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n            \n            this.messageService.add({severity:'info', summary:'Marker Selected', detail: title});\n        }\n        else {\n            this.messageService.add({severity:'info', summary:'Shape Selected', detail: ''});\n        }\n    }\n    \n    addMarker() {\n        this.overlays.push(new google.maps.Marker({position:{lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()}, title:this.markerTitle, draggable: this.draggable}));\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    }\n    \n    handleDragEnd(event) {\n        this.messageService.add({severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()});\n    }\n    \n    initOverlays() {\n        if (!this.overlays||!this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n                new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n                new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n                new google.maps.Polygon({paths: [\n                    {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n                }),\n                new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n                new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n            ];\n        }\n    }\n    \n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n    \n    zoomOut(map) {\n        map.setZoom(map.getZoom()-1);\n    }\n    \n    clear() {\n        this.overlays = [];\n    }\n}\n"],"sourceRoot":"webpack:///"}