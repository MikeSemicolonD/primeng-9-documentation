{"version":3,"sources":["webpack:///src/app/showcase/components/terminal/terminaldemo.html","webpack:///src/app/showcase/components/terminal/terminaldemo-routing.module.ts","webpack:///src/app/showcase/components/terminal/terminaldemo.module.ts","webpack:///src/app/showcase/components/terminal/terminaldemo.ts"],"names":["TerminalDemoRoutingModule","imports","forChild","path","component","exports","TerminalDemoModule","declarations","TerminalDemo","terminalService","subscription","commandHandler","subscribe","command","response","Date","toDateString","sendResponse","ngOnDestroy","unsubscribe","template","providers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaA,yBAAyB;AAAA;AAAA,MAAtC;;AAAaA,6BAAyB,6DAVrC,+DAAS;AACTC,aAAO,EAAE,CACR,6DAAaC,QAAb,CAAsB,CACrB;AAACC,YAAI,EAAC,EAAN;AAASC,iBAAS,EAAE;AAApB,OADqB,CAAtB,CADQ,CADA;AAMTC,aAAO,EAAE,CACR,4DADQ;AANA,KAAT,CAUqC,GAAzBL,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAaM,kBAAkB;AAAA;AAAA,MAA/B;;AAAaA,sBAAkB,6DAZ9B,+DAAS;AACTL,aAAO,EAAE,CACR,4DADQ,EAER,sFAFQ,EAGF,+DAHE,EAIF,6DAJE,EAKF,6EALE,CADA;AAQTM,kBAAY,EAAE,CACb,0DADa;AARL,KAAT,CAY8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZb,QAAaE,YAAY;AAIrB,4BAAoBC,eAApB,EAAsD;AAAA;;AAAA;;AAAlC,aAAAA,eAAA,GAAAA,eAAA;AAChB,aAAKC,YAAL,GAAoB,KAAKD,eAAL,CAAqBE,cAArB,CAAoCC,SAApC,CAA8C,UAAAC,OAAO,EAAI;AACzE,cAAIC,QAAQ,GAAID,OAAO,KAAK,MAAb,GAAuB,IAAIE,IAAJ,GAAWC,YAAX,EAAvB,GAAmD,sBAAsBH,OAAxF;;AACA,eAAI,CAACJ,eAAL,CAAqBQ,YAArB,CAAkCH,QAAlC;AACH,SAHmB,CAApB;AAIH;;AAToB;AAAA;AAAA,eAWrB,SAAAI,WAAW,GAAG;AACV,cAAI,KAAKR,YAAT,EAAuB;AACnB,iBAAKA,YAAL,CAAkBS,WAAlB;AACH;AACJ;AAfoB;AAAA,OAAzB;;;;cAIyC;;;;AAJ5BX,gBAAY,6DAJxB,gEAAU;AACPY,cAAQ,EAAR;AAAA;AAAA,mHADO;AAEPC,eAAS,EAAE,CAAC,oFAAD;AAFJ,KAAV,CAIwB,E,+EAIgB,oF,EAJhB,GAAZb,YAAY,CAAZ","file":"components-terminal-terminaldemo-module-es5.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Terminal</span>\\n        <span>Terminal is a text based user interface. Enter \\\"date\\\" to display the current date.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-terminal welcomeMessage=\\\"Welcome to PrimeNG\\\" prompt=\\\"primeng $\\\"></p-terminal>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;TerminalModule&#125; from 'primeng/terminal';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Commands are processed using observables via the TerminalService. Import this service into your component and subscribe\\n            to commandHandler to process commands by sending replies with sendResponse function.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;Component&#125; from '@angular/core';\\nimport &#123;TerminalService&#125; from 'primeng/components/terminal/terminalservice';\\n\\n@Component(&#123;\\n    template: '&lt;p-terminal welcomeMessage=\\\"Welcome to PrimeNG\\\" prompt=\\\"primeng $\\\"&gt;&lt;/p-terminal&gt;',\\n    providers: [TerminalService]\\n&#125;)\\nexport class TerminalDemo &#123;\\n    \\n    constructor(private terminalService: TerminalService) &#123;\\n        this.terminalService.commandHandler.subscribe(command => &#123;\\n            let response = (command === 'date') ? new Date().toDateString() : 'Unknown command: ' + command;\\n            this.terminalService.sendResponse(response);\\n        &#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>welcomeMessage</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Initial text to display on terminal.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>prompt</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Prompt text for each command.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-terminal</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-terminal-content</td>\\n                            <td>Content of terminal.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-terminal-content-prompt</td>\\n                            <td>Prompt text.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-terminal-input</td>\\n                            <td>Input element to enter commands.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/terminal\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-terminal-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n        <pre>\\n        <code class=\\\"language-markup\\\" pCode ngNonBindable>\\n        &lt;p-terminal welcomeMessage=\\\"Welcome to PrimeNG\\\" prompt=\\\"primeng $\\\"&gt;&lt;/p-terminal&gt;\\n        </code>\\n        </pre>\\n            \\n        <pre>\\n        <code class=\\\"language-typescript\\\" pCode ngNonBindable>\\n        import &#123;Component&#125; from '@angular/core';\\n        import &#123;TerminalService&#125; from 'primeng/components/terminal/terminalservice';\\n        import &#123;Subscription&#125; from 'rxjs/Subscription';\\n\\n        @Component(&#123;\\n            templateUrl: './terminaldemo.html',\\n            providers: [TerminalService]\\n        &#125;)\\n        export class TerminalDemo &#123;\\n\\n            subscription: Subscription;\\n            \\n            constructor(private terminalService: TerminalService) &#123;\\n                this.terminalService.commandHandler.subscribe(command => &#123;\\n                    let response = (command === 'date') ? new Date().toDateString() : 'Unknown command: ' + command;\\n                    this.terminalService.sendResponse(response);\\n                &#125;);\\n            &#125;\\n            \\n            ngOnDestroy() &#123;\\n                if (this.subscription) &#123;\\n                    this.subscription.unsubscribe();\\n                &#125;\\n            &#125;\\n        &#125;\\n        </code>\\n        </pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-terminal-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {TerminalDemo} from './terminaldemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: TerminalDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class TerminalDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TerminalDemo} from './terminaldemo';\nimport {TerminalDemoRoutingModule} from './terminaldemo-routing.module';\nimport {TerminalModule} from 'primeng/terminal';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTerminalDemoRoutingModule,\n        TerminalModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tTerminalDemo\n\t]\n})\nexport class TerminalDemoModule {}\n","import {Component,OnDestroy} from '@angular/core';\nimport {TerminalService} from '../../../components/terminal/terminalservice';\nimport {Subscription}   from 'rxjs';\n\n@Component({\n    templateUrl: './terminaldemo.html',\n    providers: [TerminalService]\n})\nexport class TerminalDemo implements OnDestroy {\n    \n    subscription: Subscription;\n    \n    constructor(private terminalService: TerminalService) {\n        this.subscription = this.terminalService.commandHandler.subscribe(command => {\n            let response = (command === 'date') ? new Date().toDateString() : 'Unknown command: ' + command;\n            this.terminalService.sendResponse(response);\n        });\n    }\n    \n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}"]}