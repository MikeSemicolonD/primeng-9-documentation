{"version":3,"sources":["./src/app/showcase/components/splitbutton/splitbuttondemo.html","./src/app/showcase/components/splitbutton/splitbuttondemo-routing.module.ts","./src/app/showcase/components/splitbutton/splitbuttondemo.module.ts","./src/app/showcase/components/splitbutton/splitbuttondemo.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0pDAA2lD,uBAAuB,4BAA4B,wPAAwP,4FAA4F,IAAI,kBAAkB,6WAA6W,gKAAgK,IAAI,kBAAkB,g1LAAg1L,wGAAwG,IAAI,kBAAkB,0rDAA0rD,2JAA2J,wBAAwB,uBAAuB,MAAM,IAAI,YAAY,QAAQ,sBAAsB,SAAS,OAAO,MAAM,iGAAiG,IAAI,kBAAkB,QAAQ,MAAM,cAAc,OAAO,MAAM,oIAAoI,IAAI,kBAAkB,MAAM,qIAAqI,IAAI,kBAAkB,MAAM,+HAA+H,IAAI,kBAAkB,MAAM,kIAAkI,IAAI,kBAAkB,MAAM,kIAAkI,IAAI,kBAAkB,QAAQ,MAAM,OAAO,OAAO,MAAM,6GAA6G,IAAI,kBAAkB,yIAAyI,0BAA0B,kEAAkE,MAAM,yBAAyB,4CAA4C,6DAA6D,gCAAgC,oBAAoB,MAAM,qBAAqB,2DAA2D,gCAAgC,oBAAoB,MAAM,qBAAqB,uEAAuE,qBAAqB,qBAAqB,qBAAqB,+DAA+D,YAAY,YAAY,qCAAqC,wCAAwC,+DAA+D,EAAE,YAAY,uBAAuB,wCAAwC,kEAAkE,EAAE,YAAY,uBAAuB,wCAAwC,kEAAkE,EAAE,YAAY,QAAQ,wPAAwP,eAAe,cAAc,8FAA8F,E;;;;;;;;;;;;;;;;;;;ACA5ka;AACK;AACM;AAYlD,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;AAA/B,4BAA4B;IAVxC,8DAAQ,CAAC;QACT,OAAO,EAAE;YACR,4DAAY,CAAC,QAAQ,CAAC;gBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,gEAAe,EAAC;aACpC,CAAC;SACF;QACD,OAAO,EAAE;YACR,4DAAY;SACZ;KACD,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACdF;AACM;AACK;AAC4B;AACxB;AACZ;AACI;AACgB;AAe9D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;AAAxB,qBAAqB;IAbjC,8DAAQ,CAAC;QACT,OAAO,EAAE;YACR,4DAAY;YACZ,4FAA4B;YACtB,qEAAiB;YACjB,yDAAW;YACX,6DAAa;YACb,6EAAqB;SAC3B;QACD,YAAY,EAAE;YACb,gEAAe;SACf;KACD,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;ACtBa;AACJ;AAY3C,IAAa,eAAe,GAA5B,MAAa,eAAe;IAIxB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,QAAQ;QACJ,IAAI,CAAC,KAAK,GAAG;YACT,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,GAAG,EAAE;oBACnD,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,EAAC;YACF,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE;oBACjD,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,EAAC;YACF,EAAC,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,mBAAmB,EAAC;YACnE,EAAC,SAAS,EAAC,IAAI,EAAC;YAChB,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAC;SAC9D,CAAC;IACN,CAAC;IAED,IAAI,CAAC,QAAgB;QACjB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAC,SAAS,EAAE,MAAM,EAAC,YAAY,EAAC,CAAC,CAAC;IAC1F,CAAC;IAED,MAAM;QACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,EAAC,SAAS,EAAE,MAAM,EAAC,cAAc,EAAC,CAAC,CAAC;IAC5F,CAAC;IAED,MAAM;QACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,EAAC,SAAS,EAAE,MAAM,EAAC,cAAc,EAAC,CAAC,CAAC;IAC5F,CAAC;CAEJ;;YA5BuC,0DAAc;;AAJzC,eAAe;IAT3B,+DAAS,CAAC;QACP,qPAAqC;QACrC,SAAS,EAAE,CAAC,0DAAc,CAAC;;KAM9B,CAAC;mFAKsC,0DAAc;GAJzC,eAAe,CAgC3B;AAhC2B","file":"components-splitbutton-splitbuttondemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">SplitButton</span>\\n        <span>SplitButton groups a set of commands in an overlay with a default command.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-toast></p-toast>\\n\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\"></p-splitButton>\\n\\n    <h3>Severities</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-secondary\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('success')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-success\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-info\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('warn')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('error')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-danger\\\"></p-splitButton>\\n\\n    <h3>RTL</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" dir=\\\"rtl\\\"></p-splitButton>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n                    <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SplitButtonModule&#125; from 'primeng/splitbutton';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>SplitButton has a default command button and a collection of menuitems to be displayed in an overlay.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n\\n            <h3>Animation Configuration</h3>\\n            <p>Transition of the open and hide animations can be customized using the <i>showTransitionOptions</i> and <i>hideTransitionOptions</i> properties, \\n                example below disables the animations altogether.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton [showTransitionOptions]=\\\"'0ms'\\\" [hideTransitionOptions]=\\\"'0ms'\\\" label=\\\"Save\\\" icon=\\\"pi pi-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n            <h3>MenuModel API</h3>\\n            <p>SplitButton uses the common menumodel api to define its items, visit <a [routerLink]=\\\"['/menumodel']\\\">MenuModel API</a> for details.</p>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>label</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Text of the button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>icon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Name of the icon.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>iconPos</td>\\n                            <td>string</td>\\n                            <td>left</td>\\n                            <td>Position of the icon, valid values are \\\"left\\\" and \\\"right\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>menuStyle</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the overlay menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>menuStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the overlay menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the overlay, valid values are \\\"body\\\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\\\"mydiv\\\" for a div element having #mydiv as variable name).</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the component should be disabled.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>tabindex</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>dir</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Indicates the direction of the element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>225ms ease-out</td>\\n                            <td>Transition options of the show animation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hideTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>195ms ease-in</td>\\n                            <td>Transition options of the hide animation.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onClick</td>\\n                            <td>event: browser event<br></td>\\n                            <td>Callback to invoke when default command button is clicked.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onDropdownClick</td>\\n                            <td>event: browser event<br></td>\\n                            <td>Callback to invoke when dropdown button is clicked.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n          <h3>Severity</h3>\\n          <p>Different color options are available to define severity levels.</p>\\n\\n          <ul>\\n            <li>.ui-button-secondary</li>\\n            <li>.ui-button-success</li>\\n            <li>.ui-button-info</li>\\n            <li>.ui-button-warning</li>\\n            <li>.ui-button-danger</li>\\n          </ul>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-check\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>. SplitButton uses\\n            button and menu components internally, refer to their documentation for the detailed style list.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-splitbutton</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-splitbutton-button</td>\\n                            <td>Dropdown button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menu</td>\\n                            <td>Overlay menu.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/splitbutton\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-splitbutton-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\n\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n\\n&lt;h3&gt;Severities&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-secondary\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('success')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-success\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-info\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('warn')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('error')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-danger\\\"&gt;&lt;/p-splitButton&gt;\\n\\n&lt;h3&gt;RTL&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" dir=\\\"rtl\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class SplitButtonDemo implements OnInit &#123;\\n\\n    items: MenuItem[];\\n\\n    constructor(private messageService: MessageService) &#123;&#125;\\n\\n    ngOnInit() &#123;\\n        this.items = [\\n            &#123;label: 'Update', icon: 'pi pi-refresh', command: () => &#123;\\n                this.update();\\n            &#125;&#125;,\\n            &#123;label: 'Delete', icon: 'pi pi-times', command: () => &#123;\\n                this.delete();\\n            &#125;&#125;,\\n            &#123;label: 'Angular.io', icon: 'pi pi-info', url: 'http://angular.io'&#125;,\\n            &#123;separator: true&#125;,\\n            &#123;label: 'Setup', icon: 'pi pi-cog', routerLink: ['/setup']&#125;\\n        ];\\n    &#125;\\n\\n    save(severity: string) &#123;\\n        this.messageService.add(&#123;severity:severity, summary:'Success', detail:'Data Saved'&#125;);\\n    &#125;\\n\\n    update() &#123;\\n        this.messageService.add(&#123;severity:'success', summary:'Success', detail:'Data Updated'&#125;);\\n    &#125;\\n\\n    delete() &#123;\\n        this.messageService.add(&#123;severity:'success', summary:'Success', detail:'Data Deleted'&#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-splitbutton-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n     </p-tabView >\\n</div>\\n\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {SplitButtonDemo} from './splitbuttondemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: SplitButtonDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class SplitButtonDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SplitButtonDemo} from './splitbuttondemo';\nimport {SplitButtonDemoRoutingModule} from './splitbuttondemo-routing.module';\nimport {SplitButtonModule} from 'primeng/splitbutton';\nimport {ToastModule} from 'primeng/toast';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSplitButtonDemoRoutingModule,\n        SplitButtonModule,\n        ToastModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tSplitButtonDemo\n\t]\n})\nexport class SplitButtonDemoModule {}\n","import {Component,OnInit} from '@angular/core';\nimport {MessageService} from 'primeng/api';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n    templateUrl: './splitbuttondemo.html',\n    providers: [MessageService],\n    styles: [`\n        :host ::ng-deep .ui-splitbutton {\n            margin-right: .25em;\n        }\n    `]\n})\nexport class SplitButtonDemo implements OnInit {\n    \n    items: MenuItem[];\n    \n    constructor(private messageService: MessageService) {}\n    \n    ngOnInit() {\n        this.items = [\n            {label: 'Update', icon: 'pi pi-refresh', command: () => {\n                this.update();\n            }},\n            {label: 'Delete', icon: 'pi pi-times', command: () => {\n                this.delete();\n            }},\n            {label: 'Angular.io', icon: 'pi pi-info', url: 'http://angular.io'},\n            {separator:true},\n            {label: 'Setup', icon: 'pi pi-cog', routerLink: ['/setup']}\n        ];\n    }\n\n    save(severity: string) {\n        this.messageService.add({severity: severity, summary:'Success', detail:'Data Saved'});\n    }\n    \n    update() {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Data Updated'});\n    }\n    \n    delete() {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Data Deleted'});\n    }\n\n}\n"],"sourceRoot":"webpack:///"}