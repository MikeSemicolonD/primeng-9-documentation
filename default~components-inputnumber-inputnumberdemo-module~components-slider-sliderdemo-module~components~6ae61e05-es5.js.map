{"version":3,"sources":["webpack:///src/app/components/slider/public_api.ts","webpack:///src/app/components/slider/slider.ts"],"names":["SLIDER_VALUE_ACCESSOR","provide","useExisting","Slider","multi","el","renderer","ngZone","cd","min","max","orientation","tabindex","onChange","onSlideEnd","handleValues","onModelChange","onModelTouched","handleIndex","onMouseDown","event","index","disabled","dragging","updateDomData","sliderHandleClick","bindDragListeners","target","focus","preventDefault","onTouchStart","touchobj","changedTouches","startHandleValue","range","handleValue","startx","parseInt","clientX","barWidth","nativeElement","children","offsetWidth","starty","clientY","barHeight","offsetHeight","onTouchMove","Math","floor","setValueFromHandle","onTouchEnd","emit","originalEvent","values","value","onBarClick","handleChange","onHandleKeydown","which","spin","dir","step","updateValue","updateHandleValue","calculateHandleValue","runOutsideAngular","dragListener","listen","run","mouseupListener","unbindDragListeners","newValue","getValueFromHandle","handleStepChange","oldValue","diff","val","ceil","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isVertical","rect","getBoundingClientRect","initX","left","getWindowScrollLeft","initY","top","getWindowScrollTop","pageX","pageY","sliderHandleStart","sliderHandleEnd","getNormalizedValue","slice","sliderHandle","getDecimalsCount","toString","split","length","decimalsCount","toFixed","ngOnDestroy","selector","template","providers","changeDetection","Default","SliderModule","imports","exports","declarations"],"mappings":"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","file":"default~components-inputnumber-inputnumberdemo-module~components-slider-sliderdemo-module~components~6ae61e05-es5.js","sourcesContent":["export * from './slider';","import {NgModule, Component, ElementRef, OnDestroy, Input, Output, EventEmitter, forwardRef, Renderer2,NgZone,ChangeDetectorRef, ViewChild, ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Slider),\n  multi: true\n};\n\n@Component({\n    selector: 'p-slider',\n    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'ui-slider ui-widget ui-widget-content ui-corner-all':true,'ui-state-disabled':disabled,\n            'ui-slider-horizontal':orientation == 'horizontal','ui-slider-vertical':orientation == 'vertical','ui-slider-animate':animate}\"\n            (click)=\"onBarClick($event)\">\n            <span *ngIf=\"range && orientation == 'horizontal'\" class=\"ui-slider-range ui-widget-header ui-corner-all\" [ngStyle]=\"{'left':handleValues[0] + '%',width: (handleValues[1] - handleValues[0] + '%')}\"></span>\n            <span *ngIf=\"range && orientation == 'vertical'\" class=\"ui-slider-range ui-widget-header ui-corner-all\" [ngStyle]=\"{'bottom':handleValues[0] + '%',height: (handleValues[1] - handleValues[0] + '%')}\"></span>\n            <span *ngIf=\"!range && orientation=='vertical'\" class=\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\" [ngStyle]=\"{'height': handleValue + '%'}\"></span>\n            <span *ngIf=\"!range && orientation=='horizontal'\" class=\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\" [ngStyle]=\"{'width': handleValue + '%'}\"></span>\n            <span #sliderHandle *ngIf=\"!range\" [attr.tabindex]=\"tabindex\" (keydown)=\"onHandleKeydown($event)\" class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\" (mousedown)=\"onMouseDown($event)\" (touchstart)=\"onTouchStart($event)\" (touchmove)=\"onTouchMove($event)\" (touchend)=\"onTouchEnd($event)\"\n                [style.transition]=\"dragging ? 'none': null\" [ngStyle]=\"{'left': orientation == 'horizontal' ? handleValue + '%' : null,'bottom': orientation == 'vertical' ? handleValue + '%' : null}\"\n                [attr.aria-valuemin]=\"min\" [attr.aria-valuenow]=\"value\" [attr.aria-valuemax]=\"max\" [attr.aria-labelledby]=\"ariaLabelledBy\"></span>\n            <span #sliderHandleStart *ngIf=\"range\" [attr.tabindex]=\"tabindex\" (keydown)=\"onHandleKeydown($event,0)\" (mousedown)=\"onMouseDown($event,0)\" (touchstart)=\"onTouchStart($event,0)\" (touchmove)=\"onTouchMove($event,0)\" (touchend)=\"onTouchEnd($event)\" [style.transition]=\"dragging ? 'none': null\" class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\" \n                [ngStyle]=\"{'left': rangeStartLeft, 'bottom': rangeStartBottom}\" [ngClass]=\"{'ui-slider-handle-active':handleIndex==0}\"\n                [attr.aria-valuemin]=\"min\" [attr.aria-valuenow]=\"value ? value[0] : null\" [attr.aria-valuemax]=\"max\" [attr.aria-labelledby]=\"ariaLabelledBy\"></span>\n            <span #sliderHandleEnd *ngIf=\"range\" [attr.tabindex]=\"tabindex\" (keydown)=\"onHandleKeydown($event,1)\" (mousedown)=\"onMouseDown($event,1)\" (touchstart)=\"onTouchStart($event,1)\" (touchmove)=\"onTouchMove($event,1)\" (touchend)=\"onTouchEnd($event)\" [style.transition]=\"dragging ? 'none': null\" class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\" \n                [ngStyle]=\"{'left': rangeEndLeft, 'bottom': rangeEndBottom}\" [ngClass]=\"{'ui-slider-handle-active':handleIndex==1}\"\n                [attr.aria-valuemin]=\"min\" [attr.aria-valuenow]=\"value ? value[1] : null\" [attr.aria-valuemax]=\"max\" [attr.aria-labelledby]=\"ariaLabelledBy\"></span>\n        </div>\n    `,\n    providers: [SLIDER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Slider implements OnDestroy,ControlValueAccessor {\n\n    @Input() animate: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() min: number = 0;\n\n    @Input() max: number = 100;\n\n    @Input() orientation: string = 'horizontal';\n\n    @Input() step: number;\n\n    @Input() range: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number = 0;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onSlideEnd: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild(\"sliderHandle\") sliderHandle: ElementRef;\n\n    @ViewChild(\"sliderHandleStart\") sliderHandleStart: ElementRef;\n\n    @ViewChild(\"sliderHandleEnd\") sliderHandleEnd: ElementRef;\n\n    public value: number;\n    \n    public values: number[];\n    \n    public handleValue: number;\n    \n    public handleValues: number[] = [];\n        \n    public onModelChange: Function = () => {};\n    \n    public onModelTouched: Function = () => {};\n    \n    public dragging: boolean;\n    \n    public dragListener: any;\n    \n    public mouseupListener: any;\n        \n    public initX: number;\n    \n    public initY: number;\n    \n    public barWidth: number;\n    \n    public barHeight: number;\n    \n    public sliderHandleClick: boolean;\n    \n    public handleIndex: number = 0;\n\n    public startHandleValue: any;\n\n    public startx: number;\n\n    public starty: number;\n    \n    constructor(public el: ElementRef, public renderer: Renderer2, private ngZone: NgZone, public cd: ChangeDetectorRef) {}\n    \n    onMouseDown(event, index?:number) {\n        if (this.disabled) {\n            return;\n        }\n        \n        this.dragging = true;\n        this.updateDomData();\n        this.sliderHandleClick = true;\n        this.handleIndex = index;\n        this.bindDragListeners();\n        event.target.focus();\n        event.preventDefault();\n    }\n\n    onTouchStart(event, index?:number) {\n        if (this.disabled) {\n            return;\n        }\n\n        var touchobj = event.changedTouches[0];\n        this.startHandleValue = (this.range) ? this.handleValues[index] : this.handleValue;\n        this.dragging = true;\n        this.handleIndex = index;\n\n        if (this.orientation === 'horizontal') {\n            this.startx = parseInt(touchobj.clientX, 10);\n            this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n        }\n        else {\n            this.starty = parseInt(touchobj.clientY, 10);\n            this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n        }\n\n        event.preventDefault();\n    }\n\n    onTouchMove(event, index?:number) {\n        if (this.disabled) {\n            return;\n        }\n        \n        var touchobj = event.changedTouches[0],\n        handleValue = 0;\n\n        if (this.orientation === 'horizontal') {\n            handleValue = Math.floor(((parseInt(touchobj.clientX, 10) - this.startx) * 100) / (this.barWidth)) + this.startHandleValue;\n        }\n        else {\n            handleValue = Math.floor(((this.starty - parseInt(touchobj.clientY, 10)) * 100) / (this.barHeight))  + this.startHandleValue;\n        }\n\n        this.setValueFromHandle(event, handleValue);\n\n        event.preventDefault();\n    }\n\n    onTouchEnd(event, index?:number) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.dragging = false;\n        \n        if (this.range)\n            this.onSlideEnd.emit({originalEvent: event, values: this.values});\n        else\n            this.onSlideEnd.emit({originalEvent: event, value: this.value});\n        \n        event.preventDefault();\n    }\n    \n    onBarClick(event) {\n        if (this.disabled) {\n            return;\n        }\n        \n        if (!this.sliderHandleClick) {\n            this.updateDomData();\n            this.handleChange(event);\n        }\n        \n        this.sliderHandleClick = false;\n    }\n\n    onHandleKeydown(event, handleIndex?:number) {\n        if (event.which == 38 || event.which == 39) {\n            this.spin(event, 1, handleIndex);\n        }\n        else if (event.which == 37 || event.which == 40) {\n            this.spin(event, -1, handleIndex);\n        }\n    }\n    \n    spin(event, dir: number, handleIndex?:number) {\n        let step = (this.step || 1) * dir;\n\n        if (this.range) {\n            this.handleIndex = handleIndex;\n            this.updateValue(this.values[this.handleIndex] + step);\n            this.updateHandleValue();\n        }\n        else {\n            this.updateValue(this.value + step);\n            this.updateHandleValue();\n        }\n\n        event.preventDefault();\n    }\n\n    handleChange(event: Event) {\n        let handleValue = this.calculateHandleValue(event);\n        this.setValueFromHandle(event, handleValue);\n    }\n    \n    bindDragListeners() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.dragListener) {\n                this.dragListener = this.renderer.listen('document', 'mousemove', (event) => {\n                    if (this.dragging) {\n                        this.ngZone.run(() => {\n                            this.handleChange(event);\n                        });\n                    }\n                });\n            }\n\n            if (!this.mouseupListener) {\n                this.mouseupListener = this.renderer.listen('document', 'mouseup', (event) => {\n                    if (this.dragging) {\n                        this.dragging = false;\n                        this.ngZone.run(() => {\n                            if (this.range) {\n                                this.onSlideEnd.emit({originalEvent: event, values: this.values});\n                            } else {\n                                this.onSlideEnd.emit({originalEvent: event, value: this.value});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    }\n    \n    unbindDragListeners() {\n        if (this.dragListener) {\n            this.dragListener();\n        }\n        \n        if (this.mouseupListener) {\n            this.mouseupListener();\n        }\n    }\n\n    setValueFromHandle(event: Event, handleValue: any) {\n        let newValue = this.getValueFromHandle(handleValue);\n\n        if (this.range) {\n            if (this.step) {\n                this.handleStepChange(newValue, this.values[this.handleIndex]);\n            }\n            else {\n                this.handleValues[this.handleIndex] = handleValue;          \n                this.updateValue(newValue, event);\n            }\n        }\n        else {            \n            if (this.step) {\n                this.handleStepChange(newValue, this.value);\n            } \n            else {\n                this.handleValue = handleValue;\n                this.updateValue(newValue, event);\n            }         \n        }\n    }\n    \n    handleStepChange(newValue: number, oldValue: number) {\n        let diff = (newValue - oldValue);\n        let val = oldValue;\n        \n        if (diff < 0) {\n            val = oldValue + Math.ceil(newValue / this.step - oldValue / this.step) * this.step;\n        }\n        else if (diff > 0) {\n            val = oldValue + Math.floor(newValue / this.step - oldValue / this.step) * this.step;\n        }\n        \n        this.updateValue(val);\n        this.updateHandleValue();\n    }\n    \n    writeValue(value: any) : void {\n        if (this.range)\n            this.values = value||[0,0];\n        else\n            this.value = value||0;\n        \n        this.updateHandleValue();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    get rangeStartLeft() {\n        return this.isVertical() ? 'auto' : this.handleValues[0] + '%';\n    }\n    \n    get rangeStartBottom() {\n        return this.isVertical() ? this.handleValues[0] + '%' : 'auto';\n    }\n    \n    get rangeEndLeft() {\n        return this.isVertical() ? 'auto' : this.handleValues[1] + '%';\n    }\n    \n    get rangeEndBottom() {\n        return this.isVertical() ? this.handleValues[1] + '%' : 'auto';\n    }\n    \n    isVertical(): boolean {\n        return this.orientation === 'vertical';\n    }\n    \n    updateDomData(): void {\n        let rect = this.el.nativeElement.children[0].getBoundingClientRect();\n        this.initX = rect.left + DomHandler.getWindowScrollLeft();\n        this.initY = rect.top + DomHandler.getWindowScrollTop();\n        this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n        this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n    }\n    \n    calculateHandleValue(event): number {\n        if (this.orientation === 'horizontal')\n            return ((event.pageX - this.initX) * 100) / (this.barWidth);\n        else\n            return(((this.initY + this.barHeight) - event.pageY) * 100) / (this.barHeight);\n    }\n    \n    updateHandleValue(): void {\n        if (this.range) {\n            this.handleValues[0] = (this.values[0] < this.min ? 0 : this.values[0] - this.min) * 100 / (this.max - this.min);\n            this.handleValues[1] = (this.values[1] > this.max ? 100 : this.values[1] - this.min) * 100 / (this.max - this.min);\n        }\n        else {\n            if (this.value < this.min)\n                this.handleValue = 0;\n            else if (this.value > this.max)\n                this.handleValue = 100;\n            else\n                this.handleValue = (this.value - this.min) * 100 / (this.max - this.min);\n        }\n    }\n    \n    updateValue(val: number, event?: Event): void {\n        if (this.range) {\n            let value = val;\n            \n            if (this.handleIndex == 0) {\n                if (value < this.min) {\n                    value = this.min;\n                    this.handleValues[0] = 0;\n                }\n                else if (value > this.values[1]) {\n                    value = this.values[1];\n                    this.handleValues[0] = this.handleValues[1];\n                }\n\n                this.sliderHandleStart.nativeElement.focus();\n            }\n            else {\n                if (value > this.max) {\n                    value = this.max;\n                    this.handleValues[1] = 100;\n                }\n                else if (value < this.values[0]) {\n                    value = this.values[0];\n                    this.handleValues[1] = this.handleValues[0];\n                }\n\n                this.sliderHandleEnd.nativeElement.focus();\n            }\n            \n            this.values[this.handleIndex] = this.getNormalizedValue(value);\n            this.values = this.values.slice();\n            this.onModelChange(this.values);\n            this.onChange.emit({event: event, values: this.values});\n        }\n        else {\n            if (val < this.min) {\n                val = this.min;\n                this.handleValue = 0;\n            }\n            else if (val > this.max) {\n                val = this.max;\n                this.handleValue = 100;\n            }\n            \n\t\t\tthis.value = this.getNormalizedValue(val);\n            \n            this.onModelChange(this.value);\n            this.onChange.emit({event: event, value: this.value});\n            this.sliderHandle.nativeElement.focus();\n        }\n    }\n            \n    getValueFromHandle(handleValue: number): number {\n        return (this.max - this.min) * (handleValue / 100) + this.min;\n    }\n\t\n\tgetDecimalsCount(value: number): number {\n\t\tif (value && Math.floor(value) !== value)\n\t\t\treturn value.toString().split(\".\")[1].length || 0;\n\t\treturn 0;\n\t}\n\t\n\tgetNormalizedValue(val: number): number {\n\t\tlet decimalsCount = this.getDecimalsCount(this.step);\n\t\tif (decimalsCount > 0) {\n\t\t\treturn +val.toFixed(decimalsCount);\n\t\t} \n\t\telse {\n\t\t\treturn Math.floor(val);\n\t\t}\n\t}\n    \n    ngOnDestroy() {\n        this.unbindDragListeners();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Slider],\n    declarations: [Slider]\n})\nexport class SliderModule { }\n"]}