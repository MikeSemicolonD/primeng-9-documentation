{"version":3,"sources":["./src/app/showcase/components/progressbar/progressbardemo.html","./src/app/components/progressbar/progressbar.ts","./src/app/components/progressbar/public_api.ts","./src/app/showcase/components/progressbar/progressbardemo-routing.module.ts","./src/app/showcase/components/progressbar/progressbardemo.module.ts","./src/app/showcase/components/progressbar/progressbardemo.ts"],"names":[],"mappings":"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","file":"components-progressbar-progressbardemo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">ProgressBar</span>\\n        <span>ProgressBar is a process status indicator.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-toast></p-toast>\\n\\n    <h3 class=\\\"first\\\">Dynamic</h3>\\n    <p-progressBar [value]=\\\"value\\\"></p-progressBar>\\n\\n    <h3>Static</h3>\\n    <p-progressBar [value]=\\\"50\\\"></p-progressBar>\\n\\n    <h3>Indeterminate</h3>\\n    <p-progressBar mode=\\\"indeterminate\\\" [style]=\\\"{'height': '6px'}\\\"></p-progressBar>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView>\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;ProgressBarModule&#125; from 'primeng/progressbar';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>ProgressBar has two modes; \\\"determinate\\\" and \\\"indeterminate\\\". Former requires a value between 0 and 100 to display the progress.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-progressBar [value]=\\\"value\\\"&gt;&lt;/p-progressBar&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ModelComponent &#123;\\n\\n    value: number = 0;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <p>Indeterminate has no such a requirement and is simple enabled using <i>mode</i> property.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-progressBar mode=\\\"indeterminate\\\"&gt;&lt;/p-progressBar&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>value</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Current value of the progress.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showValue</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Show or hide progress bar value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>unit</td>\\n                            <td>string</td>\\n                            <td>%</td>\\n                            <td>Unit sign appended to the value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>mode</td>\\n                            <td>string</td>\\n                            <td>determinate</td>\\n                            <td>Defines the mode of the progress, valid values are \\\"determinate\\\" and \\\"indeterminate\\\".</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-progressbar</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-progressbar-determinate</td>\\n                            <td>Container element of a determinate progressbar.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-progressbar-indeterminate</td>\\n                            <td>Container element of an indeterminate progressbar.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-progressbar-value</td>\\n                            <td>Element whose width changes according to value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-progressbar-label</td>\\n                            <td>Label element that displays the current value.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/progressbar\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <span>View on GitHub</span>\\n            </a>\\n            <a href=\\\"https://stackblitz.com/edit/primeng-progressbar-demo\\\" class=\\\"btn-viewsource\\\" style=\\\"margin-left: .5em;\\\" target=\\\"_blank\\\">\\n                <span>Edit in StackBlitz</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\n\\n&lt;h3 class=\\\"first\\\"&gt;Dynamic&lt;/h3&gt;\\n&lt;p-progressBar [value]=\\\"value\\\"&gt;&lt;/p-progressBar&gt;\\n\\n&lt;h3&gt;Static&lt;/h3&gt;\\n&lt;p-progressBar [value]=\\\"50\\\"&gt;&lt;/p-progressBar&gt;\\n\\n&lt;h3&gt;Indeterminate&lt;/h3&gt;\\n&lt;p-progressBar mode=\\\"indeterminate\\\" [style]=\\\"&#123;'height': '6px'&#125;\\\"&gt;&lt;/p-progressBar&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ProgressBarDemo &#123;\\n\\n    value: number = 0;\\n\\n    constructor(private messageService: MessageService) &#123;&#125;\\n\\n    ngOnInit() &#123;\\n        let interval = setInterval(() => &#123;\\n            this.value = this.value + Math.floor(Math.random() * 10) + 1;\\n            if (this.value >= 100) &#123;\\n                this.value = 100;\\n                this.messageService.add(&#123;severity: 'info', summary: 'Success', detail: 'Process Completed'&#125;);\\n                clearInterval(interval);\\n            &#125;\\n        &#125;, 2000);\\n    &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"StackBlitz\\\">\\n            <ng-template pTemplate=\\\"content\\\">\\n                <iframe src=\\\"https://stackblitz.com/edit/primeng-progressbar-demo?embed=1\\\" style=\\\"width: 100%; height: 768px; border: none;\\\"></iframe>\\n            </ng-template>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\";","import {NgModule,Component,Input,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-progressBar',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" role=\"progressbar\" aria-valuemin=\"0\" [attr.aria-valuenow]=\"value\" aria-valuemax=\"100\"\n            [ngClass]=\"{'ui-progressbar ui-widget ui-widget-content ui-corner-all': true, 'ui-progressbar-determinate': (mode === 'determinate'), 'ui-progressbar-indeterminate': (mode === 'indeterminate')}\">\n            <div class=\"ui-progressbar-value ui-progressbar-value-animate ui-widget-header ui-corner-all\" [style.width]=\"value + '%'\" style=\"display:block\"></div>\n            <div class=\"ui-progressbar-label\" [style.display]=\"value != null ? 'block' : 'none'\" *ngIf=\"showValue\">{{value}}{{unit}}</div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ProgressBar {\n\n    @Input() value: any;\n    \n    @Input() showValue: boolean = true;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n\n    @Input() unit: string = '%';\n    \n    @Input() mode: string = 'determinate';\n    \n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ProgressBar],\n    declarations: [ProgressBar]\n})\nexport class ProgressBarModule { }","export * from './progressbar';","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ProgressBarDemo} from './progressbardemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: ProgressBarDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ProgressBarDemoRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProgressBarDemo} from './progressbardemo';\nimport {ProgressBarDemoRoutingModule} from './progressbardemo-routing.module';\nimport {ProgressBarModule} from 'primeng/progressbar';\nimport {ToastModule} from 'primeng/toast';\nimport {TabViewModule} from 'primeng/tabview';\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tProgressBarDemoRoutingModule,\n        ProgressBarModule,\n        ToastModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tProgressBarDemo\n\t]\n})\nexport class ProgressBarDemoModule {}\n","import {Component,OnInit} from '@angular/core';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n    templateUrl: './progressbardemo.html',\n    providers: [MessageService]\n})\nexport class ProgressBarDemo {\n\n    value: number = 0;\n    \n    constructor(private messageService: MessageService) {}\n\n    ngOnInit() {\n        let interval = setInterval(() => {\n            this.value = this.value + Math.floor(Math.random() * 10) + 1;\n            if (this.value >= 100) {\n                this.value = 100;\n                this.messageService.add({severity: 'info', summary: 'Success', detail: 'Process Completed'});\n                clearInterval(interval);\n            }\n        }, 2000);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}